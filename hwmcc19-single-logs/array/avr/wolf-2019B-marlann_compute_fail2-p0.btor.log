c host: c3n11
c start: Fri Oct 18 21:26:13 CEST 2019
c arrayjobid: 17567257
c jobid: 17567618
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019B/marlann_compute_fail2-p0.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567618.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 4500)
@     0s  (started worker 1 with pid 4501)
@     0s  (started worker 2 with pid 4502)
@     0s  (started worker 3 with pid 4503)
@     0s  (started worker 4 with pid 4504)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 4620)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 284 MB)
@     1s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@     2s  (started worker 6 with pid 4677)
@     2s  (spawned 1 workers)
@     2s  (total 6 workers using 337 MB)
@     3s  (started worker 7 with pid 4733)
@     3s  (spawned 1 workers)
@     3s  (total 7 workers using 449 MB)
@     4s  (started worker 8 with pid 4795)
@     4s  (spawned 1 workers)
@     4s  (total 8 workers using 527 MB)
@     5s  (started worker 9 with pid 4879)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 682 MB)
@     6s  (started worker 10 with pid 4953)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 908 MB)
@    15s  (total 10 workers using 1623 MB)
@    26s  (total 10 workers using 2090 MB)
@    38s  (total 10 workers using 2299 MB)
@    49s  (total 10 workers using 2666 MB)
@    60s  (total 10 workers using 3018 MB)
@    71s  (total 10 workers using 3438 MB)
@    82s  (total 10 workers using 3708 MB)
@    93s  (total 10 workers using 3813 MB)
@   104s  (total 10 workers using 3893 MB)
@   115s  (total 10 workers using 4178 MB)
@   126s  (total 10 workers using 4243 MB)
@   137s  (total 10 workers using 4383 MB)
@   148s  (total 10 workers using 4815 MB)
@   159s  (total 10 workers using 4879 MB)
@   169s  (total 10 workers using 5069 MB)
@   181s  (total 10 workers using 5260 MB)
@   191s  (total 10 workers using 5570 MB)
@   202s  (total 10 workers using 5508 MB)
@   213s  (total 10 workers using 5826 MB)
@   224s  (total 10 workers using 6154 MB)
@   235s  (total 10 workers using 6033 MB)
@   246s  (total 10 workers using 6138 MB)
@   257s  (total 10 workers using 6416 MB)
@   268s  (total 10 workers using 6548 MB)
@   279s  (total 10 workers using 6327 MB)
@   290s  (total 10 workers using 6376 MB)
@   301s  (total 10 workers using 6638 MB)
@   312s  (total 10 workers using 6587 MB)
@   322s  (total 10 workers using 6867 MB)
@   334s  (total 10 workers using 7231 MB)
@   344s  (total 10 workers using 7329 MB)
@   355s  (total 10 workers using 7353 MB)
@   366s  (total 10 workers using 7655 MB)
@   377s  (total 10 workers using 7580 MB)
@   388s  (total 10 workers using 7792 MB)
@   399s  (total 10 workers using 7724 MB)
@   410s  (total 10 workers using 7845 MB)
@   421s  (total 10 workers using 8358 MB)
@   432s  (total 10 workers using 8588 MB)
@   443s  (total 10 workers using 8681 MB)
@   454s  (total 10 workers using 9024 MB)
@   465s  (total 10 workers using 9076 MB)
@   476s  (total 10 workers using 9252 MB)
@   487s  (total 10 workers using 9303 MB)
@   498s  (total 10 workers using 9245 MB)
@   509s  (total 10 workers using 9177 MB)
@   519s  (total 10 workers using 9216 MB)
@   531s  (total 10 workers using 9010 MB)
@   541s  (total 10 workers using 9397 MB)
@   552s  (total 10 workers using 9284 MB)
@   563s  (total 10 workers using 9121 MB)
@   574s  (total 10 workers using 9425 MB)
@   585s  (total 10 workers using 9036 MB)
@   596s  (total 10 workers using 9633 MB)
@   607s  (total 10 workers using 9613 MB)
@   618s  (total 10 workers using 9898 MB)
@   629s  (total 10 workers using 9922 MB)
@   640s  (total 10 workers using 9743 MB)
@   651s  (total 10 workers using 10037 MB)
@   662s  (total 10 workers using 10035 MB)
@   673s  (total 10 workers using 9983 MB)
@   684s  (total 10 workers using 10198 MB)
@   694s  (total 10 workers using 10283 MB)
@   706s  (total 10 workers using 10381 MB)
@   716s  (total 10 workers using 10600 MB)
@   727s  (total 10 workers using 11086 MB)
@   738s  (total 10 workers using 10892 MB)
@   749s  (total 10 workers using 10892 MB)
@   760s  (total 10 workers using 10726 MB)
@   771s  (total 10 workers using 10655 MB)
@   782s  (total 10 workers using 10687 MB)
@   793s  (total 10 workers using 10718 MB)
@   804s  (total 10 workers using 11354 MB)
@   815s  (total 10 workers using 11262 MB)
@   826s  (total 10 workers using 11529 MB)
@   837s  (total 10 workers using 11579 MB)
@   848s  (total 10 workers using 11522 MB)
@   859s  (total 10 workers using 11373 MB)
@   869s  (total 10 workers using 11450 MB)
@   881s  (total 10 workers using 11742 MB)
@   891s  (total 10 workers using 11385 MB)
@   902s  (total 10 workers using 12002 MB)
@   913s  (total 10 workers using 11496 MB)
@   924s  (total 10 workers using 11874 MB)
@   935s  (total 10 workers using 12155 MB)
@   946s  (total 10 workers using 12190 MB)
@   957s  (total 10 workers using 12163 MB)
@   968s  (total 10 workers using 11953 MB)
@   979s  (total 10 workers using 11866 MB)
@   990s  (total 10 workers using 12002 MB)
@  1001s  (total 10 workers using 12029 MB)
@  1012s  (total 10 workers using 12044 MB)
@  1022s  (total 10 workers using 11854 MB)
@  1034s  (total 10 workers using 12007 MB)
@  1044s  (total 10 workers using 11779 MB)
@  1055s  (total 10 workers using 12252 MB)
@  1066s  (total 10 workers using 11956 MB)
@  1077s  (total 10 workers using 12177 MB)
@  1088s  (total 10 workers using 12070 MB)
@  1099s  (total 10 workers using 12456 MB)
@  1110s  (total 10 workers using 12433 MB)
@  1121s  (total 10 workers using 12413 MB)
@  1132s  (total 10 workers using 12274 MB)
@  1143s  (total 10 workers using 12526 MB)
@  1154s  (total 10 workers using 12577 MB)
@  1165s  (total 10 workers using 12284 MB)
@  1176s  (total 10 workers using 12460 MB)
@  1187s  (total 10 workers using 12969 MB)
@  1198s  (total 10 workers using 12822 MB)
@  1209s  (total 10 workers using 12981 MB)
@  1219s  (total 10 workers using 13104 MB)
@  1230s  (total 10 workers using 13055 MB)
@  1241s  (total 10 workers using 13082 MB)
@  1252s  (total 10 workers using 12889 MB)
@  1263s  (total 10 workers using 13798 MB)
@  1274s  (total 10 workers using 13385 MB)
@  1285s  (total 10 workers using 13749 MB)
@  1296s  (total 10 workers using 13693 MB)
@  1307s  (total 10 workers using 13625 MB)
@  1318s  (total 10 workers using 13827 MB)
@  1329s  (total 10 workers using 14174 MB)
@  1340s  (total 10 workers using 14234 MB)
@  1351s  (total 10 workers using 14594 MB)
@  1362s  (total 10 workers using 14284 MB)
@  1373s  (total 10 workers using 14490 MB)
@  1384s  (total 10 workers using 14693 MB)
@  1394s  (total 10 workers using 14943 MB)
@  1405s  (total 10 workers using 14539 MB)
@  1416s  (total 10 workers using 14762 MB)
@  1427s  (total 10 workers using 14707 MB)
@  1438s  (total 10 workers using 15180 MB)
@  1449s  (total 10 workers using 15124 MB)
@  1460s  (total 10 workers using 15154 MB)
@  1471s  (total 10 workers using 15083 MB)
@  1482s  (total 10 workers using 15264 MB)
@  1493s  (total 10 workers using 15335 MB)
@  1504s  (total 10 workers using 15284 MB)
@  1515s  (total 10 workers using 14670 MB)
@  1526s  (total 10 workers using 14901 MB)
@  1537s  (total 10 workers using 15116 MB)
@  1547s  (total 10 workers using 15032 MB)
@  1558s  (total 10 workers using 15114 MB)
@  1563s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  1569s  (total 9 workers using 9653 MB)
@  1580s  (total 9 workers using 9659 MB)
@  1591s  (total 9 workers using 9382 MB)
@  1602s  (total 9 workers using 9698 MB)
@  1613s  (total 9 workers using 9828 MB)
@  1623s  (total 9 workers using 9659 MB)
@  1634s  (total 9 workers using 9924 MB)
@  1645s  (total 9 workers using 10022 MB)
@  1656s  (total 9 workers using 9818 MB)
@  1667s  (total 9 workers using 10032 MB)
@  1677s  (total 9 workers using 9998 MB)
@  1688s  (total 9 workers using 9305 MB)
@  1699s  (total 9 workers using 9807 MB)
@  1710s  (total 9 workers using 9649 MB)
@  1721s  (total 9 workers using 10145 MB)
@  1732s  (total 9 workers using 9916 MB)
@  1742s  (total 9 workers using 9901 MB)
@  1753s  (total 9 workers using 10378 MB)
@  1764s  (total 9 workers using 9779 MB)
@  1775s  (total 9 workers using 9780 MB)
@  1785s  (total 9 workers using 10099 MB)
@  1796s  (total 9 workers using 9853 MB)
@  1807s  (total 9 workers using 10135 MB)
@  1818s  (total 9 workers using 10588 MB)
@  1829s  (total 9 workers using 10823 MB)
@  1840s  (total 9 workers using 11073 MB)
@  1850s  (total 9 workers using 10400 MB)
@  1861s  (total 9 workers using 10556 MB)
@  1872s  (total 9 workers using 11072 MB)
@  1883s  (total 9 workers using 10703 MB)
@  1893s  (total 9 workers using 11394 MB)
@  1904s  (total 9 workers using 10796 MB)
@  1915s  (total 9 workers using 10998 MB)
@  1926s  (total 9 workers using 11088 MB)
@  1937s  (total 9 workers using 10966 MB)
@  1948s  (total 9 workers using 11417 MB)
@  1958s  (total 9 workers using 11412 MB)
@  1969s  (total 9 workers using 11219 MB)
@  1980s  (total 9 workers using 11791 MB)
@  1991s  (total 9 workers using 11577 MB)
@  2001s  (total 9 workers using 12020 MB)
@  2012s  (total 9 workers using 12167 MB)
@  2023s  (total 9 workers using 11872 MB)
@  2034s  (total 9 workers using 12139 MB)
@  2045s  (total 9 workers using 11302 MB)
@  2056s  (total 9 workers using 11900 MB)
@  2066s  (total 9 workers using 11956 MB)
@  2077s  (total 9 workers using 12053 MB)
@  2088s  (total 9 workers using 11947 MB)
@  2099s  (total 9 workers using 12073 MB)
@  2110s  (total 9 workers using 12424 MB)
@  2120s  (total 9 workers using 11380 MB)
@  2131s  (total 9 workers using 12093 MB)
@  2142s  (total 9 workers using 12375 MB)
@  2153s  (total 9 workers using 11886 MB)
@  2164s  (total 9 workers using 12165 MB)
@  2174s  (total 9 workers using 12365 MB)
@  2185s  (total 9 workers using 12277 MB)
@  2196s  (total 9 workers using 12091 MB)
@  2207s  (total 9 workers using 12352 MB)
@  2218s  (total 9 workers using 12744 MB)
@  2229s  (total 9 workers using 12434 MB)
@  2239s  (total 9 workers using 12825 MB)
@  2250s  (total 9 workers using 12396 MB)
@  2261s  (total 9 workers using 12844 MB)
@  2272s  (total 9 workers using 12570 MB)
@  2282s  (total 9 workers using 12551 MB)
@  2293s  (total 9 workers using 12594 MB)
@  2304s  (total 9 workers using 12786 MB)
@  2315s  (total 9 workers using 12397 MB)
@  2326s  (total 9 workers using 12045 MB)
@  2337s  (total 9 workers using 12962 MB)
@  2347s  (total 9 workers using 12807 MB)
@  2358s  (total 9 workers using 13272 MB)
@  2369s  (total 9 workers using 12119 MB)
@  2380s  (total 9 workers using 12846 MB)
@  2391s  (total 9 workers using 12750 MB)
@  2402s  (total 9 workers using 12992 MB)
@  2412s  (total 9 workers using 12949 MB)
@  2423s  (total 9 workers using 12700 MB)
@  2434s  (total 9 workers using 13068 MB)
@  2445s  (total 9 workers using 13042 MB)
@  2455s  (total 9 workers using 12965 MB)
@  2466s  (total 9 workers using 13246 MB)
@  2477s  (total 9 workers using 12966 MB)
@  2488s  (total 9 workers using 12799 MB)
@  2499s  (total 9 workers using 13249 MB)
@  2510s  (total 9 workers using 12981 MB)
@  2520s  (total 9 workers using 13205 MB)
@  2531s  (total 9 workers using 13311 MB)
@  2542s  (total 9 workers using 13370 MB)
@  2553s  (total 9 workers using 13306 MB)
@  2564s  (total 9 workers using 13250 MB)
@  2574s  (total 9 workers using 13050 MB)
@  2579s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  2585s  (total 8 workers using 11634 MB)
@  2596s  (total 8 workers using 12503 MB)
@  2607s  (total 8 workers using 12407 MB)
@  2617s  (total 8 workers using 11547 MB)
@  2628s  (total 8 workers using 11865 MB)
@  2639s  (total 8 workers using 12225 MB)
@  2649s  (total 8 workers using 12296 MB)
@  2660s  (total 8 workers using 11710 MB)
@  2671s  (total 8 workers using 12618 MB)
@  2682s  (total 8 workers using 12472 MB)
@  2692s  (total 8 workers using 11638 MB)
@  2703s  (total 8 workers using 12342 MB)
@  2714s  (total 8 workers using 12083 MB)
@  2724s  (total 8 workers using 12376 MB)
@  2735s  (total 8 workers using 12208 MB)
@  2746s  (total 8 workers using 12389 MB)
@  2756s  (total 8 workers using 12263 MB)
@  2767s  (total 8 workers using 12493 MB)
@  2778s  (total 8 workers using 12434 MB)
@  2789s  (total 8 workers using 12498 MB)
@  2799s  (total 8 workers using 12819 MB)
@  2810s  (total 8 workers using 12537 MB)
@  2821s  (total 8 workers using 12705 MB)
@  2831s  (total 8 workers using 12786 MB)
@  2842s  (total 8 workers using 12665 MB)
@  2853s  (total 8 workers using 12677 MB)
@  2864s  (total 8 workers using 12899 MB)
@  2874s  (total 8 workers using 12849 MB)
@  2885s  (total 8 workers using 12889 MB)
@  2896s  (total 8 workers using 12845 MB)
@  2906s  (total 8 workers using 12895 MB)
@  2917s  (total 8 workers using 13278 MB)
@  2928s  (total 8 workers using 13130 MB)
@  2939s  (total 8 workers using 13442 MB)
@  2949s  (total 8 workers using 13194 MB)
@  2960s  (total 8 workers using 12731 MB)
@  2971s  (total 8 workers using 13000 MB)
@  2982s  (total 8 workers using 12684 MB)
@  2992s  (total 8 workers using 13112 MB)
@  3003s  (total 8 workers using 13259 MB)
@  3014s  (total 8 workers using 13470 MB)
@  3025s  (total 8 workers using 12538 MB)
@  3035s  (total 8 workers using 13644 MB)
@  3046s  (total 8 workers using 13190 MB)
@  3057s  (total 8 workers using 13659 MB)
@  3067s  (total 8 workers using 13187 MB)
@  3078s  (total 8 workers using 13344 MB)
@  3089s  (total 8 workers using 13175 MB)
@  3099s  (total 8 workers using 13425 MB)
@  3110s  (total 8 workers using 13824 MB)
@  3121s  (total 8 workers using 13603 MB)
@  3132s  (total 8 workers using 12911 MB)
@  3142s  (total 8 workers using 13464 MB)
@  3153s  (total 8 workers using 13691 MB)
@  3164s  (total 8 workers using 13539 MB)
@  3175s  (total 8 workers using 13660 MB)
@  3185s  (total 8 workers using 13854 MB)
@  3196s  (total 8 workers using 13784 MB)
@  3207s  (total 8 workers using 13305 MB)
@  3217s  (total 8 workers using 13767 MB)
@  3228s  (total 8 workers using 13181 MB)
@  3234s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3239s  (total 7 workers using 7115 MB)
@  3249s  (total 7 workers using 6963 MB)
@  3260s  (total 7 workers using 7302 MB)
@  3271s  (total 7 workers using 6674 MB)
@  3281s  (total 7 workers using 7114 MB)
@  3292s  (total 7 workers using 7051 MB)
@  3302s  (total 7 workers using 7165 MB)
@  3313s  (total 7 workers using 7222 MB)
@  3324s  (total 7 workers using 7306 MB)
@  3334s  (total 7 workers using 7346 MB)
@  3345s  (total 7 workers using 7191 MB)
@  3355s  (total 7 workers using 7234 MB)
@  3366s  (total 7 workers using 7039 MB)
@  3377s  (total 7 workers using 7490 MB)
@  3387s  (total 7 workers using 6871 MB)
@  3398s  (total 7 workers using 7279 MB)
@  3409s  (total 7 workers using 6865 MB)
@  3419s  (total 7 workers using 7207 MB)
@  3430s  (total 7 workers using 6863 MB)
@  3440s  (total 7 workers using 7235 MB)
@  3451s  (total 7 workers using 6838 MB)
@  3461s  (total 7 workers using 7239 MB)
@  3472s  (total 7 workers using 6769 MB)
@  3483s  (total 7 workers using 7299 MB)
@  3493s  (total 7 workers using 7723 MB)
@  3504s  (total 7 workers using 7472 MB)
@  3515s  (total 7 workers using 7644 MB)
@  3525s  (total 7 workers using 7352 MB)
@  3536s  (total 7 workers using 7568 MB)
@  3546s  (total 7 workers using 7412 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (copied results from worker 0 in /tmp//pr_test)
@  3555s  [0;30;47m(proof race finished with answer unknown in 3554.68 seconds)[m
unknown
c done
