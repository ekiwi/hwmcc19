c host: c3n07
c start: Fri Oct 18 23:29:50 CEST 2019
c arrayjobid: 17567257
c jobid: 17567744
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck1-p171.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567744.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 10112)
@     0s  (started worker 1 with pid 10113)
@     0s  (started worker 2 with pid 10114)
@     0s  (started worker 3 with pid 10115)
@     0s  (started worker 4 with pid 10116)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 10232)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 427 MB)
@     2s  (started worker 6 with pid 10289)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 892 MB)
@     3s  (started worker 7 with pid 10351)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 1232 MB)
@     4s  (started worker 8 with pid 10419)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1466 MB)
@     5s  (started worker 9 with pid 10509)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1698 MB)
@     7s  (started worker 10 with pid 10589)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 2111 MB)
@    15s  (total 11 workers using 3309 MB)
@    27s  (total 11 workers using 4207 MB)
@    39s  (total 11 workers using 5007 MB)
@    50s  (total 11 workers using 5646 MB)
@    61s  (total 11 workers using 6469 MB)
@    73s  (total 11 workers using 7050 MB)
@    84s  (total 11 workers using 7631 MB)
@    95s  (total 11 workers using 8125 MB)
@   106s  (total 11 workers using 8514 MB)
@   117s  (total 11 workers using 8808 MB)
@   128s  (total 11 workers using 9204 MB)
@   139s  (total 11 workers using 9558 MB)
@   150s  (total 11 workers using 10130 MB)
@   161s  (total 11 workers using 10688 MB)
@   172s  (total 11 workers using 11063 MB)
@   183s  (total 11 workers using 11283 MB)
@   194s  (total 11 workers using 11416 MB)
@   206s  (total 11 workers using 11668 MB)
@   217s  (total 11 workers using 12245 MB)
@   228s  (total 11 workers using 12523 MB)
@   239s  (total 11 workers using 12890 MB)
@   250s  (total 11 workers using 13212 MB)
@   261s  (total 11 workers using 13465 MB)
@   272s  (total 11 workers using 14234 MB)
@   283s  (total 11 workers using 14353 MB)
@   294s  (total 11 workers using 14788 MB)
@   305s  (total 11 workers using 14986 MB)
@   317s  (total 11 workers using 15218 MB)
@   328s  (total 11 workers using 15578 MB)
@   339s  (total 11 workers using 15774 MB)
@   350s  (total 11 workers using 16291 MB)
@   361s  (total 11 workers using 16384 MB)
@   372s  (total 11 workers using 16869 MB)
@   383s  (total 11 workers using 17136 MB)
@   394s  (total 11 workers using 17167 MB)
@   405s  (total 11 workers using 17469 MB)
@   416s  (total 11 workers using 17696 MB)
@   428s  (total 11 workers using 17722 MB)
@   439s  (total 11 workers using 17804 MB)
@   450s  (total 11 workers using 17961 MB)
@   461s  (total 11 workers using 18090 MB)
@   471s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   472s  (total 10 workers using 17586 MB)
@   483s  (total 10 workers using 17823 MB)
@   494s  (total 10 workers using 17982 MB)
@   505s  (total 10 workers using 18018 MB)
@   516s  (total 10 workers using 18305 MB)
@   527s  (total 10 workers using 18570 MB)
@   538s  (total 10 workers using 18716 MB)
@   549s  (total 10 workers using 18853 MB)
@   560s  (total 10 workers using 19101 MB)
@   571s  (total 10 workers using 19449 MB)
@   582s  (total 10 workers using 19334 MB)
@   593s  (total 10 workers using 19596 MB)
@   604s  (total 10 workers using 19509 MB)
@   615s  (total 10 workers using 19829 MB)
@   626s  (total 10 workers using 19746 MB)
@   637s  (total 10 workers using 19829 MB)
@   648s  (total 10 workers using 19875 MB)
@   659s  (total 10 workers using 20252 MB)
@   670s  (total 10 workers using 20392 MB)
@   681s  (total 10 workers using 20320 MB)
@   692s  (total 10 workers using 20885 MB)
@   703s  (total 10 workers using 20969 MB)
@   714s  (total 10 workers using 21049 MB)
@   725s  (total 10 workers using 21051 MB)
@   736s  (total 10 workers using 21827 MB)
@   747s  (total 10 workers using 21957 MB)
@   758s  (total 10 workers using 21969 MB)
@   769s  (total 10 workers using 22112 MB)
@   780s  (total 10 workers using 22269 MB)
@   791s  (total 10 workers using 22489 MB)
@   802s  (total 10 workers using 22922 MB)
@   812s  (total 10 workers using 22912 MB)
@   824s  (total 10 workers using 23141 MB)
@   834s  (total 10 workers using 23165 MB)
@   846s  (total 10 workers using 23054 MB)
@   856s  (total 10 workers using 23302 MB)
@   867s  (total 10 workers using 23630 MB)
@   878s  (total 10 workers using 23536 MB)
@   889s  (total 10 workers using 23704 MB)
@   900s  (total 10 workers using 24009 MB)
@   911s  (total 10 workers using 23882 MB)
@   922s  (total 10 workers using 24168 MB)
@   933s  (total 10 workers using 24589 MB)
@   944s  (total 10 workers using 24322 MB)
@   955s  (total 10 workers using 25148 MB)
@   966s  (total 10 workers using 24955 MB)
@   977s  (total 10 workers using 25239 MB)
@   988s  (total 10 workers using 25717 MB)
@   999s  (total 10 workers using 25295 MB)
@  1010s  (total 10 workers using 25391 MB)
@  1021s  (total 10 workers using 25778 MB)
@  1032s  (total 10 workers using 25779 MB)
@  1043s  (total 10 workers using 26114 MB)
@  1054s  (total 10 workers using 26181 MB)
@  1065s  (total 10 workers using 26102 MB)
@  1076s  (total 10 workers using 26550 MB)
@  1087s  (total 10 workers using 26506 MB)
@  1098s  (total 10 workers using 26856 MB)
@  1109s  (total 10 workers using 26787 MB)
@  1120s  (total 10 workers using 26734 MB)
@  1131s  (total 10 workers using 26930 MB)
@  1142s  (total 10 workers using 26650 MB)
@  1153s  (total 10 workers using 27180 MB)
@  1164s  (total 10 workers using 27050 MB)
@  1175s  (total 10 workers using 27014 MB)
@  1185s  (total 10 workers using 27224 MB)
@  1197s  (total 10 workers using 27237 MB)
@  1207s  (total 10 workers using 27647 MB)
@  1218s  (total 10 workers using 27826 MB)
@  1229s  (total 10 workers using 27651 MB)
@  1240s  (total 10 workers using 28180 MB)
@  1251s  (total 10 workers using 28054 MB)
@  1262s  (total 10 workers using 28661 MB)
@  1273s  (total 10 workers using 28356 MB)
@  1284s  (total 10 workers using 28625 MB)
@  1295s  (total 10 workers using 28708 MB)
@  1306s  (total 10 workers using 28745 MB)
@  1317s  (total 10 workers using 29449 MB)
@  1328s  (total 10 workers using 28997 MB)
@  1339s  (total 10 workers using 29632 MB)
@  1350s  (total 10 workers using 29062 MB)
@  1361s  (total 10 workers using 29752 MB)
@  1372s  (total 10 workers using 29788 MB)
@  1383s  (total 10 workers using 29341 MB)
@  1394s  (total 10 workers using 29948 MB)
@  1405s  (total 10 workers using 29867 MB)
@  1416s  (total 10 workers using 30727 MB)
@  1427s  (total 10 workers using 30155 MB)
@  1438s  (total 10 workers using 30728 MB)
@  1449s  (total 10 workers using 30374 MB)
@  1460s  (total 10 workers using 31287 MB)
@  1471s  (total 10 workers using 30645 MB)
@  1482s  (total 10 workers using 30410 MB)
@  1493s  (total 10 workers using 31235 MB)
@  1504s  (total 10 workers using 30813 MB)
@  1514s  (total 10 workers using 31008 MB)
@  1526s  (total 10 workers using 30764 MB)
@  1536s  (total 10 workers using 31366 MB)
@  1548s  (total 10 workers using 30707 MB)
@  1558s  (total 10 workers using 31486 MB)
@  1569s  (total 10 workers using 31094 MB)
@  1580s  (total 10 workers using 31827 MB)
@  1591s  (total 10 workers using 31604 MB)
@  1602s  (total 10 workers using 31458 MB)
@  1613s  (total 10 workers using 31756 MB)
@  1624s  (total 10 workers using 31871 MB)
@  1635s  (total 10 workers using 32324 MB)
@  1646s  (total 10 workers using 31599 MB)
@  1657s  (total 10 workers using 32619 MB)
@  1668s  (total 10 workers using 32070 MB)
@  1679s  (total 10 workers using 32491 MB)
@  1690s  (total 10 workers using 32175 MB)
@  1701s  (total 10 workers using 33050 MB)
@  1712s  (total 10 workers using 32874 MB)
@  1723s  (total 10 workers using 33281 MB)
@  1734s  (total 10 workers using 33072 MB)
@  1745s  (total 10 workers using 33760 MB)
@  1756s  (total 10 workers using 32973 MB)
@  1767s  (total 10 workers using 33976 MB)
@  1778s  (total 10 workers using 33639 MB)
@  1789s  (total 10 workers using 33973 MB)
@  1800s  (total 10 workers using 33877 MB)
@  1811s  (total 10 workers using 33919 MB)
@  1822s  (total 10 workers using 34243 MB)
@  1833s  (total 10 workers using 33982 MB)
@  1844s  (total 10 workers using 34128 MB)
@  1855s  (total 10 workers using 34416 MB)
@  1865s  (total 10 workers using 34802 MB)
@  1877s  (total 10 workers using 34483 MB)
@  1887s  (total 10 workers using 35117 MB)
@  1899s  (total 10 workers using 34412 MB)
@  1909s  (total 10 workers using 35029 MB)
@  1920s  (total 10 workers using 34685 MB)
@  1931s  (total 10 workers using 35174 MB)
@  1942s  (total 10 workers using 34866 MB)
@  1953s  (total 10 workers using 35558 MB)
@  1964s  (total 10 workers using 34930 MB)
@  1975s  (total 10 workers using 35436 MB)
@  1986s  (total 10 workers using 34922 MB)
@  1997s  (total 10 workers using 35775 MB)
@  2008s  (total 10 workers using 35471 MB)
@  2019s  (total 10 workers using 35706 MB)
@  2030s  (total 10 workers using 35589 MB)
@  2041s  (total 10 workers using 36033 MB)
@  2052s  (total 10 workers using 35732 MB)
@  2063s  (total 10 workers using 36087 MB)
@  2074s  (total 10 workers using 36156 MB)
@  2085s  (total 10 workers using 36187 MB)
@  2096s  (total 10 workers using 35807 MB)
@  2107s  (total 10 workers using 36751 MB)
@  2118s  (total 10 workers using 36659 MB)
@  2129s  (total 10 workers using 37064 MB)
@  2140s  (total 10 workers using 36381 MB)
@  2151s  (total 10 workers using 37219 MB)
@  2162s  (total 10 workers using 36929 MB)
@  2173s  (total 10 workers using 37500 MB)
@  2184s  (total 10 workers using 36901 MB)
@  2195s  (total 10 workers using 37481 MB)
@  2206s  (total 10 workers using 37348 MB)
@  2217s  (total 10 workers using 37971 MB)
@  2228s  (total 10 workers using 37347 MB)
@  2239s  (total 10 workers using 38057 MB)
@  2250s  (total 10 workers using 37575 MB)
@  2260s  (total 10 workers using 37950 MB)
@  2272s  (total 10 workers using 38366 MB)
@  2282s  (total 10 workers using 38158 MB)
@  2294s  (total 10 workers using 38854 MB)
@  2304s  (total 10 workers using 38296 MB)
@  2315s  (total 10 workers using 38949 MB)
@  2326s  (total 10 workers using 38287 MB)
@  2337s  (total 10 workers using 39193 MB)
@  2348s  (total 10 workers using 38543 MB)
@  2359s  (total 10 workers using 39708 MB)
@  2370s  (total 10 workers using 38745 MB)
@  2381s  (total 10 workers using 39724 MB)
@  2392s  (total 10 workers using 39147 MB)
@  2403s  (total 10 workers using 40147 MB)
@  2414s  (total 10 workers using 39351 MB)
@  2425s  (total 10 workers using 40465 MB)
@  2436s  (total 10 workers using 40065 MB)
@  2447s  (total 10 workers using 40243 MB)
@  2458s  (total 10 workers using 40142 MB)
@  2469s  (total 10 workers using 40382 MB)
@  2480s  (total 10 workers using 40782 MB)
@  2491s  (total 10 workers using 40541 MB)
@  2502s  (total 10 workers using 41194 MB)
@  2513s  (total 10 workers using 40776 MB)
@  2524s  (total 10 workers using 41451 MB)
@  2535s  (total 10 workers using 40441 MB)
@  2546s  (total 10 workers using 41444 MB)
@  2557s  (total 10 workers using 41008 MB)
@  2568s  (total 10 workers using 41172 MB)
@  2579s  (total 10 workers using 40977 MB)
@  2590s  (total 10 workers using 41537 MB)
@  2601s  (total 10 workers using 41893 MB)
@  2612s  (total 10 workers using 41680 MB)
@  2623s  (total 10 workers using 42474 MB)
@  2634s  (total 10 workers using 41514 MB)
@  2645s  (total 10 workers using 42165 MB)
@  2656s  (total 10 workers using 41593 MB)
@  2667s  (total 10 workers using 42666 MB)
@  2678s  (total 10 workers using 41642 MB)
@  2689s  (total 10 workers using 42669 MB)
@  2700s  (total 10 workers using 42252 MB)
@  2711s  (total 10 workers using 42601 MB)
@  2721s  (total 10 workers using 42806 MB)
@  2733s  (total 10 workers using 42616 MB)
@  2743s  (total 10 workers using 43327 MB)
@  2754s  (total 10 workers using 42857 MB)
@  2765s  (total 10 workers using 43279 MB)
@  2776s  (total 10 workers using 42469 MB)
@  2787s  (total 10 workers using 43411 MB)
@  2798s  (total 10 workers using 43358 MB)
@  2809s  (total 10 workers using 42990 MB)
@  2820s  (total 10 workers using 43157 MB)
@  2831s  (total 10 workers using 43353 MB)
@  2842s  (total 10 workers using 44238 MB)
@  2853s  (total 10 workers using 43718 MB)
@  2864s  (total 10 workers using 44139 MB)
@  2875s  (total 10 workers using 43288 MB)
@  2886s  (total 10 workers using 44160 MB)
@  2897s  (total 10 workers using 43743 MB)
@  2908s  (total 10 workers using 44199 MB)
@  2919s  (total 10 workers using 44810 MB)
@  2930s  (total 10 workers using 44088 MB)
@  2941s  (total 10 workers using 45043 MB)
@  2952s  (total 10 workers using 44641 MB)
@  2963s  (total 10 workers using 44881 MB)
@  2974s  (total 10 workers using 44435 MB)
@  2985s  (total 10 workers using 45252 MB)
@  2996s  (total 10 workers using 45208 MB)
@  3007s  (total 10 workers using 45097 MB)
@  3018s  (total 10 workers using 45888 MB)
@  3029s  (total 10 workers using 45398 MB)
@  3040s  (total 10 workers using 46403 MB)
@  3051s  (total 10 workers using 45588 MB)
@  3062s  (total 10 workers using 45925 MB)
@  3073s  (total 10 workers using 46727 MB)
@  3084s  (total 10 workers using 46038 MB)
@  3095s  (total 10 workers using 46532 MB)
@  3106s  (total 10 workers using 45874 MB)
@  3116s  (total 10 workers using 46167 MB)
@  3128s  (total 10 workers using 45879 MB)
@  3138s  (total 10 workers using 46480 MB)
@  3149s  (total 10 workers using 47026 MB)
@  3160s  (total 10 workers using 46212 MB)
@  3171s  (total 10 workers using 46727 MB)
@  3182s  (total 10 workers using 46083 MB)
@  3193s  (total 10 workers using 46553 MB)
@  3204s  (total 10 workers using 46086 MB)
@  3215s  (total 10 workers using 46102 MB)
@  3226s  (total 10 workers using 46889 MB)
@  3237s  (total 10 workers using 46308 MB)
@  3248s  (total 10 workers using 47303 MB)
@  3259s  (total 10 workers using 46678 MB)
@  3270s  (total 10 workers using 46919 MB)
@  3281s  (total 10 workers using 47394 MB)
@  3292s  (total 10 workers using 46813 MB)
@  3303s  (total 10 workers using 47839 MB)
@  3314s  (total 10 workers using 46847 MB)
@  3325s  (total 10 workers using 47981 MB)
@  3336s  (total 10 workers using 47570 MB)
@  3347s  (total 10 workers using 47200 MB)
@  3358s  (total 10 workers using 48378 MB)
@  3369s  (total 10 workers using 47645 MB)
@  3380s  (total 10 workers using 48438 MB)
@  3391s  (total 10 workers using 47277 MB)
@  3402s  (total 10 workers using 48309 MB)
@  3413s  (total 10 workers using 48415 MB)
@  3424s  (total 10 workers using 47902 MB)
@  3435s  (total 10 workers using 48957 MB)
@  3445s  (total 10 workers using 47531 MB)
@  3457s  (total 10 workers using 48283 MB)
@  3467s  (total 10 workers using 48673 MB)
@  3479s  (total 10 workers using 48554 MB)
@  3489s  (total 10 workers using 49440 MB)
@  3501s  (total 10 workers using 48135 MB)
@  3511s  (total 10 workers using 49244 MB)
@  3522s  (total 10 workers using 48539 MB)
@  3533s  (total 10 workers using 48721 MB)
@  3544s  (total 10 workers using 49668 MB)
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (total 4 workers using 38330 MB)
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3557s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3563s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3565s  (total 1 workers using 2361 MB)
@  3573s  (stopping all workers)
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3573.69 seconds)[m
unknown
c done
