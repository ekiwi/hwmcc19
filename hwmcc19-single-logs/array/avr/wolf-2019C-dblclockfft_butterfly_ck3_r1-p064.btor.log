c host: c3n17
c start: Fri Oct 18 21:51:40 CEST 2019
c arrayjobid: 17567257
c jobid: 17567648
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r1-p064.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567648.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 5154)
@     0s  (started worker 1 with pid 5155)
@     0s  (started worker 2 with pid 5156)
@     0s  (started worker 3 with pid 5157)
@     0s  (started worker 4 with pid 5158)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 5274)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 389 MB)
@     2s  (started worker 6 with pid 5331)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 692 MB)
@     3s  (started worker 7 with pid 5393)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 938 MB)
@     4s  (started worker 8 with pid 5459)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1208 MB)
@     5s  (started worker 9 with pid 5551)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1359 MB)
@     7s  (started worker 10 with pid 5631)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1607 MB)
@    15s  (total 11 workers using 2505 MB)
@    27s  (total 11 workers using 3153 MB)
@    39s  (total 11 workers using 3431 MB)
@    50s  (total 11 workers using 3689 MB)
@    61s  (total 11 workers using 3958 MB)
@    73s  (total 11 workers using 4221 MB)
@    84s  (total 11 workers using 4476 MB)
@    95s  (total 11 workers using 4615 MB)
@   106s  (total 11 workers using 4811 MB)
@   117s  (total 11 workers using 5130 MB)
@   128s  (total 11 workers using 5281 MB)
@   139s  (total 11 workers using 5467 MB)
@   150s  (total 11 workers using 5722 MB)
@   161s  (total 11 workers using 6006 MB)
@   172s  (total 11 workers using 6039 MB)
@   183s  (total 11 workers using 6207 MB)
@   194s  (total 11 workers using 6541 MB)
@   206s  (total 11 workers using 6876 MB)
@   217s  (total 11 workers using 6982 MB)
@   228s  (total 11 workers using 7085 MB)
@   239s  (total 11 workers using 7354 MB)
@   250s  (total 11 workers using 7581 MB)
@   261s  (total 11 workers using 7681 MB)
@   272s  (total 11 workers using 8153 MB)
@   283s  (total 11 workers using 8210 MB)
@   294s  (total 11 workers using 8356 MB)
@   305s  (total 11 workers using 8308 MB)
@   316s  (total 11 workers using 8436 MB)
@   327s  (total 11 workers using 8571 MB)
@   339s  (total 11 workers using 8733 MB)
@   350s  (total 11 workers using 9112 MB)
@   361s  (total 11 workers using 9088 MB)
@   372s  (total 11 workers using 9398 MB)
@   372s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   383s  (total 10 workers using 8656 MB)
@   394s  (total 10 workers using 8857 MB)
@   405s  (total 10 workers using 8968 MB)
@   416s  (total 10 workers using 9278 MB)
@   427s  (total 10 workers using 9702 MB)
@   438s  (total 10 workers using 9756 MB)
@   449s  (total 10 workers using 9796 MB)
@   459s  (total 10 workers using 9984 MB)
@   471s  (total 10 workers using 10074 MB)
@   481s  (total 10 workers using 10264 MB)
@   493s  (total 10 workers using 10480 MB)
@   503s  (total 10 workers using 10640 MB)
@   514s  (total 10 workers using 10771 MB)
@   525s  (total 10 workers using 10803 MB)
@   536s  (total 10 workers using 10938 MB)
@   547s  (total 10 workers using 11036 MB)
@   558s  (total 10 workers using 11207 MB)
@   569s  (total 10 workers using 11349 MB)
@   580s  (total 10 workers using 11494 MB)
@   591s  (total 10 workers using 11571 MB)
@   602s  (total 10 workers using 11567 MB)
@   613s  (total 10 workers using 11713 MB)
@   624s  (total 10 workers using 11751 MB)
@   635s  (total 10 workers using 11906 MB)
@   646s  (total 10 workers using 12273 MB)
@   657s  (total 10 workers using 12320 MB)
@   668s  (total 10 workers using 12340 MB)
@   679s  (total 10 workers using 12483 MB)
@   690s  (total 10 workers using 12661 MB)
@   701s  (total 10 workers using 12740 MB)
@   712s  (total 10 workers using 12942 MB)
@   723s  (total 10 workers using 13114 MB)
@   734s  (total 10 workers using 13190 MB)
@   745s  (total 10 workers using 13670 MB)
@   756s  (total 10 workers using 13970 MB)
@   766s  (total 10 workers using 13969 MB)
@   778s  (total 10 workers using 14288 MB)
@   788s  (total 10 workers using 14506 MB)
@   799s  (total 10 workers using 14574 MB)
@   810s  (total 10 workers using 14649 MB)
@   821s  (total 10 workers using 14927 MB)
@   832s  (total 10 workers using 15008 MB)
@   843s  (total 10 workers using 15144 MB)
@   854s  (total 10 workers using 14986 MB)
@   865s  (total 10 workers using 15139 MB)
@   876s  (total 10 workers using 15411 MB)
@   887s  (total 10 workers using 15476 MB)
@   898s  (total 10 workers using 15361 MB)
@   909s  (total 10 workers using 15572 MB)
@   920s  (total 10 workers using 15657 MB)
@   931s  (total 10 workers using 15744 MB)
@   942s  (total 10 workers using 15980 MB)
@   953s  (total 10 workers using 16168 MB)
@   964s  (total 10 workers using 16554 MB)
@   975s  (total 10 workers using 16307 MB)
@   986s  (total 10 workers using 16531 MB)
@   997s  (total 10 workers using 16880 MB)
@  1008s  (total 10 workers using 17209 MB)
@  1019s  (total 10 workers using 17168 MB)
@  1029s  (total 10 workers using 17136 MB)
@  1041s  (total 10 workers using 17497 MB)
@  1051s  (total 10 workers using 17426 MB)
@  1062s  (total 10 workers using 17654 MB)
@  1073s  (total 10 workers using 17644 MB)
@  1084s  (total 10 workers using 17829 MB)
@  1095s  (total 10 workers using 17780 MB)
@  1106s  (total 10 workers using 18013 MB)
@  1117s  (total 10 workers using 18214 MB)
@  1128s  (total 10 workers using 18223 MB)
@  1139s  (total 10 workers using 18487 MB)
@  1150s  (total 10 workers using 18443 MB)
@  1161s  (total 10 workers using 18691 MB)
@  1172s  (total 10 workers using 18463 MB)
@  1183s  (total 10 workers using 18790 MB)
@  1194s  (total 10 workers using 18812 MB)
@  1205s  (total 10 workers using 18966 MB)
@  1216s  (total 10 workers using 18766 MB)
@  1227s  (total 10 workers using 19024 MB)
@  1238s  (total 10 workers using 19103 MB)
@  1249s  (total 10 workers using 19196 MB)
@  1260s  (total 10 workers using 19209 MB)
@  1271s  (total 10 workers using 19515 MB)
@  1282s  (total 10 workers using 19730 MB)
@  1293s  (total 10 workers using 19680 MB)
@  1304s  (total 10 workers using 19643 MB)
@  1314s  (total 10 workers using 19935 MB)
@  1326s  (total 10 workers using 19814 MB)
@  1336s  (total 10 workers using 20232 MB)
@  1348s  (total 10 workers using 20333 MB)
@  1358s  (total 10 workers using 20407 MB)
@  1369s  (total 10 workers using 19948 MB)
@  1380s  (total 10 workers using 20525 MB)
@  1391s  (total 10 workers using 20348 MB)
@  1402s  (total 10 workers using 20797 MB)
@  1413s  (total 10 workers using 20810 MB)
@  1424s  (total 10 workers using 21270 MB)
@  1435s  (total 10 workers using 21068 MB)
@  1446s  (total 10 workers using 21344 MB)
@  1457s  (total 10 workers using 21130 MB)
@  1468s  (total 10 workers using 21493 MB)
@  1479s  (total 10 workers using 21470 MB)
@  1490s  (total 10 workers using 21302 MB)
@  1501s  (total 10 workers using 21775 MB)
@  1512s  (total 10 workers using 21825 MB)
@  1523s  (total 10 workers using 21640 MB)
@  1534s  (total 10 workers using 22146 MB)
@  1545s  (total 10 workers using 21702 MB)
@  1556s  (total 10 workers using 21817 MB)
@  1567s  (total 10 workers using 22921 MB)
@  1578s  (total 10 workers using 22871 MB)
@  1589s  (total 10 workers using 22700 MB)
@  1600s  (total 10 workers using 22519 MB)
@  1611s  (total 10 workers using 23088 MB)
@  1621s  (total 10 workers using 22755 MB)
@  1633s  (total 10 workers using 23386 MB)
@  1643s  (total 10 workers using 23348 MB)
@  1654s  (total 10 workers using 23094 MB)
@  1665s  (total 10 workers using 23768 MB)
@  1676s  (total 10 workers using 23593 MB)
@  1687s  (total 10 workers using 23399 MB)
@  1698s  (total 10 workers using 24081 MB)
@  1709s  (total 10 workers using 23909 MB)
@  1720s  (total 10 workers using 23986 MB)
@  1731s  (total 10 workers using 23794 MB)
@  1742s  (total 10 workers using 24252 MB)
@  1753s  (total 10 workers using 23938 MB)
@  1764s  (total 10 workers using 24406 MB)
@  1775s  (total 10 workers using 24383 MB)
@  1786s  (total 10 workers using 24180 MB)
@  1797s  (total 10 workers using 24662 MB)
@  1808s  (total 10 workers using 24541 MB)
@  1819s  (total 10 workers using 24490 MB)
@  1830s  (total 10 workers using 25343 MB)
@  1841s  (total 10 workers using 25130 MB)
@  1852s  (total 10 workers using 25199 MB)
@  1863s  (total 10 workers using 24875 MB)
@  1874s  (total 10 workers using 25478 MB)
@  1885s  (total 10 workers using 25031 MB)
@  1896s  (total 10 workers using 25551 MB)
@  1907s  (total 10 workers using 25224 MB)
@  1918s  (total 10 workers using 25481 MB)
@  1928s  (total 10 workers using 25748 MB)
@  1940s  (total 10 workers using 25366 MB)
@  1950s  (total 10 workers using 25900 MB)
@  1961s  (total 10 workers using 25959 MB)
@  1972s  (total 10 workers using 26007 MB)
@  1983s  (total 10 workers using 25625 MB)
@  1994s  (total 10 workers using 26128 MB)
@  2005s  (total 10 workers using 25743 MB)
@  2016s  (total 10 workers using 26239 MB)
@  2027s  (total 10 workers using 25913 MB)
@  2038s  (total 10 workers using 26158 MB)
@  2049s  (total 10 workers using 26537 MB)
@  2060s  (total 10 workers using 26202 MB)
@  2071s  (total 10 workers using 26738 MB)
@  2082s  (total 10 workers using 26640 MB)
@  2093s  (total 10 workers using 26465 MB)
@  2104s  (total 10 workers using 27395 MB)
@  2115s  (total 10 workers using 26950 MB)
@  2126s  (total 10 workers using 26986 MB)
@  2137s  (total 10 workers using 27420 MB)
@  2148s  (total 10 workers using 27214 MB)
@  2159s  (total 10 workers using 27011 MB)
@  2170s  (total 10 workers using 27777 MB)
@  2181s  (total 10 workers using 27222 MB)
@  2192s  (total 10 workers using 27970 MB)
@  2203s  (total 10 workers using 27386 MB)
@  2214s  (total 10 workers using 27334 MB)
@  2225s  (total 10 workers using 27783 MB)
@  2236s  (total 10 workers using 27433 MB)
@  2247s  (total 10 workers using 27990 MB)
@  2257s  (total 10 workers using 28120 MB)
@  2269s  (total 10 workers using 27972 MB)
@  2279s  (total 10 workers using 27929 MB)
@  2290s  (total 10 workers using 28721 MB)
@  2301s  (total 10 workers using 28036 MB)
@  2312s  (total 10 workers using 28540 MB)
@  2323s  (total 10 workers using 28147 MB)
@  2334s  (total 10 workers using 28705 MB)
@  2345s  (total 10 workers using 28303 MB)
@  2356s  (total 10 workers using 28397 MB)
@  2367s  (total 10 workers using 28737 MB)
@  2378s  (total 10 workers using 28593 MB)
@  2389s  (total 10 workers using 29099 MB)
@  2400s  (total 10 workers using 29678 MB)
@  2411s  (total 10 workers using 29026 MB)
@  2422s  (total 10 workers using 29151 MB)
@  2433s  (total 10 workers using 29302 MB)
@  2444s  (total 10 workers using 29776 MB)
@  2455s  (total 10 workers using 29394 MB)
@  2466s  (total 10 workers using 29360 MB)
@  2477s  (total 10 workers using 29698 MB)
@  2488s  (total 10 workers using 29387 MB)
@  2499s  (total 10 workers using 30095 MB)
@  2510s  (total 10 workers using 29459 MB)
@  2521s  (total 10 workers using 30161 MB)
@  2532s  (total 10 workers using 29794 MB)
@  2543s  (total 10 workers using 30108 MB)
@  2554s  (total 10 workers using 29830 MB)
@  2564s  (total 10 workers using 30277 MB)
@  2576s  (total 10 workers using 29928 MB)
@  2586s  (total 10 workers using 30511 MB)
@  2597s  (total 10 workers using 30032 MB)
@  2608s  (total 10 workers using 30517 MB)
@  2619s  (total 10 workers using 30143 MB)
@  2630s  (total 10 workers using 31207 MB)
@  2641s  (total 10 workers using 30026 MB)
@  2652s  (total 10 workers using 30861 MB)
@  2663s  (total 10 workers using 30463 MB)
@  2674s  (total 10 workers using 30758 MB)
@  2685s  (total 10 workers using 30820 MB)
@  2696s  (total 10 workers using 31093 MB)
@  2707s  (total 10 workers using 30701 MB)
@  2718s  (total 10 workers using 31193 MB)
@  2729s  (total 10 workers using 30854 MB)
@  2740s  (total 10 workers using 31334 MB)
@  2751s  (total 10 workers using 30995 MB)
@  2762s  (total 10 workers using 31296 MB)
@  2773s  (total 10 workers using 30963 MB)
@  2784s  (total 10 workers using 31525 MB)
@  2795s  (total 10 workers using 31419 MB)
@  2806s  (total 10 workers using 32045 MB)
@  2817s  (total 10 workers using 31753 MB)
@  2828s  (total 10 workers using 32586 MB)
@  2839s  (total 10 workers using 32076 MB)
@  2849s  (total 10 workers using 32237 MB)
@  2861s  (total 10 workers using 31886 MB)
@  2871s  (total 10 workers using 31894 MB)
@  2882s  (total 10 workers using 32348 MB)
@  2893s  (total 10 workers using 32310 MB)
@  2904s  (total 10 workers using 32572 MB)
@  2915s  (total 10 workers using 32374 MB)
@  2926s  (total 10 workers using 32517 MB)
@  2937s  (total 10 workers using 32599 MB)
@  2948s  (total 10 workers using 32564 MB)
@  2959s  (total 10 workers using 32437 MB)
@  2970s  (total 10 workers using 32399 MB)
@  2981s  (total 10 workers using 32977 MB)
@  2992s  (total 10 workers using 32571 MB)
@  3003s  (total 10 workers using 33097 MB)
@  3014s  (total 10 workers using 33171 MB)
@  3025s  (total 10 workers using 32725 MB)
@  3036s  (total 10 workers using 33307 MB)
@  3047s  (total 10 workers using 32893 MB)
@  3058s  (total 10 workers using 33541 MB)
@  3069s  (total 10 workers using 33051 MB)
@  3080s  (total 10 workers using 33530 MB)
@  3091s  (total 10 workers using 33156 MB)
@  3102s  (total 10 workers using 33683 MB)
@  3113s  (total 10 workers using 33298 MB)
@  3124s  (total 10 workers using 33788 MB)
@  3134s  (total 10 workers using 33664 MB)
@  3146s  (total 10 workers using 33526 MB)
@  3156s  (total 10 workers using 33848 MB)
@  3167s  (total 10 workers using 34120 MB)
@  3178s  (total 10 workers using 33621 MB)
@  3189s  (total 10 workers using 34171 MB)
@  3200s  (total 10 workers using 34467 MB)
@  3211s  (total 10 workers using 34303 MB)
@  3222s  (total 10 workers using 34160 MB)
@  3233s  (total 10 workers using 34332 MB)
@  3244s  (total 10 workers using 35035 MB)
@  3255s  (total 10 workers using 34966 MB)
@  3266s  (total 10 workers using 34336 MB)
@  3277s  (total 10 workers using 35065 MB)
@  3288s  (total 10 workers using 34819 MB)
@  3299s  (total 10 workers using 34652 MB)
@  3310s  (total 10 workers using 34088 MB)
@  3321s  (total 10 workers using 35045 MB)
@  3332s  (total 10 workers using 35573 MB)
@  3343s  (total 10 workers using 34556 MB)
@  3354s  (total 10 workers using 35499 MB)
@  3365s  (total 10 workers using 34995 MB)
@  3376s  (total 10 workers using 35579 MB)
@  3387s  (total 10 workers using 35240 MB)
@  3398s  (total 10 workers using 35492 MB)
@  3409s  (total 10 workers using 35327 MB)
@  3420s  (total 10 workers using 35633 MB)
@  3431s  (total 10 workers using 35440 MB)
@  3441s  (total 10 workers using 35812 MB)
@  3453s  (total 10 workers using 35828 MB)
@  3463s  (total 10 workers using 35990 MB)
@  3474s  (total 10 workers using 35655 MB)
@  3485s  (total 10 workers using 36193 MB)
@  3496s  (total 10 workers using 36258 MB)
@  3507s  (total 10 workers using 35854 MB)
@  3518s  (total 10 workers using 36529 MB)
@  3529s  (total 10 workers using 36030 MB)
@  3540s  (total 10 workers using 36540 MB)
@  3551s  (total 10 workers using 36679 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3555s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3556s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3556s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3562s  (total 1 workers using 1700 MB)
@  3572s  (total 1 workers using 1700 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3574.05 seconds)[m
unknown
c done
