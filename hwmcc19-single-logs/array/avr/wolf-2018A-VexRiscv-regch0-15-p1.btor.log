c host: c3n23
c start: Fri Oct 18 20:58:52 CEST 2019
c arrayjobid: 17567257
c jobid: 17567577
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2018A/VexRiscv-regch0-15-p1.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567577.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 7560)
@     0s  (started worker 1 with pid 7561)
@     0s  (started worker 2 with pid 7562)
@     0s  (started worker 3 with pid 7563)
@     0s  (started worker 4 with pid 7564)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 7680)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 235 MB)
@     2s  (started worker 6 with pid 7734)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 384 MB)
@     3s  (started worker 7 with pid 7796)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 439 MB)
@     4s  (started worker 8 with pid 7862)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 556 MB)
@     4s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@     5s  (started worker 9 with pid 7953)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 676 MB)
@     6s  (started worker 10 with pid 8027)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 849 MB)
@    15s  (total 10 workers using 1976 MB)
@    26s  (total 10 workers using 3602 MB)
@    30s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@    38s  (total 9 workers using 2449 MB)
@    49s  (total 9 workers using 2652 MB)
@    60s  (total 9 workers using 2838 MB)
@    71s  (total 9 workers using 3617 MB)
@    81s  (total 9 workers using 4353 MB)
@    92s  (total 9 workers using 5139 MB)
@   103s  (total 9 workers using 5480 MB)
@   114s  (total 9 workers using 6425 MB)
@   125s  (total 9 workers using 6741 MB)
@   136s  (total 9 workers using 6805 MB)
@   146s  (total 9 workers using 7503 MB)
@   157s  (total 9 workers using 7680 MB)
@   168s  (total 9 workers using 8104 MB)
@   179s  (total 9 workers using 8357 MB)
@   190s  (total 9 workers using 8846 MB)
@   201s  (total 9 workers using 8954 MB)
@   212s  (total 9 workers using 9656 MB)
@   222s  (total 9 workers using 9814 MB)
@   233s  (total 9 workers using 10581 MB)
@   244s  (total 9 workers using 10831 MB)
@   255s  (total 9 workers using 10672 MB)
@   266s  (total 9 workers using 11246 MB)
@   276s  (total 9 workers using 10912 MB)
@   287s  (total 9 workers using 11679 MB)
@   298s  (total 9 workers using 11953 MB)
@   309s  (total 9 workers using 11732 MB)
@   320s  (total 9 workers using 12091 MB)
@   331s  (total 9 workers using 12213 MB)
@   342s  (total 9 workers using 12301 MB)
@   353s  (total 9 workers using 12475 MB)
@   363s  (total 9 workers using 12269 MB)
@   374s  (total 9 workers using 13303 MB)
@   385s  (total 9 workers using 13488 MB)
@   396s  (total 9 workers using 13736 MB)
@   407s  (total 9 workers using 13521 MB)
@   418s  (total 9 workers using 13483 MB)
@   428s  (total 9 workers using 14136 MB)
@   439s  (total 9 workers using 14452 MB)
@   450s  (total 9 workers using 14194 MB)
@   461s  (total 9 workers using 14465 MB)
@   472s  (total 9 workers using 15349 MB)
@   483s  (total 9 workers using 15468 MB)
@   494s  (total 9 workers using 14906 MB)
@   505s  (total 9 workers using 15986 MB)
@   516s  (total 9 workers using 14910 MB)
@   527s  (total 9 workers using 15573 MB)
@   537s  (total 9 workers using 15751 MB)
@   548s  (total 9 workers using 16276 MB)
@   559s  (total 9 workers using 15884 MB)
@   570s  (total 9 workers using 17091 MB)
@   581s  (total 9 workers using 16230 MB)
@   592s  (total 9 workers using 17209 MB)
@   603s  (total 9 workers using 16626 MB)
@   614s  (total 9 workers using 17769 MB)
@   624s  (total 9 workers using 18864 MB)
@   635s  (total 9 workers using 17807 MB)
@   646s  (total 9 workers using 18128 MB)
@   657s  (total 9 workers using 18669 MB)
@   668s  (total 9 workers using 18532 MB)
@   679s  (total 9 workers using 18859 MB)
@   690s  (total 9 workers using 18303 MB)
@   701s  (total 9 workers using 18410 MB)
@   711s  (total 9 workers using 19924 MB)
@   722s  (total 9 workers using 19480 MB)
@   733s  (total 9 workers using 18552 MB)
@   744s  (total 9 workers using 20094 MB)
@   755s  (total 9 workers using 19051 MB)
@   766s  (total 9 workers using 20198 MB)
@   777s  (total 9 workers using 20543 MB)
@   788s  (total 9 workers using 19978 MB)
@   798s  (total 9 workers using 20513 MB)
@   809s  (total 9 workers using 21125 MB)
@   820s  (total 9 workers using 21143 MB)
@   831s  (total 9 workers using 21534 MB)
@   842s  (total 9 workers using 21520 MB)
@   853s  (total 9 workers using 19892 MB)
@   864s  (total 9 workers using 21514 MB)
@   875s  (total 9 workers using 21927 MB)
@   885s  (total 9 workers using 21689 MB)
@   896s  (total 9 workers using 21118 MB)
@   907s  (total 9 workers using 20273 MB)
@   914s  (worker 10 finished with result unknown) python3 avr.py --bmc
@   918s  (total 8 workers using 11187 MB)
@   929s  (total 8 workers using 11222 MB)
@   940s  (total 8 workers using 11222 MB)
@   950s  (total 8 workers using 11265 MB)
@   961s  (total 8 workers using 11422 MB)
@   972s  (total 8 workers using 11330 MB)
@   982s  (total 8 workers using 11503 MB)
@   993s  (total 8 workers using 11296 MB)
@  1004s  (total 8 workers using 11534 MB)
@  1015s  (total 8 workers using 11651 MB)
@  1025s  (total 8 workers using 11516 MB)
@  1036s  (total 8 workers using 11576 MB)
@  1047s  (total 8 workers using 11639 MB)
@  1057s  (total 8 workers using 11647 MB)
@  1068s  (total 8 workers using 11896 MB)
@  1079s  (total 8 workers using 12129 MB)
@  1090s  (total 8 workers using 12297 MB)
@  1100s  (total 8 workers using 11793 MB)
@  1111s  (total 8 workers using 12220 MB)
@  1122s  (total 8 workers using 12150 MB)
@  1133s  (total 8 workers using 12240 MB)
@  1143s  (total 8 workers using 12383 MB)
@  1154s  (total 8 workers using 12343 MB)
@  1165s  (total 8 workers using 12115 MB)
@  1175s  (total 8 workers using 12453 MB)
@  1186s  (total 8 workers using 12625 MB)
@  1197s  (total 8 workers using 12707 MB)
@  1208s  (total 8 workers using 12827 MB)
@  1218s  (total 8 workers using 12700 MB)
@  1229s  (total 8 workers using 12582 MB)
@  1240s  (total 8 workers using 12880 MB)
@  1250s  (total 8 workers using 12825 MB)
@  1261s  (total 8 workers using 13052 MB)
@  1272s  (total 8 workers using 13035 MB)
@  1283s  (total 8 workers using 13364 MB)
@  1293s  (total 8 workers using 13171 MB)
@  1304s  (total 8 workers using 13412 MB)
@  1315s  (total 8 workers using 13378 MB)
@  1326s  (total 8 workers using 13296 MB)
@  1336s  (total 8 workers using 13380 MB)
@  1347s  (total 8 workers using 13571 MB)
@  1358s  (total 8 workers using 13529 MB)
@  1369s  (total 8 workers using 13569 MB)
@  1379s  (total 8 workers using 13879 MB)
@  1390s  (total 8 workers using 13823 MB)
@  1401s  (total 8 workers using 13729 MB)
@  1411s  (total 8 workers using 13792 MB)
@  1422s  (total 8 workers using 13931 MB)
@  1433s  (total 8 workers using 13818 MB)
@  1443s  (total 8 workers using 14065 MB)
@  1454s  (total 8 workers using 13890 MB)
@  1465s  (total 8 workers using 14024 MB)
@  1476s  (total 8 workers using 13929 MB)
@  1486s  (total 8 workers using 14073 MB)
@  1497s  (total 8 workers using 14382 MB)
@  1508s  (total 8 workers using 14443 MB)
@  1519s  (total 8 workers using 14479 MB)
@  1529s  (total 8 workers using 14450 MB)
@  1540s  (total 8 workers using 14528 MB)
@  1551s  (total 8 workers using 14582 MB)
@  1562s  (total 8 workers using 14725 MB)
@  1572s  (total 8 workers using 14869 MB)
@  1583s  (total 8 workers using 14716 MB)
@  1594s  (total 8 workers using 14858 MB)
@  1604s  (total 8 workers using 14981 MB)
@  1615s  (total 8 workers using 14929 MB)
@  1626s  (total 8 workers using 15005 MB)
@  1637s  (total 8 workers using 15083 MB)
@  1647s  (total 8 workers using 15177 MB)
@  1658s  (total 8 workers using 15056 MB)
@  1669s  (total 8 workers using 15201 MB)
@  1679s  (total 8 workers using 15160 MB)
@  1690s  (total 8 workers using 15166 MB)
@  1701s  (total 8 workers using 15306 MB)
@  1712s  (total 8 workers using 15367 MB)
@  1722s  (total 8 workers using 15354 MB)
@  1733s  (total 8 workers using 15528 MB)
@  1744s  (total 8 workers using 15722 MB)
@  1755s  (total 8 workers using 15391 MB)
@  1765s  (total 8 workers using 15497 MB)
@  1776s  (total 8 workers using 15618 MB)
@  1787s  (total 8 workers using 15608 MB)
@  1797s  (total 8 workers using 15843 MB)
@  1808s  (total 8 workers using 15784 MB)
@  1819s  (total 8 workers using 16004 MB)
@  1830s  (total 8 workers using 15982 MB)
@  1840s  (total 8 workers using 15731 MB)
@  1851s  (total 8 workers using 15822 MB)
@  1862s  (total 8 workers using 15747 MB)
@  1873s  (total 8 workers using 15865 MB)
@  1883s  (total 8 workers using 15970 MB)
@  1894s  (total 8 workers using 16041 MB)
@  1905s  (total 8 workers using 16542 MB)
@  1915s  (total 8 workers using 16313 MB)
@  1926s  (total 8 workers using 16183 MB)
@  1937s  (total 8 workers using 16320 MB)
@  1948s  (total 8 workers using 16435 MB)
@  1958s  (total 8 workers using 16534 MB)
@  1969s  (total 8 workers using 16319 MB)
@  1980s  (total 8 workers using 16410 MB)
@  1991s  (total 8 workers using 16335 MB)
@  2001s  (total 8 workers using 16392 MB)
@  2012s  (total 8 workers using 16477 MB)
@  2023s  (total 8 workers using 16611 MB)
@  2034s  (total 8 workers using 16861 MB)
@  2044s  (total 8 workers using 17092 MB)
@  2055s  (total 8 workers using 16879 MB)
@  2066s  (total 8 workers using 16972 MB)
@  2076s  (total 8 workers using 16533 MB)
@  2087s  (total 8 workers using 17008 MB)
@  2098s  (total 8 workers using 16865 MB)
@  2109s  (total 8 workers using 16794 MB)
@  2119s  (total 8 workers using 17244 MB)
@  2130s  (total 8 workers using 16958 MB)
@  2141s  (total 8 workers using 16933 MB)
@  2151s  (total 8 workers using 16879 MB)
@  2162s  (total 8 workers using 16957 MB)
@  2173s  (total 8 workers using 17175 MB)
@  2184s  (total 8 workers using 17126 MB)
@  2194s  (total 8 workers using 17234 MB)
@  2205s  (total 8 workers using 17244 MB)
@  2216s  (total 8 workers using 17183 MB)
@  2227s  (total 8 workers using 17418 MB)
@  2237s  (total 8 workers using 16975 MB)
@  2238s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  2248s  (total 7 workers using 12555 MB)
@  2259s  (total 7 workers using 12906 MB)
@  2269s  (total 7 workers using 12568 MB)
@  2280s  (total 7 workers using 12603 MB)
@  2291s  (total 7 workers using 12613 MB)
@  2301s  (total 7 workers using 12640 MB)
@  2312s  (total 7 workers using 12675 MB)
@  2322s  (total 7 workers using 12628 MB)
@  2333s  (total 7 workers using 12625 MB)
@  2344s  (total 7 workers using 12652 MB)
@  2354s  (total 7 workers using 12598 MB)
@  2365s  (total 7 workers using 12671 MB)
@  2376s  (total 7 workers using 12807 MB)
@  2386s  (total 7 workers using 12766 MB)
@  2397s  (total 7 workers using 12680 MB)
@  2407s  (total 7 workers using 12714 MB)
@  2418s  (total 7 workers using 12837 MB)
@  2429s  (total 7 workers using 12798 MB)
@  2439s  (total 7 workers using 12781 MB)
@  2450s  (total 7 workers using 12775 MB)
@  2461s  (total 7 workers using 12897 MB)
@  2471s  (total 7 workers using 12760 MB)
@  2482s  (total 7 workers using 12802 MB)
@  2492s  (total 7 workers using 12785 MB)
@  2503s  (total 7 workers using 12768 MB)
@  2514s  (total 7 workers using 12840 MB)
@  2524s  (total 7 workers using 12871 MB)
@  2535s  (total 7 workers using 12849 MB)
@  2546s  (total 7 workers using 12868 MB)
@  2556s  (total 7 workers using 12909 MB)
@  2567s  (total 7 workers using 13013 MB)
@  2577s  (total 7 workers using 12954 MB)
@  2588s  (total 7 workers using 12907 MB)
@  2599s  (total 7 workers using 13026 MB)
@  2609s  (total 7 workers using 13037 MB)
@  2620s  (total 7 workers using 13049 MB)
@  2631s  (total 7 workers using 13064 MB)
@  2641s  (total 7 workers using 13093 MB)
@  2652s  (total 7 workers using 13596 MB)
@  2663s  (total 7 workers using 13279 MB)
@  2673s  (total 7 workers using 13240 MB)
@  2684s  (total 7 workers using 13563 MB)
@  2695s  (total 7 workers using 13287 MB)
@  2705s  (total 7 workers using 13333 MB)
@  2716s  (total 7 workers using 13349 MB)
@  2726s  (total 7 workers using 13394 MB)
@  2737s  (total 7 workers using 13389 MB)
@  2748s  (total 7 workers using 13492 MB)
@  2758s  (total 7 workers using 13529 MB)
@  2769s  (total 7 workers using 13450 MB)
@  2780s  (total 7 workers using 13493 MB)
@  2790s  (total 7 workers using 13495 MB)
@  2801s  (total 7 workers using 13511 MB)
@  2811s  (total 7 workers using 13738 MB)
@  2822s  (total 7 workers using 13488 MB)
@  2833s  (total 7 workers using 13477 MB)
@  2843s  (total 7 workers using 13537 MB)
@  2854s  (total 7 workers using 13825 MB)
@  2865s  (total 7 workers using 13979 MB)
@  2875s  (total 7 workers using 13875 MB)
@  2886s  (total 7 workers using 13888 MB)
@  2896s  (total 7 workers using 13925 MB)
@  2907s  (total 7 workers using 13649 MB)
@  2918s  (total 7 workers using 13883 MB)
@  2928s  (total 7 workers using 13907 MB)
@  2939s  (total 7 workers using 13873 MB)
@  2950s  (total 7 workers using 13931 MB)
@  2960s  (total 7 workers using 14241 MB)
@  2971s  (total 7 workers using 13957 MB)
@  2982s  (total 7 workers using 14200 MB)
@  2992s  (total 7 workers using 13998 MB)
@  3003s  (total 7 workers using 14132 MB)
@  3014s  (total 7 workers using 14102 MB)
@  3024s  (total 7 workers using 14415 MB)
@  3035s  (total 7 workers using 14317 MB)
@  3045s  (total 7 workers using 14284 MB)
@  3056s  (total 7 workers using 14668 MB)
@  3067s  (total 7 workers using 14385 MB)
@  3077s  (total 7 workers using 14595 MB)
@  3088s  (total 7 workers using 13931 MB)
@  3099s  (total 7 workers using 14407 MB)
@  3109s  (total 7 workers using 14448 MB)
@  3120s  (total 7 workers using 14525 MB)
@  3130s  (total 7 workers using 14515 MB)
@  3141s  (total 7 workers using 14517 MB)
@  3152s  (total 7 workers using 14532 MB)
@  3162s  (total 7 workers using 14471 MB)
@  3173s  (total 7 workers using 14424 MB)
@  3184s  (total 7 workers using 14475 MB)
@  3194s  (total 7 workers using 14624 MB)
@  3205s  (total 7 workers using 14595 MB)
@  3215s  (total 7 workers using 14479 MB)
@  3226s  (total 7 workers using 14445 MB)
@  3237s  (total 7 workers using 14626 MB)
@  3247s  (total 7 workers using 14633 MB)
@  3258s  (total 7 workers using 14499 MB)
@  3269s  (total 7 workers using 14547 MB)
@  3279s  (total 7 workers using 14640 MB)
@  3290s  (total 7 workers using 14549 MB)
@  3301s  (total 7 workers using 14746 MB)
@  3311s  (total 7 workers using 14655 MB)
@  3322s  (total 7 workers using 14660 MB)
@  3332s  (total 7 workers using 14669 MB)
@  3343s  (total 7 workers using 14707 MB)
@  3354s  (total 7 workers using 14705 MB)
@  3364s  (total 7 workers using 14690 MB)
@  3375s  (total 7 workers using 14714 MB)
@  3386s  (total 7 workers using 14735 MB)
@  3396s  (total 7 workers using 14719 MB)
@  3407s  (total 7 workers using 14680 MB)
@  3418s  (total 7 workers using 14695 MB)
@  3428s  (total 7 workers using 14760 MB)
@  3439s  (total 7 workers using 14697 MB)
@  3449s  (total 7 workers using 14855 MB)
@  3460s  (total 7 workers using 14763 MB)
@  3471s  (total 7 workers using 14799 MB)
@  3481s  (total 7 workers using 14780 MB)
@  3492s  (total 7 workers using 14797 MB)
@  3503s  (total 7 workers using 14784 MB)
@  3513s  (total 7 workers using 14768 MB)
@  3524s  (total 7 workers using 14843 MB)
@  3534s  (total 7 workers using 14818 MB)
@  3545s  (total 7 workers using 14830 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3555s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3555s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3556s  (total 1 workers using 1509 MB)
@  3566s  (total 1 workers using 1509 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3574.05 seconds)[m
unknown
c done
