c host: c3n11
c start: Fri Oct 18 22:34:41 CEST 2019
c arrayjobid: 17567257
c jobid: 17567685
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r0-p087.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567685.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 31359)
@     0s  (started worker 1 with pid 31360)
@     0s  (started worker 2 with pid 31361)
@     0s  (started worker 3 with pid 31362)
@     0s  (started worker 4 with pid 31363)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 31479)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 379 MB)
@     2s  (started worker 6 with pid 31535)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 634 MB)
@     3s  (started worker 7 with pid 31597)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 957 MB)
@     4s  (started worker 8 with pid 31665)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1185 MB)
@     5s  (started worker 9 with pid 31757)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1348 MB)
@     7s  (started worker 10 with pid 31838)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1539 MB)
@     7s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@    15s  (total 10 workers using 2112 MB)
@    26s  (total 10 workers using 2436 MB)
@    38s  (total 10 workers using 2640 MB)
@    49s  (total 10 workers using 2920 MB)
@    60s  (total 10 workers using 3087 MB)
@    72s  (total 10 workers using 3281 MB)
@    82s  (total 10 workers using 3541 MB)
@    94s  (total 10 workers using 3795 MB)
@   104s  (total 10 workers using 4053 MB)
@   115s  (total 10 workers using 4131 MB)
@   126s  (total 10 workers using 4335 MB)
@   137s  (total 10 workers using 4423 MB)
@   148s  (total 10 workers using 4517 MB)
@   159s  (total 10 workers using 4690 MB)
@   170s  (total 10 workers using 4959 MB)
@   181s  (total 10 workers using 5097 MB)
@   192s  (total 10 workers using 5314 MB)
@   203s  (total 10 workers using 5340 MB)
@   214s  (total 10 workers using 5539 MB)
@   225s  (total 10 workers using 5634 MB)
@   236s  (total 10 workers using 5900 MB)
@   247s  (total 10 workers using 5996 MB)
@   258s  (total 10 workers using 6180 MB)
@   269s  (total 10 workers using 6381 MB)
@   280s  (total 10 workers using 6594 MB)
@   291s  (total 10 workers using 6629 MB)
@   302s  (total 10 workers using 6772 MB)
@   313s  (total 10 workers using 7124 MB)
@   324s  (total 10 workers using 7245 MB)
@   335s  (total 10 workers using 7398 MB)
@   346s  (total 10 workers using 7571 MB)
@   357s  (total 10 workers using 7794 MB)
@   368s  (total 10 workers using 7838 MB)
@   379s  (total 10 workers using 7923 MB)
@   389s  (total 10 workers using 8178 MB)
@   401s  (total 10 workers using 8392 MB)
@   411s  (total 10 workers using 8686 MB)
@   423s  (total 10 workers using 8882 MB)
@   433s  (total 10 workers using 8855 MB)
@   444s  (total 10 workers using 8861 MB)
@   455s  (total 10 workers using 9160 MB)
@   466s  (total 10 workers using 9286 MB)
@   477s  (total 10 workers using 9428 MB)
@   488s  (total 10 workers using 9664 MB)
@   499s  (total 10 workers using 9655 MB)
@   510s  (total 10 workers using 9764 MB)
@   521s  (total 10 workers using 9992 MB)
@   532s  (total 10 workers using 10056 MB)
@   543s  (total 10 workers using 10287 MB)
@   554s  (total 10 workers using 10422 MB)
@   565s  (total 10 workers using 10621 MB)
@   576s  (total 10 workers using 10740 MB)
@   587s  (total 10 workers using 10994 MB)
@   598s  (total 10 workers using 11615 MB)
@   609s  (total 10 workers using 11457 MB)
@   620s  (total 10 workers using 11882 MB)
@   631s  (total 10 workers using 11719 MB)
@   642s  (total 10 workers using 12009 MB)
@   653s  (total 10 workers using 12225 MB)
@   664s  (total 10 workers using 12345 MB)
@   674s  (total 10 workers using 12519 MB)
@   686s  (total 10 workers using 12542 MB)
@   696s  (total 10 workers using 12759 MB)
@   707s  (total 10 workers using 13030 MB)
@   718s  (total 10 workers using 12981 MB)
@   729s  (total 10 workers using 13139 MB)
@   740s  (total 10 workers using 13288 MB)
@   751s  (total 10 workers using 13328 MB)
@   762s  (total 10 workers using 13600 MB)
@   773s  (total 10 workers using 13569 MB)
@   784s  (total 10 workers using 13824 MB)
@   795s  (total 10 workers using 13940 MB)
@   806s  (total 10 workers using 13922 MB)
@   817s  (total 10 workers using 14053 MB)
@   828s  (total 10 workers using 14137 MB)
@   839s  (total 10 workers using 14571 MB)
@   850s  (total 10 workers using 14420 MB)
@   861s  (total 10 workers using 14721 MB)
@   872s  (total 10 workers using 14712 MB)
@   883s  (total 10 workers using 14790 MB)
@   894s  (total 10 workers using 14895 MB)
@   905s  (total 10 workers using 15066 MB)
@   915s  (total 10 workers using 15071 MB)
@   927s  (total 10 workers using 15150 MB)
@   937s  (total 10 workers using 15146 MB)
@   948s  (total 10 workers using 15386 MB)
@   959s  (total 10 workers using 15612 MB)
@   970s  (total 10 workers using 15578 MB)
@   981s  (total 10 workers using 15524 MB)
@   992s  (total 10 workers using 15895 MB)
@  1003s  (total 10 workers using 16027 MB)
@  1014s  (total 10 workers using 16131 MB)
@  1025s  (total 10 workers using 16451 MB)
@  1036s  (total 10 workers using 16505 MB)
@  1047s  (total 10 workers using 16454 MB)
@  1058s  (total 10 workers using 16773 MB)
@  1069s  (total 10 workers using 16856 MB)
@  1080s  (total 10 workers using 16665 MB)
@  1090s  (total 10 workers using 16966 MB)
@  1101s  (total 10 workers using 16928 MB)
@  1112s  (total 10 workers using 17203 MB)
@  1123s  (total 10 workers using 17295 MB)
@  1134s  (total 10 workers using 17582 MB)
@  1145s  (total 10 workers using 17528 MB)
@  1156s  (total 10 workers using 17813 MB)
@  1167s  (total 10 workers using 17887 MB)
@  1178s  (total 10 workers using 17884 MB)
@  1189s  (total 10 workers using 18338 MB)
@  1200s  (total 10 workers using 18237 MB)
@  1211s  (total 10 workers using 18371 MB)
@  1222s  (total 10 workers using 18532 MB)
@  1233s  (total 10 workers using 18653 MB)
@  1244s  (total 10 workers using 18609 MB)
@  1255s  (total 10 workers using 18672 MB)
@  1265s  (total 10 workers using 18964 MB)
@  1277s  (total 10 workers using 18902 MB)
@  1287s  (total 10 workers using 19229 MB)
@  1298s  (total 10 workers using 19226 MB)
@  1309s  (total 10 workers using 19577 MB)
@  1320s  (total 10 workers using 19674 MB)
@  1331s  (total 10 workers using 19592 MB)
@  1342s  (total 10 workers using 20187 MB)
@  1353s  (total 10 workers using 19810 MB)
@  1364s  (total 10 workers using 20057 MB)
@  1375s  (total 10 workers using 19921 MB)
@  1386s  (total 10 workers using 20338 MB)
@  1397s  (total 10 workers using 20396 MB)
@  1408s  (total 10 workers using 20663 MB)
@  1419s  (total 10 workers using 20629 MB)
@  1430s  (total 10 workers using 20902 MB)
@  1440s  (total 10 workers using 21020 MB)
@  1452s  (total 10 workers using 20898 MB)
@  1462s  (total 10 workers using 21366 MB)
@  1473s  (total 10 workers using 20961 MB)
@  1484s  (total 10 workers using 21055 MB)
@  1495s  (total 10 workers using 21498 MB)
@  1506s  (total 10 workers using 21352 MB)
@  1517s  (total 10 workers using 21737 MB)
@  1528s  (total 10 workers using 21765 MB)
@  1539s  (total 10 workers using 21893 MB)
@  1550s  (total 10 workers using 21650 MB)
@  1561s  (total 10 workers using 22098 MB)
@  1572s  (total 10 workers using 21854 MB)
@  1583s  (total 10 workers using 21891 MB)
@  1594s  (total 10 workers using 22606 MB)
@  1605s  (total 10 workers using 22153 MB)
@  1615s  (total 10 workers using 22277 MB)
@  1627s  (total 10 workers using 22792 MB)
@  1637s  (total 10 workers using 22692 MB)
@  1648s  (total 10 workers using 23093 MB)
@  1659s  (total 10 workers using 22796 MB)
@  1670s  (total 10 workers using 23263 MB)
@  1681s  (total 10 workers using 23045 MB)
@  1692s  (total 10 workers using 23309 MB)
@  1703s  (total 10 workers using 23652 MB)
@  1714s  (total 10 workers using 23761 MB)
@  1725s  (total 10 workers using 23424 MB)
@  1736s  (total 10 workers using 23870 MB)
@  1747s  (total 10 workers using 23762 MB)
@  1758s  (total 10 workers using 23712 MB)
@  1769s  (total 10 workers using 23702 MB)
@  1780s  (total 10 workers using 24013 MB)
@  1790s  (total 10 workers using 23936 MB)
@  1802s  (total 10 workers using 24002 MB)
@  1812s  (total 10 workers using 24449 MB)
@  1823s  (total 10 workers using 23996 MB)
@  1834s  (total 10 workers using 24268 MB)
@  1845s  (total 10 workers using 24152 MB)
@  1856s  (total 10 workers using 24467 MB)
@  1867s  (total 10 workers using 24536 MB)
@  1878s  (total 10 workers using 24644 MB)
@  1889s  (total 10 workers using 24547 MB)
@  1900s  (total 10 workers using 24520 MB)
@  1911s  (total 10 workers using 24648 MB)
@  1922s  (total 10 workers using 25310 MB)
@  1933s  (total 10 workers using 24884 MB)
@  1944s  (total 10 workers using 25375 MB)
@  1955s  (total 10 workers using 25339 MB)
@  1966s  (total 10 workers using 25229 MB)
@  1977s  (total 10 workers using 25567 MB)
@  1987s  (total 10 workers using 25470 MB)
@  1999s  (total 10 workers using 25707 MB)
@  2009s  (total 10 workers using 25956 MB)
@  2020s  (total 10 workers using 25837 MB)
@  2031s  (total 10 workers using 26119 MB)
@  2042s  (total 10 workers using 25983 MB)
@  2053s  (total 10 workers using 26279 MB)
@  2064s  (total 10 workers using 26182 MB)
@  2075s  (total 10 workers using 26277 MB)
@  2086s  (total 10 workers using 26725 MB)
@  2097s  (total 10 workers using 26923 MB)
@  2108s  (total 10 workers using 27016 MB)
@  2119s  (total 10 workers using 26845 MB)
@  2130s  (total 10 workers using 27166 MB)
@  2141s  (total 10 workers using 27122 MB)
@  2152s  (total 10 workers using 27376 MB)
@  2163s  (total 10 workers using 27109 MB)
@  2174s  (total 10 workers using 27463 MB)
@  2185s  (total 10 workers using 27578 MB)
@  2196s  (total 10 workers using 27627 MB)
@  2206s  (total 10 workers using 27863 MB)
@  2217s  (total 10 workers using 27716 MB)
@  2228s  (total 10 workers using 27609 MB)
@  2239s  (total 10 workers using 27879 MB)
@  2250s  (total 10 workers using 28031 MB)
@  2261s  (total 10 workers using 28338 MB)
@  2272s  (total 10 workers using 28280 MB)
@  2283s  (total 10 workers using 28425 MB)
@  2294s  (total 10 workers using 28832 MB)
@  2305s  (total 10 workers using 28616 MB)
@  2316s  (total 10 workers using 28555 MB)
@  2327s  (total 10 workers using 28967 MB)
@  2338s  (total 10 workers using 28753 MB)
@  2349s  (total 10 workers using 28964 MB)
@  2360s  (total 10 workers using 28804 MB)
@  2371s  (total 10 workers using 29300 MB)
@  2382s  (total 10 workers using 29192 MB)
@  2393s  (total 10 workers using 29225 MB)
@  2403s  (total 10 workers using 29420 MB)
@  2415s  (total 10 workers using 29327 MB)
@  2425s  (total 10 workers using 29573 MB)
@  2436s  (total 10 workers using 29664 MB)
@  2447s  (total 10 workers using 29532 MB)
@  2458s  (total 10 workers using 29670 MB)
@  2469s  (total 10 workers using 30007 MB)
@  2480s  (total 10 workers using 29848 MB)
@  2491s  (total 10 workers using 30199 MB)
@  2502s  (total 10 workers using 30286 MB)
@  2513s  (total 10 workers using 30137 MB)
@  2524s  (total 10 workers using 30355 MB)
@  2535s  (total 10 workers using 30240 MB)
@  2546s  (total 10 workers using 30479 MB)
@  2557s  (total 10 workers using 30553 MB)
@  2568s  (total 10 workers using 30569 MB)
@  2579s  (total 10 workers using 30948 MB)
@  2590s  (total 10 workers using 31044 MB)
@  2600s  (total 10 workers using 31095 MB)
@  2612s  (total 10 workers using 31719 MB)
@  2622s  (total 10 workers using 31073 MB)
@  2633s  (total 10 workers using 31452 MB)
@  2644s  (total 10 workers using 31404 MB)
@  2655s  (total 10 workers using 31407 MB)
@  2666s  (total 10 workers using 31451 MB)
@  2677s  (total 10 workers using 31680 MB)
@  2688s  (total 10 workers using 31471 MB)
@  2699s  (total 10 workers using 31837 MB)
@  2710s  (total 10 workers using 32057 MB)
@  2721s  (total 10 workers using 31920 MB)
@  2732s  (total 10 workers using 31971 MB)
@  2743s  (total 10 workers using 32308 MB)
@  2754s  (total 10 workers using 32407 MB)
@  2765s  (total 10 workers using 31884 MB)
@  2776s  (total 10 workers using 32438 MB)
@  2787s  (total 10 workers using 32401 MB)
@  2798s  (total 10 workers using 32469 MB)
@  2809s  (total 10 workers using 32819 MB)
@  2819s  (total 10 workers using 32592 MB)
@  2830s  (total 10 workers using 32919 MB)
@  2841s  (total 10 workers using 32919 MB)
@  2852s  (total 10 workers using 32700 MB)
@  2863s  (total 10 workers using 33043 MB)
@  2874s  (total 10 workers using 33181 MB)
@  2885s  (total 10 workers using 32957 MB)
@  2896s  (total 10 workers using 33269 MB)
@  2907s  (total 10 workers using 33050 MB)
@  2918s  (total 10 workers using 33370 MB)
@  2929s  (total 10 workers using 33566 MB)
@  2940s  (total 10 workers using 33474 MB)
@  2951s  (total 10 workers using 33871 MB)
@  2962s  (total 10 workers using 33989 MB)
@  2973s  (total 10 workers using 34140 MB)
@  2984s  (total 10 workers using 34463 MB)
@  2994s  (total 10 workers using 34468 MB)
@  3006s  (total 10 workers using 34418 MB)
@  3016s  (total 10 workers using 34454 MB)
@  3027s  (total 10 workers using 34463 MB)
@  3038s  (total 10 workers using 34505 MB)
@  3049s  (total 10 workers using 34896 MB)
@  3060s  (total 10 workers using 34940 MB)
@  3071s  (total 10 workers using 34616 MB)
@  3082s  (total 10 workers using 35082 MB)
@  3093s  (total 10 workers using 35194 MB)
@  3104s  (total 10 workers using 34878 MB)
@  3115s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3115s  (total 9 workers using 29842 MB)
@  3126s  (total 9 workers using 30032 MB)
@  3137s  (total 9 workers using 30121 MB)
@  3147s  (total 9 workers using 30135 MB)
@  3158s  (total 9 workers using 30270 MB)
@  3169s  (total 9 workers using 30707 MB)
@  3180s  (total 9 workers using 30626 MB)
@  3191s  (total 9 workers using 30490 MB)
@  3202s  (total 9 workers using 30445 MB)
@  3212s  (total 9 workers using 30541 MB)
@  3223s  (total 9 workers using 30608 MB)
@  3234s  (total 9 workers using 30784 MB)
@  3245s  (total 9 workers using 31211 MB)
@  3256s  (total 9 workers using 31698 MB)
@  3267s  (total 9 workers using 31112 MB)
@  3278s  (total 9 workers using 31296 MB)
@  3289s  (total 9 workers using 31302 MB)
@  3299s  (total 9 workers using 31286 MB)
@  3310s  (total 9 workers using 31489 MB)
@  3321s  (total 9 workers using 31390 MB)
@  3332s  (total 9 workers using 31721 MB)
@  3343s  (total 9 workers using 31516 MB)
@  3354s  (total 9 workers using 31780 MB)
@  3364s  (total 9 workers using 31532 MB)
@  3375s  (total 9 workers using 31695 MB)
@  3386s  (total 9 workers using 31740 MB)
@  3397s  (total 9 workers using 32117 MB)
@  3408s  (total 9 workers using 32576 MB)
@  3419s  (total 9 workers using 32242 MB)
@  3429s  (total 9 workers using 32495 MB)
@  3440s  (total 9 workers using 32481 MB)
@  3451s  (total 9 workers using 32899 MB)
@  3462s  (total 9 workers using 33074 MB)
@  3473s  (total 9 workers using 32550 MB)
@  3484s  (total 9 workers using 32853 MB)
@  3495s  (total 9 workers using 32624 MB)
@  3505s  (total 9 workers using 33125 MB)
@  3516s  (total 9 workers using 33389 MB)
@  3527s  (total 9 workers using 33168 MB)
@  3538s  (total 9 workers using 33516 MB)
@  3549s  (total 9 workers using 33598 MB)
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3556s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3556s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3559s  (total 2 workers using 7802 MB)
@  3570s  (total 2 workers using 7802 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 2 finished with result unknown) python3 avr.py
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3573.94 seconds)[m
unknown
c done
