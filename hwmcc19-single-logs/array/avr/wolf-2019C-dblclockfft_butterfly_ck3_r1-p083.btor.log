c host: c3n13
c start: Fri Oct 18 21:45:01 CEST 2019
c arrayjobid: 17567257
c jobid: 17567641
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r1-p083.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567641.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 17073)
@     0s  (started worker 1 with pid 17074)
@     0s  (started worker 2 with pid 17075)
@     0s  (started worker 3 with pid 17076)
@     0s  (started worker 4 with pid 17077)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 17193)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 379 MB)
@     2s  (started worker 6 with pid 17249)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 651 MB)
@     3s  (started worker 7 with pid 17311)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 964 MB)
@     4s  (started worker 8 with pid 17379)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1205 MB)
@     5s  (started worker 9 with pid 17471)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1436 MB)
@     7s  (started worker 10 with pid 17551)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1610 MB)
@    12s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@    15s  (total 10 workers using 2286 MB)
@    27s  (total 10 workers using 2634 MB)
@    38s  (total 10 workers using 2828 MB)
@    49s  (total 10 workers using 3137 MB)
@    60s  (total 10 workers using 3313 MB)
@    72s  (total 10 workers using 3582 MB)
@    83s  (total 10 workers using 3717 MB)
@    94s  (total 10 workers using 3856 MB)
@   105s  (total 10 workers using 4055 MB)
@   116s  (total 10 workers using 4240 MB)
@   127s  (total 10 workers using 4465 MB)
@   138s  (total 10 workers using 4510 MB)
@   149s  (total 10 workers using 4717 MB)
@   160s  (total 10 workers using 4960 MB)
@   171s  (total 10 workers using 5147 MB)
@   182s  (total 10 workers using 5276 MB)
@   192s  (total 10 workers using 5295 MB)
@   204s  (total 10 workers using 5467 MB)
@   214s  (total 10 workers using 5657 MB)
@   226s  (total 10 workers using 5873 MB)
@   236s  (total 10 workers using 5918 MB)
@   247s  (total 10 workers using 6094 MB)
@   258s  (total 10 workers using 6207 MB)
@   269s  (total 10 workers using 6396 MB)
@   280s  (total 10 workers using 6606 MB)
@   291s  (total 10 workers using 6900 MB)
@   302s  (total 10 workers using 6914 MB)
@   313s  (total 10 workers using 6974 MB)
@   324s  (total 10 workers using 7281 MB)
@   335s  (total 10 workers using 7485 MB)
@   346s  (total 10 workers using 7622 MB)
@   357s  (total 10 workers using 7740 MB)
@   368s  (total 10 workers using 7926 MB)
@   379s  (total 10 workers using 8038 MB)
@   390s  (total 10 workers using 7992 MB)
@   401s  (total 10 workers using 8270 MB)
@   412s  (total 10 workers using 8368 MB)
@   423s  (total 10 workers using 8384 MB)
@   433s  (total 10 workers using 8708 MB)
@   445s  (total 10 workers using 9015 MB)
@   455s  (total 10 workers using 9051 MB)
@   466s  (total 10 workers using 9191 MB)
@   477s  (total 10 workers using 9266 MB)
@   488s  (total 10 workers using 9612 MB)
@   499s  (total 10 workers using 9747 MB)
@   510s  (total 10 workers using 9942 MB)
@   521s  (total 10 workers using 9834 MB)
@   532s  (total 10 workers using 9895 MB)
@   543s  (total 10 workers using 10040 MB)
@   554s  (total 10 workers using 10211 MB)
@   565s  (total 10 workers using 10459 MB)
@   576s  (total 10 workers using 10941 MB)
@   587s  (total 10 workers using 10999 MB)
@   598s  (total 10 workers using 11306 MB)
@   609s  (total 10 workers using 11332 MB)
@   620s  (total 10 workers using 11567 MB)
@   631s  (total 10 workers using 11756 MB)
@   642s  (total 10 workers using 11891 MB)
@   652s  (total 10 workers using 12008 MB)
@   663s  (total 10 workers using 11839 MB)
@   674s  (total 10 workers using 12000 MB)
@   685s  (total 10 workers using 11999 MB)
@   696s  (total 10 workers using 12077 MB)
@   707s  (total 10 workers using 12314 MB)
@   718s  (total 10 workers using 12384 MB)
@   729s  (total 10 workers using 12330 MB)
@   740s  (total 10 workers using 12529 MB)
@   751s  (total 10 workers using 12597 MB)
@   762s  (total 10 workers using 12832 MB)
@   773s  (total 10 workers using 12733 MB)
@   784s  (total 10 workers using 13005 MB)
@   795s  (total 10 workers using 12992 MB)
@   806s  (total 10 workers using 13255 MB)
@   817s  (total 10 workers using 13330 MB)
@   828s  (total 10 workers using 13393 MB)
@   839s  (total 10 workers using 13630 MB)
@   850s  (total 10 workers using 13723 MB)
@   861s  (total 10 workers using 13601 MB)
@   871s  (total 10 workers using 13998 MB)
@   883s  (total 10 workers using 13784 MB)
@   893s  (total 10 workers using 14040 MB)
@   904s  (total 10 workers using 14057 MB)
@   915s  (total 10 workers using 14055 MB)
@   926s  (total 10 workers using 14331 MB)
@   937s  (total 10 workers using 14430 MB)
@   948s  (total 10 workers using 14646 MB)
@   959s  (total 10 workers using 14777 MB)
@   970s  (total 10 workers using 14923 MB)
@   981s  (total 10 workers using 14994 MB)
@   992s  (total 10 workers using 14959 MB)
@  1003s  (total 10 workers using 15096 MB)
@  1014s  (total 10 workers using 15192 MB)
@  1025s  (total 10 workers using 15142 MB)
@  1036s  (total 10 workers using 15149 MB)
@  1047s  (total 10 workers using 15517 MB)
@  1058s  (total 10 workers using 15407 MB)
@  1068s  (total 10 workers using 15521 MB)
@  1080s  (total 10 workers using 15814 MB)
@  1090s  (total 10 workers using 15816 MB)
@  1101s  (total 10 workers using 15933 MB)
@  1112s  (total 10 workers using 16052 MB)
@  1123s  (total 10 workers using 15944 MB)
@  1134s  (total 10 workers using 16299 MB)
@  1145s  (total 10 workers using 16176 MB)
@  1156s  (total 10 workers using 16421 MB)
@  1167s  (total 10 workers using 16380 MB)
@  1178s  (total 10 workers using 16510 MB)
@  1189s  (total 10 workers using 16519 MB)
@  1200s  (total 10 workers using 16757 MB)
@  1211s  (total 10 workers using 16696 MB)
@  1222s  (total 10 workers using 16861 MB)
@  1233s  (total 10 workers using 17001 MB)
@  1244s  (total 10 workers using 16998 MB)
@  1255s  (total 10 workers using 17309 MB)
@  1265s  (total 10 workers using 17159 MB)
@  1277s  (total 10 workers using 17039 MB)
@  1287s  (total 10 workers using 17118 MB)
@  1298s  (total 10 workers using 17496 MB)
@  1309s  (total 10 workers using 17389 MB)
@  1320s  (total 10 workers using 17727 MB)
@  1331s  (total 10 workers using 17823 MB)
@  1342s  (total 10 workers using 17919 MB)
@  1353s  (total 10 workers using 18041 MB)
@  1364s  (total 10 workers using 18131 MB)
@  1375s  (total 10 workers using 18304 MB)
@  1386s  (total 10 workers using 18226 MB)
@  1397s  (total 10 workers using 18391 MB)
@  1408s  (total 10 workers using 18692 MB)
@  1419s  (total 10 workers using 18277 MB)
@  1430s  (total 10 workers using 18609 MB)
@  1441s  (total 10 workers using 18624 MB)
@  1452s  (total 10 workers using 18490 MB)
@  1462s  (total 10 workers using 18337 MB)
@  1474s  (total 10 workers using 18714 MB)
@  1484s  (total 10 workers using 18292 MB)
@  1495s  (total 10 workers using 19112 MB)
@  1506s  (total 10 workers using 18682 MB)
@  1517s  (total 10 workers using 19189 MB)
@  1528s  (total 10 workers using 18777 MB)
@  1539s  (total 10 workers using 18900 MB)
@  1550s  (total 10 workers using 19336 MB)
@  1561s  (total 10 workers using 18904 MB)
@  1572s  (total 10 workers using 19708 MB)
@  1583s  (total 10 workers using 19236 MB)
@  1594s  (total 10 workers using 19508 MB)
@  1605s  (total 10 workers using 20139 MB)
@  1616s  (total 10 workers using 20258 MB)
@  1627s  (total 10 workers using 20162 MB)
@  1638s  (total 10 workers using 20285 MB)
@  1649s  (total 10 workers using 20935 MB)
@  1660s  (total 10 workers using 20485 MB)
@  1671s  (total 10 workers using 20900 MB)
@  1681s  (total 10 workers using 21060 MB)
@  1693s  (total 10 workers using 21096 MB)
@  1703s  (total 10 workers using 21175 MB)
@  1714s  (total 10 workers using 20820 MB)
@  1725s  (total 10 workers using 21031 MB)
@  1736s  (total 10 workers using 21321 MB)
@  1747s  (total 10 workers using 21424 MB)
@  1758s  (total 10 workers using 21300 MB)
@  1769s  (total 10 workers using 21351 MB)
@  1780s  (total 10 workers using 21412 MB)
@  1791s  (total 10 workers using 21364 MB)
@  1802s  (total 10 workers using 21410 MB)
@  1813s  (total 10 workers using 21582 MB)
@  1824s  (total 10 workers using 21828 MB)
@  1835s  (total 10 workers using 21422 MB)
@  1846s  (total 10 workers using 21760 MB)
@  1857s  (total 10 workers using 22225 MB)
@  1868s  (total 10 workers using 21990 MB)
@  1878s  (total 10 workers using 22276 MB)
@  1889s  (total 10 workers using 22544 MB)
@  1900s  (total 10 workers using 22480 MB)
@  1911s  (total 10 workers using 22509 MB)
@  1922s  (total 10 workers using 22789 MB)
@  1933s  (total 10 workers using 22936 MB)
@  1944s  (total 10 workers using 22786 MB)
@  1955s  (total 10 workers using 22885 MB)
@  1966s  (total 10 workers using 23238 MB)
@  1977s  (total 10 workers using 23231 MB)
@  1988s  (total 10 workers using 23152 MB)
@  1999s  (total 10 workers using 23434 MB)
@  2010s  (total 10 workers using 23293 MB)
@  2021s  (total 10 workers using 23581 MB)
@  2032s  (total 10 workers using 23634 MB)
@  2043s  (total 10 workers using 23615 MB)
@  2054s  (total 10 workers using 23663 MB)
@  2065s  (total 10 workers using 24076 MB)
@  2076s  (total 10 workers using 23978 MB)
@  2087s  (total 10 workers using 23824 MB)
@  2097s  (total 10 workers using 24036 MB)
@  2108s  (total 10 workers using 23924 MB)
@  2119s  (total 10 workers using 23954 MB)
@  2130s  (total 10 workers using 24270 MB)
@  2141s  (total 10 workers using 23978 MB)
@  2152s  (total 10 workers using 24048 MB)
@  2163s  (total 10 workers using 24519 MB)
@  2174s  (total 10 workers using 24150 MB)
@  2185s  (total 10 workers using 24569 MB)
@  2196s  (total 10 workers using 24564 MB)
@  2207s  (total 10 workers using 24267 MB)
@  2218s  (total 10 workers using 24538 MB)
@  2229s  (total 10 workers using 25004 MB)
@  2240s  (total 10 workers using 25072 MB)
@  2251s  (total 10 workers using 25018 MB)
@  2262s  (total 10 workers using 25384 MB)
@  2273s  (total 10 workers using 25179 MB)
@  2284s  (total 10 workers using 25144 MB)
@  2295s  (total 10 workers using 25215 MB)
@  2306s  (total 10 workers using 25385 MB)
@  2317s  (total 10 workers using 25681 MB)
@  2328s  (total 10 workers using 25405 MB)
@  2338s  (total 10 workers using 25702 MB)
@  2350s  (total 10 workers using 25475 MB)
@  2360s  (total 10 workers using 25794 MB)
@  2371s  (total 10 workers using 26024 MB)
@  2382s  (total 10 workers using 25985 MB)
@  2393s  (total 10 workers using 26105 MB)
@  2404s  (total 10 workers using 26165 MB)
@  2415s  (total 10 workers using 26069 MB)
@  2426s  (total 10 workers using 26029 MB)
@  2437s  (total 10 workers using 26185 MB)
@  2448s  (total 10 workers using 26452 MB)
@  2459s  (total 10 workers using 26317 MB)
@  2470s  (total 10 workers using 26583 MB)
@  2481s  (total 10 workers using 26416 MB)
@  2492s  (total 10 workers using 26684 MB)
@  2503s  (total 10 workers using 26475 MB)
@  2514s  (total 10 workers using 26768 MB)
@  2525s  (total 10 workers using 26585 MB)
@  2536s  (total 10 workers using 26613 MB)
@  2547s  (total 10 workers using 26636 MB)
@  2557s  (total 10 workers using 26940 MB)
@  2568s  (total 10 workers using 27023 MB)
@  2579s  (total 10 workers using 26946 MB)
@  2590s  (total 10 workers using 27187 MB)
@  2601s  (total 10 workers using 27157 MB)
@  2612s  (total 10 workers using 27476 MB)
@  2623s  (total 10 workers using 27399 MB)
@  2634s  (total 10 workers using 27480 MB)
@  2645s  (total 10 workers using 27876 MB)
@  2656s  (total 10 workers using 27768 MB)
@  2667s  (total 10 workers using 27510 MB)
@  2678s  (total 10 workers using 27967 MB)
@  2689s  (total 10 workers using 27659 MB)
@  2700s  (total 10 workers using 27491 MB)
@  2711s  (total 10 workers using 28043 MB)
@  2722s  (total 10 workers using 27790 MB)
@  2732s  (total 10 workers using 27820 MB)
@  2744s  (total 10 workers using 28244 MB)
@  2754s  (total 10 workers using 28318 MB)
@  2765s  (total 10 workers using 28218 MB)
@  2776s  (total 10 workers using 28532 MB)
@  2787s  (total 10 workers using 28284 MB)
@  2798s  (total 10 workers using 28383 MB)
@  2809s  (total 10 workers using 28445 MB)
@  2820s  (total 10 workers using 28527 MB)
@  2831s  (total 10 workers using 28589 MB)
@  2842s  (total 10 workers using 28663 MB)
@  2853s  (total 10 workers using 28726 MB)
@  2864s  (total 10 workers using 28785 MB)
@  2875s  (total 10 workers using 28937 MB)
@  2886s  (total 10 workers using 29125 MB)
@  2897s  (total 10 workers using 29092 MB)
@  2908s  (total 10 workers using 29570 MB)
@  2919s  (total 10 workers using 29328 MB)
@  2929s  (total 10 workers using 29691 MB)
@  2941s  (total 10 workers using 29774 MB)
@  2951s  (total 10 workers using 29567 MB)
@  2962s  (total 10 workers using 30301 MB)
@  2973s  (total 10 workers using 30601 MB)
@  2984s  (total 10 workers using 30209 MB)
@  2995s  (total 10 workers using 30196 MB)
@  3006s  (total 10 workers using 30724 MB)
@  3017s  (total 10 workers using 30925 MB)
@  3028s  (total 10 workers using 30636 MB)
@  3039s  (total 10 workers using 31042 MB)
@  3050s  (total 10 workers using 30480 MB)
@  3061s  (total 10 workers using 31209 MB)
@  3072s  (total 10 workers using 31176 MB)
@  3083s  (total 10 workers using 30502 MB)
@  3094s  (total 10 workers using 31247 MB)
@  3105s  (total 10 workers using 30605 MB)
@  3116s  (total 10 workers using 30950 MB)
@  3126s  (total 10 workers using 30833 MB)
@  3137s  (total 10 workers using 30891 MB)
@  3148s  (total 10 workers using 30916 MB)
@  3159s  (total 10 workers using 30906 MB)
@  3170s  (total 10 workers using 31297 MB)
@  3181s  (total 10 workers using 31321 MB)
@  3192s  (total 10 workers using 31118 MB)
@  3203s  (total 10 workers using 31769 MB)
@  3214s  (total 10 workers using 31483 MB)
@  3225s  (total 10 workers using 31687 MB)
@  3236s  (total 10 workers using 31716 MB)
@  3247s  (total 10 workers using 31453 MB)
@  3258s  (total 10 workers using 31813 MB)
@  3269s  (total 10 workers using 31959 MB)
@  3280s  (total 10 workers using 31619 MB)
@  3291s  (total 10 workers using 31629 MB)
@  3301s  (total 10 workers using 31768 MB)
@  3313s  (total 10 workers using 32106 MB)
@  3323s  (total 10 workers using 32126 MB)
@  3334s  (total 10 workers using 31862 MB)
@  3345s  (total 10 workers using 32243 MB)
@  3356s  (total 10 workers using 31972 MB)
@  3367s  (total 10 workers using 32330 MB)
@  3378s  (total 10 workers using 32417 MB)
@  3389s  (total 10 workers using 32173 MB)
@  3400s  (total 10 workers using 32520 MB)
@  3411s  (total 10 workers using 32578 MB)
@  3422s  (total 10 workers using 32267 MB)
@  3433s  (total 10 workers using 32984 MB)
@  3444s  (total 10 workers using 32736 MB)
@  3455s  (total 10 workers using 33274 MB)
@  3466s  (total 10 workers using 32882 MB)
@  3477s  (total 10 workers using 33334 MB)
@  3488s  (total 10 workers using 33050 MB)
@  3498s  (total 10 workers using 33014 MB)
@  3509s  (total 10 workers using 33322 MB)
@  3520s  (total 10 workers using 33313 MB)
@  3531s  (total 10 workers using 33365 MB)
@  3542s  (total 10 workers using 33770 MB)
@  3553s  (total 10 workers using 33868 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3556s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3556s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3556s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3556s  (copied results from worker 0 in /tmp//pr_test)
@  3556s  [0;30;47m(proof race finished with answer unknown in 3556.12 seconds)[m
unknown
c done
