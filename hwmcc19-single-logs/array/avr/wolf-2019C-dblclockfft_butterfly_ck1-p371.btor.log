c host: c3n26
c start: Fri Oct 18 22:45:17 CEST 2019
c arrayjobid: 17567257
c jobid: 17567704
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck1-p371.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567704.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 23412)
@     0s  (started worker 1 with pid 23413)
@     0s  (started worker 2 with pid 23414)
@     0s  (started worker 3 with pid 23415)
@     0s  (started worker 4 with pid 23416)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 23533)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 445 MB)
@     2s  (started worker 6 with pid 23589)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 888 MB)
@     3s  (started worker 7 with pid 23651)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 1235 MB)
@     4s  (started worker 8 with pid 23719)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1503 MB)
@     5s  (started worker 9 with pid 23811)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1826 MB)
@     7s  (started worker 10 with pid 23891)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 2114 MB)
@    15s  (total 11 workers using 3837 MB)
@    27s  (total 11 workers using 5018 MB)
@    39s  (total 11 workers using 6213 MB)
@    50s  (total 11 workers using 7201 MB)
@    61s  (total 11 workers using 8169 MB)
@    73s  (total 11 workers using 9115 MB)
@    84s  (total 11 workers using 9927 MB)
@    95s  (total 11 workers using 10539 MB)
@   106s  (total 11 workers using 11311 MB)
@   117s  (total 11 workers using 11695 MB)
@   128s  (total 11 workers using 12510 MB)
@   139s  (total 11 workers using 12331 MB)
@   150s  (total 11 workers using 13062 MB)
@   161s  (total 11 workers using 13348 MB)
@   172s  (total 11 workers using 14050 MB)
@   183s  (total 11 workers using 14749 MB)
@   194s  (total 11 workers using 15129 MB)
@   205s  (total 11 workers using 16205 MB)
@   216s  (total 11 workers using 16262 MB)
@   227s  (total 11 workers using 17181 MB)
@   238s  (total 11 workers using 17457 MB)
@   249s  (total 11 workers using 17817 MB)
@   260s  (total 11 workers using 18536 MB)
@   272s  (total 11 workers using 18761 MB)
@   282s  (total 11 workers using 19139 MB)
@   294s  (total 11 workers using 19550 MB)
@   305s  (total 11 workers using 19701 MB)
@   316s  (total 11 workers using 19946 MB)
@   327s  (total 11 workers using 20202 MB)
@   338s  (total 11 workers using 20598 MB)
@   349s  (total 11 workers using 20915 MB)
@   360s  (total 11 workers using 21229 MB)
@   371s  (total 11 workers using 21328 MB)
@   382s  (total 11 workers using 21532 MB)
@   393s  (total 11 workers using 21811 MB)
@   404s  (total 11 workers using 22476 MB)
@   415s  (total 11 workers using 22277 MB)
@   426s  (total 11 workers using 22314 MB)
@   437s  (total 11 workers using 22895 MB)
@   448s  (total 11 workers using 23126 MB)
@   459s  (total 11 workers using 23370 MB)
@   470s  (total 11 workers using 23888 MB)
@   481s  (total 11 workers using 23863 MB)
@   492s  (total 11 workers using 24508 MB)
@   503s  (total 11 workers using 24539 MB)
@   514s  (total 11 workers using 24910 MB)
@   525s  (total 11 workers using 25212 MB)
@   537s  (total 11 workers using 25225 MB)
@   547s  (total 11 workers using 25774 MB)
@   559s  (total 11 workers using 25971 MB)
@   570s  (total 11 workers using 25938 MB)
@   581s  (total 11 workers using 26877 MB)
@   592s  (total 11 workers using 26688 MB)
@   603s  (total 11 workers using 27105 MB)
@   614s  (total 11 workers using 27137 MB)
@   625s  (total 11 workers using 28005 MB)
@   636s  (total 11 workers using 28489 MB)
@   647s  (total 11 workers using 28781 MB)
@   658s  (total 11 workers using 29280 MB)
@   669s  (total 11 workers using 29317 MB)
@   680s  (total 11 workers using 30121 MB)
@   691s  (total 11 workers using 29776 MB)
@   702s  (total 11 workers using 30334 MB)
@   714s  (total 11 workers using 30408 MB)
@   724s  (total 11 workers using 30163 MB)
@   736s  (total 11 workers using 30691 MB)
@   747s  (total 11 workers using 30873 MB)
@   758s  (total 11 workers using 30873 MB)
@   769s  (total 11 workers using 31477 MB)
@   780s  (total 11 workers using 31354 MB)
@   791s  (total 11 workers using 32025 MB)
@   802s  (total 11 workers using 32154 MB)
@   813s  (total 11 workers using 32446 MB)
@   824s  (total 11 workers using 32509 MB)
@   835s  (total 11 workers using 32620 MB)
@   846s  (total 11 workers using 33289 MB)
@   857s  (total 11 workers using 33895 MB)
@   868s  (total 11 workers using 33464 MB)
@   879s  (total 11 workers using 34050 MB)
@   891s  (total 11 workers using 33432 MB)
@   901s  (total 11 workers using 34558 MB)
@   913s  (total 11 workers using 34602 MB)
@   924s  (total 11 workers using 34746 MB)
@   931s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   935s  (total 10 workers using 33553 MB)
@   946s  (total 10 workers using 33051 MB)
@   957s  (total 10 workers using 33631 MB)
@   968s  (total 10 workers using 35050 MB)
@   979s  (total 10 workers using 34498 MB)
@   989s  (total 10 workers using 34948 MB)
@  1001s  (total 10 workers using 35320 MB)
@  1011s  (total 10 workers using 35102 MB)
@  1022s  (total 10 workers using 35286 MB)
@  1033s  (total 10 workers using 35578 MB)
@  1044s  (total 10 workers using 35897 MB)
@  1055s  (total 10 workers using 35506 MB)
@  1066s  (total 10 workers using 36070 MB)
@  1077s  (total 10 workers using 36383 MB)
@  1088s  (total 10 workers using 35105 MB)
@  1099s  (total 10 workers using 36165 MB)
@  1110s  (total 10 workers using 36412 MB)
@  1121s  (total 10 workers using 36016 MB)
@  1132s  (total 10 workers using 36383 MB)
@  1143s  (total 10 workers using 36456 MB)
@  1154s  (total 10 workers using 35918 MB)
@  1165s  (total 10 workers using 36702 MB)
@  1176s  (total 10 workers using 36603 MB)
@  1187s  (total 10 workers using 37282 MB)
@  1198s  (total 10 workers using 36653 MB)
@  1209s  (total 10 workers using 36732 MB)
@  1220s  (total 10 workers using 37527 MB)
@  1231s  (total 10 workers using 37192 MB)
@  1242s  (total 10 workers using 37031 MB)
@  1252s  (total 10 workers using 38206 MB)
@  1264s  (total 10 workers using 37533 MB)
@  1274s  (total 10 workers using 37820 MB)
@  1285s  (total 10 workers using 38010 MB)
@  1296s  (total 10 workers using 38161 MB)
@  1307s  (total 10 workers using 38650 MB)
@  1318s  (total 10 workers using 38722 MB)
@  1329s  (total 10 workers using 38644 MB)
@  1340s  (total 10 workers using 38873 MB)
@  1351s  (total 10 workers using 39063 MB)
@  1362s  (total 10 workers using 38995 MB)
@  1373s  (total 10 workers using 39810 MB)
@  1384s  (total 10 workers using 39816 MB)
@  1395s  (total 10 workers using 39836 MB)
@  1406s  (total 10 workers using 39438 MB)
@  1417s  (total 10 workers using 40343 MB)
@  1428s  (total 10 workers using 39738 MB)
@  1439s  (total 10 workers using 40024 MB)
@  1450s  (total 10 workers using 40976 MB)
@  1461s  (total 10 workers using 41140 MB)
@  1472s  (total 10 workers using 40135 MB)
@  1483s  (total 10 workers using 40828 MB)
@  1494s  (total 10 workers using 41028 MB)
@  1505s  (total 10 workers using 40814 MB)
@  1515s  (total 10 workers using 41706 MB)
@  1527s  (total 10 workers using 41808 MB)
@  1537s  (total 10 workers using 42842 MB)
@  1548s  (total 10 workers using 42604 MB)
@  1559s  (total 10 workers using 42299 MB)
@  1570s  (total 10 workers using 41872 MB)
@  1581s  (total 10 workers using 42407 MB)
@  1592s  (total 10 workers using 43192 MB)
@  1603s  (total 10 workers using 42076 MB)
@  1614s  (total 10 workers using 43294 MB)
@  1625s  (total 10 workers using 42990 MB)
@  1636s  (total 10 workers using 43350 MB)
@  1647s  (total 10 workers using 43458 MB)
@  1658s  (total 10 workers using 43154 MB)
@  1669s  (total 10 workers using 43546 MB)
@  1680s  (total 10 workers using 43599 MB)
@  1691s  (total 10 workers using 43859 MB)
@  1702s  (total 10 workers using 44301 MB)
@  1713s  (total 10 workers using 44527 MB)
@  1724s  (total 10 workers using 44984 MB)
@  1735s  (total 10 workers using 44304 MB)
@  1746s  (total 10 workers using 45213 MB)
@  1757s  (total 10 workers using 44224 MB)
@  1768s  (total 10 workers using 44915 MB)
@  1779s  (total 10 workers using 45644 MB)
@  1790s  (total 10 workers using 45412 MB)
@  1800s  (total 10 workers using 45348 MB)
@  1812s  (total 10 workers using 44983 MB)
@  1822s  (total 10 workers using 45806 MB)
@  1833s  (total 10 workers using 45899 MB)
@  1844s  (total 10 workers using 45843 MB)
@  1855s  (total 10 workers using 46093 MB)
@  1866s  (total 10 workers using 46252 MB)
@  1877s  (total 10 workers using 46753 MB)
@  1888s  (total 10 workers using 46186 MB)
@  1899s  (total 10 workers using 46830 MB)
@  1910s  (total 10 workers using 46204 MB)
@  1921s  (total 10 workers using 47184 MB)
@  1932s  (total 10 workers using 46750 MB)
@  1943s  (total 10 workers using 48056 MB)
@  1954s  (total 10 workers using 47631 MB)
@  1965s  (total 10 workers using 48033 MB)
@  1976s  (total 10 workers using 47723 MB)
@  1987s  (total 10 workers using 47187 MB)
@  1998s  (total 10 workers using 47596 MB)
@  2009s  (total 10 workers using 48165 MB)
@  2020s  (total 10 workers using 49245 MB)
@  2031s  (total 10 workers using 48433 MB)
@  2041s  (total 10 workers using 49453 MB)
@  2053s  (total 10 workers using 48195 MB)
@  2063s  (total 10 workers using 48848 MB)
@  2074s  (total 10 workers using 49170 MB)
@  2085s  (total 10 workers using 48606 MB)
@  2096s  (total 10 workers using 48647 MB)
@  2107s  (total 10 workers using 49335 MB)
@  2118s  (total 10 workers using 50823 MB)
@  2129s  (total 10 workers using 50192 MB)
@  2140s  (total 10 workers using 50990 MB)
@  2151s  (total 10 workers using 50187 MB)
@  2162s  (total 10 workers using 51306 MB)
@  2173s  (total 10 workers using 50538 MB)
@  2184s  (total 10 workers using 51100 MB)
@  2195s  (total 10 workers using 51499 MB)
@  2206s  (total 10 workers using 52530 MB)
@  2217s  (total 10 workers using 51917 MB)
@  2228s  (total 10 workers using 53038 MB)
@  2239s  (total 10 workers using 51765 MB)
@  2250s  (total 10 workers using 52696 MB)
@  2261s  (total 10 workers using 51613 MB)
@  2272s  (total 10 workers using 51692 MB)
@  2283s  (total 10 workers using 52290 MB)
@  2294s  (total 10 workers using 51975 MB)
@  2305s  (total 10 workers using 52379 MB)
@  2316s  (total 10 workers using 52180 MB)
@  2327s  (total 10 workers using 53148 MB)
@  2338s  (total 10 workers using 52172 MB)
@  2349s  (total 10 workers using 53126 MB)
@  2360s  (total 10 workers using 51759 MB)
@  2371s  (total 10 workers using 52230 MB)
@  2382s  (total 10 workers using 53243 MB)
@  2393s  (total 10 workers using 53751 MB)
@  2404s  (total 10 workers using 52445 MB)
@  2415s  (total 10 workers using 53416 MB)
@  2426s  (total 10 workers using 52722 MB)
@  2436s  (total 10 workers using 53195 MB)
@  2448s  (total 10 workers using 53349 MB)
@  2458s  (total 10 workers using 53798 MB)
@  2469s  (total 10 workers using 53602 MB)
@  2480s  (total 10 workers using 54292 MB)
@  2491s  (total 10 workers using 53431 MB)
@  2502s  (total 10 workers using 54426 MB)
@  2513s  (total 10 workers using 53497 MB)
@  2524s  (total 10 workers using 54077 MB)
@  2535s  (total 10 workers using 54151 MB)
@  2546s  (total 10 workers using 53928 MB)
@  2557s  (total 10 workers using 54511 MB)
@  2568s  (total 10 workers using 54784 MB)
@  2579s  (total 10 workers using 55046 MB)
@  2590s  (total 10 workers using 54708 MB)
@  2601s  (total 10 workers using 54996 MB)
@  2612s  (total 10 workers using 55081 MB)
@  2623s  (total 10 workers using 54954 MB)
@  2634s  (total 10 workers using 55820 MB)
@  2645s  (total 10 workers using 54581 MB)
@  2656s  (total 10 workers using 55003 MB)
@  2667s  (total 10 workers using 54594 MB)
@  2678s  (total 10 workers using 56375 MB)
@  2689s  (total 10 workers using 55873 MB)
@  2700s  (total 10 workers using 56806 MB)
@  2711s  (total 10 workers using 55928 MB)
@  2722s  (total 10 workers using 56127 MB)
@  2733s  (total 10 workers using 55942 MB)
@  2743s  (total 10 workers using 56444 MB)
@  2755s  (total 10 workers using 56389 MB)
@  2765s  (total 10 workers using 55856 MB)
@  2777s  (total 10 workers using 55720 MB)
@  2787s  (total 10 workers using 57321 MB)
@  2798s  (total 10 workers using 57338 MB)
@  2809s  (total 10 workers using 57130 MB)
@  2820s  (total 10 workers using 56987 MB)
@  2831s  (total 10 workers using 57001 MB)
@  2842s  (total 10 workers using 57127 MB)
@  2853s  (total 10 workers using 57360 MB)
@  2864s  (total 10 workers using 57044 MB)
@  2875s  (total 10 workers using 57652 MB)
@  2886s  (total 10 workers using 58557 MB)
@  2897s  (total 10 workers using 58185 MB)
@  2908s  (total 10 workers using 58516 MB)
@  2919s  (total 10 workers using 57918 MB)
@  2930s  (total 10 workers using 57955 MB)
@  2941s  (total 10 workers using 57701 MB)
@  2952s  (total 10 workers using 59062 MB)
@  2963s  (total 10 workers using 58197 MB)
@  2974s  (total 10 workers using 57940 MB)
@  2985s  (total 10 workers using 57984 MB)
@  2996s  (total 10 workers using 58791 MB)
@  3007s  (total 10 workers using 58546 MB)
@  3018s  (total 10 workers using 58283 MB)
@  3029s  (total 10 workers using 59019 MB)
@  3040s  (total 10 workers using 58572 MB)
@  3051s  (total 10 workers using 59458 MB)
@  3062s  (total 10 workers using 59030 MB)
@  3073s  (total 10 workers using 58833 MB)
@  3084s  (total 10 workers using 58135 MB)
@  3095s  (total 10 workers using 60328 MB)
@  3106s  (total 10 workers using 59059 MB)
@  3116s  (total 10 workers using 60031 MB)
@  3128s  (total 10 workers using 59017 MB)
@  3138s  (total 10 workers using 59675 MB)
@  3150s  (total 10 workers using 60109 MB)
@  3160s  (total 10 workers using 60372 MB)
@  3171s  (total 10 workers using 60072 MB)
@  3182s  (total 10 workers using 60573 MB)
@  3193s  (total 10 workers using 61084 MB)
@  3204s  (total 10 workers using 60579 MB)
@  3215s  (total 10 workers using 61553 MB)
@  3226s  (total 10 workers using 60185 MB)
@  3237s  (total 10 workers using 61501 MB)
@  3248s  (total 10 workers using 60480 MB)
@  3259s  (total 10 workers using 61540 MB)
@  3270s  (total 10 workers using 62002 MB)
@  3281s  (total 10 workers using 61525 MB)
@  3292s  (total 10 workers using 61480 MB)
@  3303s  (total 10 workers using 61862 MB)
@  3314s  (total 10 workers using 62721 MB)
@  3325s  (total 10 workers using 62118 MB)
@  3336s  (total 10 workers using 63429 MB)
@  3347s  (total 10 workers using 62304 MB)
@  3358s  (total 10 workers using 62582 MB)
@  3369s  (total 10 workers using 62018 MB)
@  3380s  (total 10 workers using 62790 MB)
@  3391s  (total 10 workers using 62441 MB)
@  3402s  (total 10 workers using 61523 MB)
@  3413s  (total 10 workers using 63497 MB)
@  3424s  (total 10 workers using 62794 MB)
@  3435s  (total 10 workers using 64151 MB)
@  3445s  (total 10 workers using 63182 MB)
@  3457s  (total 10 workers using 62886 MB)
@  3467s  (total 10 workers using 62996 MB)
@  3479s  (total 10 workers using 63002 MB)
@  3489s  (total 10 workers using 64711 MB)
@  3500s  (total 10 workers using 62822 MB)
@  3511s  (total 10 workers using 64176 MB)
@  3522s  (total 10 workers using 64083 MB)
@  3533s  (total 10 workers using 64934 MB)
@  3544s  (total 10 workers using 64747 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3555s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (total 3 workers using 56659 MB)
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3559s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3564s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3564s  (copied results from worker 0 in /tmp//pr_test)
@  3564s  [0;30;47m(proof race finished with answer unknown in 3564.03 seconds)[m
unknown
c done
