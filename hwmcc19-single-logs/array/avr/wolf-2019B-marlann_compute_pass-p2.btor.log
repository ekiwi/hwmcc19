c host: c3n20
c start: Fri Oct 18 21:26:08 CEST 2019
c arrayjobid: 17567257
c jobid: 17567615
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019B/marlann_compute_pass-p2.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567615.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 2070)
@     0s  (started worker 1 with pid 2071)
@     0s  (started worker 2 with pid 2072)
@     0s  (started worker 3 with pid 2073)
@     0s  (started worker 4 with pid 2074)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 2198)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 266 MB)
@     1s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@     2s  (started worker 6 with pid 2256)
@     2s  (spawned 1 workers)
@     2s  (total 6 workers using 366 MB)
@     3s  (started worker 7 with pid 2314)
@     3s  (spawned 1 workers)
@     3s  (total 7 workers using 452 MB)
@     4s  (started worker 8 with pid 2378)
@     4s  (spawned 1 workers)
@     4s  (total 8 workers using 588 MB)
@     5s  (started worker 9 with pid 2462)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 730 MB)
@     6s  (started worker 10 with pid 2537)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 917 MB)
@    14s  (total 10 workers using 1430 MB)
@    26s  (total 10 workers using 1839 MB)
@    38s  (total 10 workers using 2110 MB)
@    49s  (total 10 workers using 2315 MB)
@    60s  (total 10 workers using 2599 MB)
@    71s  (total 10 workers using 2841 MB)
@    82s  (total 10 workers using 2968 MB)
@    93s  (total 10 workers using 3086 MB)
@   104s  (total 10 workers using 3254 MB)
@   115s  (total 10 workers using 3374 MB)
@   125s  (total 10 workers using 3473 MB)
@   136s  (total 10 workers using 3608 MB)
@   147s  (total 10 workers using 3757 MB)
@   158s  (total 10 workers using 3868 MB)
@   169s  (total 10 workers using 3959 MB)
@   180s  (total 10 workers using 4095 MB)
@   191s  (total 10 workers using 4231 MB)
@   202s  (total 10 workers using 4351 MB)
@   213s  (total 10 workers using 4344 MB)
@   224s  (total 10 workers using 4364 MB)
@   235s  (total 10 workers using 4510 MB)
@   246s  (total 10 workers using 4477 MB)
@   256s  (total 10 workers using 4591 MB)
@   267s  (total 10 workers using 4727 MB)
@   278s  (total 10 workers using 4755 MB)
@   289s  (total 10 workers using 4791 MB)
@   300s  (total 10 workers using 4848 MB)
@   311s  (total 10 workers using 4867 MB)
@   322s  (total 10 workers using 4924 MB)
@   333s  (total 10 workers using 5002 MB)
@   344s  (total 10 workers using 5118 MB)
@   355s  (total 10 workers using 5127 MB)
@   366s  (total 10 workers using 5421 MB)
@   377s  (total 10 workers using 5449 MB)
@   387s  (total 10 workers using 5511 MB)
@   399s  (total 10 workers using 5597 MB)
@   409s  (total 10 workers using 5670 MB)
@   420s  (total 10 workers using 5591 MB)
@   431s  (total 10 workers using 5714 MB)
@   442s  (total 10 workers using 5778 MB)
@   453s  (total 10 workers using 5720 MB)
@   464s  (total 10 workers using 5835 MB)
@   475s  (total 10 workers using 5800 MB)
@   486s  (total 10 workers using 5926 MB)
@   497s  (total 10 workers using 5902 MB)
@   508s  (total 10 workers using 6044 MB)
@   519s  (total 10 workers using 6220 MB)
@   530s  (total 10 workers using 6232 MB)
@   540s  (total 10 workers using 6436 MB)
@   551s  (total 10 workers using 6446 MB)
@   562s  (total 10 workers using 6498 MB)
@   573s  (total 10 workers using 6575 MB)
@   584s  (total 10 workers using 6581 MB)
@   586s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   595s  (total 9 workers using 6397 MB)
@   606s  (total 9 workers using 6346 MB)
@   617s  (total 9 workers using 6408 MB)
@   627s  (total 9 workers using 6705 MB)
@   638s  (total 9 workers using 6752 MB)
@   649s  (total 9 workers using 6596 MB)
@   660s  (total 9 workers using 6750 MB)
@   671s  (total 9 workers using 6821 MB)
@   682s  (total 9 workers using 6732 MB)
@   692s  (total 9 workers using 6842 MB)
@   703s  (total 9 workers using 7122 MB)
@   714s  (total 9 workers using 6777 MB)
@   725s  (total 9 workers using 6773 MB)
@   736s  (total 9 workers using 7139 MB)
@   747s  (total 9 workers using 6885 MB)
@   757s  (total 9 workers using 6924 MB)
@   768s  (total 9 workers using 6912 MB)
@   779s  (total 9 workers using 7352 MB)
@   790s  (total 9 workers using 7129 MB)
@   797s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@   801s  (total 8 workers using 5215 MB)
@   811s  (total 8 workers using 5313 MB)
@   822s  (total 8 workers using 5317 MB)
@   833s  (total 8 workers using 5292 MB)
@   843s  (total 8 workers using 5468 MB)
@   854s  (total 8 workers using 5337 MB)
@   865s  (total 8 workers using 5419 MB)
@   876s  (total 8 workers using 5420 MB)
@   886s  (total 8 workers using 5435 MB)
@   897s  (total 8 workers using 5439 MB)
@   908s  (total 8 workers using 5504 MB)
@   919s  (total 8 workers using 5606 MB)
@   929s  (total 8 workers using 5965 MB)
@   940s  (total 8 workers using 5990 MB)
@   951s  (total 8 workers using 5917 MB)
@   961s  (total 8 workers using 5982 MB)
@   972s  (total 8 workers using 5989 MB)
@   983s  (total 8 workers using 6059 MB)
@   993s  (total 8 workers using 6070 MB)
@  1004s  (total 8 workers using 6094 MB)
@  1015s  (total 8 workers using 6118 MB)
@  1026s  (total 8 workers using 6184 MB)
@  1036s  (total 8 workers using 6383 MB)
@  1047s  (total 8 workers using 6532 MB)
@  1058s  (total 8 workers using 6302 MB)
@  1068s  (total 8 workers using 6096 MB)
@  1079s  (total 8 workers using 6044 MB)
@  1090s  (total 8 workers using 6202 MB)
@  1100s  (total 8 workers using 6206 MB)
@  1111s  (total 8 workers using 6291 MB)
@  1122s  (total 8 workers using 6445 MB)
@  1133s  (total 8 workers using 6567 MB)
@  1143s  (total 8 workers using 6768 MB)
@  1154s  (total 8 workers using 6865 MB)
@  1165s  (total 8 workers using 6651 MB)
@  1176s  (total 8 workers using 6336 MB)
@  1186s  (total 8 workers using 6335 MB)
@  1197s  (total 8 workers using 6345 MB)
@  1208s  (total 8 workers using 6356 MB)
@  1218s  (total 8 workers using 6362 MB)
@  1229s  (total 8 workers using 6364 MB)
@  1240s  (total 8 workers using 6455 MB)
@  1250s  (total 8 workers using 6541 MB)
@  1261s  (total 8 workers using 6555 MB)
@  1272s  (total 8 workers using 6676 MB)
@  1283s  (total 8 workers using 6810 MB)
@  1293s  (total 8 workers using 6852 MB)
@  1304s  (total 8 workers using 6939 MB)
@  1315s  (total 8 workers using 6967 MB)
@  1325s  (total 8 workers using 6765 MB)
@  1336s  (total 8 workers using 6884 MB)
@  1347s  (total 8 workers using 6904 MB)
@  1357s  (total 8 workers using 6900 MB)
@  1368s  (total 8 workers using 6771 MB)
@  1379s  (total 8 workers using 6772 MB)
@  1390s  (total 8 workers using 6765 MB)
@  1400s  (total 8 workers using 6683 MB)
@  1411s  (total 8 workers using 6839 MB)
@  1422s  (total 8 workers using 6803 MB)
@  1433s  (total 8 workers using 6785 MB)
@  1443s  (total 8 workers using 6712 MB)
@  1454s  (total 8 workers using 6847 MB)
@  1465s  (total 8 workers using 6814 MB)
@  1475s  (total 8 workers using 6804 MB)
@  1486s  (total 8 workers using 6896 MB)
@  1497s  (total 8 workers using 6982 MB)
@  1507s  (total 8 workers using 6954 MB)
@  1518s  (total 8 workers using 7181 MB)
@  1529s  (total 8 workers using 7320 MB)
@  1540s  (total 8 workers using 7236 MB)
@  1550s  (total 8 workers using 7448 MB)
@  1561s  (total 8 workers using 7563 MB)
@  1572s  (total 8 workers using 7640 MB)
@  1582s  (total 8 workers using 7661 MB)
@  1593s  (total 8 workers using 7676 MB)
@  1604s  (total 8 workers using 7729 MB)
@  1614s  (total 8 workers using 7643 MB)
@  1625s  (total 8 workers using 7663 MB)
@  1636s  (total 8 workers using 7580 MB)
@  1647s  (total 8 workers using 7289 MB)
@  1657s  (total 8 workers using 7716 MB)
@  1668s  (total 8 workers using 7670 MB)
@  1679s  (total 8 workers using 7583 MB)
@  1689s  (total 8 workers using 7318 MB)
@  1700s  (total 8 workers using 7207 MB)
@  1711s  (total 8 workers using 7194 MB)
@  1721s  (total 8 workers using 7240 MB)
@  1732s  (total 8 workers using 7326 MB)
@  1743s  (total 8 workers using 7316 MB)
@  1754s  (total 8 workers using 7431 MB)
@  1764s  (total 8 workers using 7764 MB)
@  1775s  (total 8 workers using 7269 MB)
@  1786s  (total 8 workers using 7287 MB)
@  1796s  (total 8 workers using 7293 MB)
@  1807s  (total 8 workers using 7311 MB)
@  1818s  (total 8 workers using 7244 MB)
@  1828s  (total 8 workers using 7307 MB)
@  1839s  (total 8 workers using 7384 MB)
@  1850s  (total 8 workers using 7411 MB)
@  1861s  (total 8 workers using 7412 MB)
@  1871s  (total 8 workers using 7470 MB)
@  1882s  (total 8 workers using 7613 MB)
@  1893s  (total 8 workers using 7398 MB)
@  1904s  (total 8 workers using 7694 MB)
@  1914s  (total 8 workers using 7654 MB)
@  1925s  (total 8 workers using 7627 MB)
@  1936s  (total 8 workers using 7660 MB)
@  1946s  (total 8 workers using 7718 MB)
@  1957s  (total 8 workers using 7781 MB)
@  1968s  (total 8 workers using 7794 MB)
@  1978s  (total 8 workers using 7800 MB)
@  1989s  (total 8 workers using 7940 MB)
@  2000s  (total 8 workers using 7920 MB)
@  2011s  (total 8 workers using 7959 MB)
@  2021s  (total 8 workers using 7974 MB)
@  2032s  (total 8 workers using 7981 MB)
@  2043s  (total 8 workers using 7988 MB)
@  2053s  (total 8 workers using 8049 MB)
@  2064s  (total 8 workers using 8302 MB)
@  2075s  (total 8 workers using 8631 MB)
@  2085s  (total 8 workers using 8439 MB)
@  2096s  (total 8 workers using 8380 MB)
@  2107s  (total 8 workers using 8206 MB)
@  2118s  (total 8 workers using 8254 MB)
@  2128s  (total 8 workers using 8405 MB)
@  2139s  (total 8 workers using 8607 MB)
@  2150s  (total 8 workers using 8991 MB)
@  2161s  (total 8 workers using 8843 MB)
@  2171s  (total 8 workers using 8636 MB)
@  2182s  (total 8 workers using 8586 MB)
@  2193s  (total 8 workers using 8559 MB)
@  2203s  (total 8 workers using 8562 MB)
@  2214s  (total 8 workers using 8849 MB)
@  2225s  (total 8 workers using 9091 MB)
@  2235s  (total 8 workers using 9013 MB)
@  2246s  (total 8 workers using 8711 MB)
@  2257s  (total 8 workers using 8673 MB)
@  2268s  (total 8 workers using 8707 MB)
@  2278s  (total 8 workers using 8952 MB)
@  2289s  (total 8 workers using 9246 MB)
@  2300s  (total 8 workers using 9000 MB)
@  2311s  (total 8 workers using 8732 MB)
@  2321s  (total 8 workers using 8908 MB)
@  2332s  (total 8 workers using 8798 MB)
@  2343s  (total 8 workers using 9135 MB)
@  2353s  (total 8 workers using 9305 MB)
@  2364s  (total 8 workers using 9093 MB)
@  2375s  (total 8 workers using 8857 MB)
@  2385s  (total 8 workers using 8859 MB)
@  2396s  (total 8 workers using 8933 MB)
@  2407s  (total 8 workers using 9516 MB)
@  2418s  (total 8 workers using 9331 MB)
@  2428s  (total 8 workers using 9025 MB)
@  2439s  (total 8 workers using 9251 MB)
@  2450s  (total 8 workers using 9299 MB)
@  2461s  (total 8 workers using 9779 MB)
@  2471s  (total 8 workers using 9559 MB)
@  2482s  (total 8 workers using 9351 MB)
@  2493s  (total 8 workers using 9350 MB)
@  2503s  (total 8 workers using 9334 MB)
@  2514s  (total 8 workers using 9658 MB)
@  2525s  (total 8 workers using 9833 MB)
@  2535s  (total 8 workers using 9604 MB)
@  2546s  (total 8 workers using 9329 MB)
@  2557s  (total 8 workers using 9485 MB)
@  2568s  (total 8 workers using 10019 MB)
@  2578s  (total 8 workers using 9992 MB)
@  2589s  (total 8 workers using 9474 MB)
@  2600s  (total 8 workers using 9521 MB)
@  2610s  (total 8 workers using 9218 MB)
@  2621s  (total 8 workers using 9982 MB)
@  2632s  (total 8 workers using 9820 MB)
@  2643s  (total 8 workers using 9451 MB)
@  2653s  (total 8 workers using 9507 MB)
@  2664s  (total 8 workers using 9437 MB)
@  2675s  (total 8 workers using 10033 MB)
@  2685s  (total 8 workers using 9814 MB)
@  2696s  (total 8 workers using 9543 MB)
@  2707s  (total 8 workers using 9567 MB)
@  2718s  (total 8 workers using 10207 MB)
@  2728s  (total 8 workers using 10005 MB)
@  2739s  (total 8 workers using 9570 MB)
@  2750s  (total 8 workers using 9584 MB)
@  2760s  (total 8 workers using 9852 MB)
@  2771s  (total 8 workers using 10151 MB)
@  2782s  (total 8 workers using 9775 MB)
@  2792s  (total 8 workers using 9629 MB)
@  2803s  (total 8 workers using 9671 MB)
@  2814s  (total 8 workers using 10323 MB)
@  2825s  (total 8 workers using 9919 MB)
@  2835s  (total 8 workers using 9774 MB)
@  2846s  (total 8 workers using 9549 MB)
@  2857s  (total 8 workers using 10407 MB)
@  2867s  (total 8 workers using 10040 MB)
@  2878s  (total 8 workers using 9782 MB)
@  2889s  (total 8 workers using 9784 MB)
@  2899s  (total 8 workers using 10369 MB)
@  2910s  (total 8 workers using 10211 MB)
@  2921s  (total 8 workers using 10017 MB)
@  2932s  (total 8 workers using 10039 MB)
@  2942s  (total 8 workers using 10765 MB)
@  2953s  (total 8 workers using 10428 MB)
@  2964s  (total 8 workers using 10174 MB)
@  2975s  (total 8 workers using 10198 MB)
@  2985s  (total 8 workers using 10485 MB)
@  2996s  (total 8 workers using 10562 MB)
@  3007s  (total 8 workers using 10157 MB)
@  3017s  (total 8 workers using 10119 MB)
@  3028s  (total 8 workers using 10161 MB)
@  3039s  (total 8 workers using 10183 MB)
@  3049s  (total 8 workers using 10593 MB)
@  3060s  (total 8 workers using 10129 MB)
@  3071s  (total 8 workers using 10155 MB)
@  3082s  (total 8 workers using 10211 MB)
@  3092s  (total 8 workers using 10216 MB)
@  3103s  (total 8 workers using 10202 MB)
@  3114s  (total 8 workers using 10307 MB)
@  3125s  (total 8 workers using 10928 MB)
@  3135s  (total 8 workers using 10303 MB)
@  3146s  (total 8 workers using 10342 MB)
@  3157s  (total 8 workers using 10322 MB)
@  3167s  (total 8 workers using 10573 MB)
@  3178s  (total 8 workers using 10752 MB)
@  3189s  (total 8 workers using 10414 MB)
@  3199s  (total 8 workers using 10519 MB)
@  3210s  (total 8 workers using 11133 MB)
@  3221s  (total 8 workers using 10716 MB)
@  3232s  (total 8 workers using 10522 MB)
@  3242s  (total 8 workers using 10487 MB)
@  3253s  (total 8 workers using 10633 MB)
@  3264s  (total 8 workers using 10678 MB)
@  3275s  (total 8 workers using 11376 MB)
@  3285s  (total 8 workers using 11016 MB)
@  3296s  (total 8 workers using 10859 MB)
@  3307s  (total 8 workers using 10741 MB)
@  3317s  (total 8 workers using 11180 MB)
@  3328s  (total 8 workers using 10755 MB)
@  3339s  (total 8 workers using 10769 MB)
@  3349s  (total 8 workers using 11318 MB)
@  3360s  (total 8 workers using 11185 MB)
@  3371s  (total 8 workers using 10987 MB)
@  3382s  (total 8 workers using 11244 MB)
@  3392s  (total 8 workers using 10896 MB)
@  3403s  (total 8 workers using 10932 MB)
@  3414s  (total 8 workers using 10864 MB)
@  3424s  (total 8 workers using 10900 MB)
@  3435s  (total 8 workers using 10905 MB)
@  3446s  (total 8 workers using 11010 MB)
@  3457s  (total 8 workers using 11017 MB)
@  3467s  (total 8 workers using 11006 MB)
@  3478s  (total 8 workers using 11015 MB)
@  3489s  (total 8 workers using 11006 MB)
@  3499s  (total 8 workers using 11232 MB)
@  3510s  (total 8 workers using 11402 MB)
@  3521s  (total 8 workers using 11122 MB)
@  3532s  (total 8 workers using 11122 MB)
@  3542s  (total 8 workers using 11910 MB)
@  3553s  (total 8 workers using 11366 MB)
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3563s  (total 3 workers using 5849 MB)
@  3574s  (stopping all workers)
@  3574s  (total 3 workers using 0 MB)
@  3574s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3574s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3574s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3573.88 seconds)[m
unknown
c done
