c host: c3n23
c start: Fri Oct 18 21:58:26 CEST 2019
c arrayjobid: 17567257
c jobid: 17567658
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck2_r0-p053.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567658.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 26702)
@     0s  (started worker 1 with pid 26703)
@     0s  (started worker 2 with pid 26704)
@     0s  (started worker 3 with pid 26705)
@     0s  (started worker 4 with pid 26706)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 26822)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 448 MB)
@     2s  (started worker 6 with pid 26878)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 685 MB)
@     3s  (started worker 7 with pid 26940)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 908 MB)
@     4s  (started worker 8 with pid 27008)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1132 MB)
@     5s  (started worker 9 with pid 27105)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1267 MB)
@     6s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@     6s  (started worker 10 with pid 27179)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 1488 MB)
@    15s  (total 10 workers using 2968 MB)
@    26s  (total 10 workers using 4339 MB)
@    38s  (total 10 workers using 5843 MB)
@    49s  (total 10 workers using 6348 MB)
@    60s  (total 10 workers using 7028 MB)
@    72s  (total 10 workers using 8110 MB)
@    82s  (total 10 workers using 9338 MB)
@    94s  (total 10 workers using 9730 MB)
@   104s  (total 10 workers using 10619 MB)
@   116s  (total 10 workers using 11497 MB)
@   126s  (total 10 workers using 11043 MB)
@   137s  (total 10 workers using 12521 MB)
@   148s  (total 10 workers using 13184 MB)
@   159s  (total 10 workers using 13587 MB)
@   170s  (total 10 workers using 14155 MB)
@   181s  (total 10 workers using 13888 MB)
@   192s  (total 10 workers using 14579 MB)
@   203s  (total 10 workers using 15218 MB)
@   214s  (total 10 workers using 16633 MB)
@   225s  (total 10 workers using 16474 MB)
@   236s  (total 10 workers using 17039 MB)
@   247s  (total 10 workers using 17510 MB)
@   258s  (total 10 workers using 17275 MB)
@   269s  (total 10 workers using 17264 MB)
@   280s  (total 10 workers using 18728 MB)
@   291s  (total 10 workers using 19681 MB)
@   302s  (total 10 workers using 20203 MB)
@   313s  (total 10 workers using 20649 MB)
@   324s  (total 10 workers using 20726 MB)
@   335s  (total 10 workers using 20469 MB)
@   346s  (total 10 workers using 20404 MB)
@   357s  (total 10 workers using 22306 MB)
@   368s  (total 10 workers using 21224 MB)
@   379s  (total 10 workers using 22613 MB)
@   390s  (total 10 workers using 23419 MB)
@   401s  (total 10 workers using 23645 MB)
@   412s  (total 10 workers using 24017 MB)
@   423s  (total 10 workers using 24268 MB)
@   434s  (total 10 workers using 24367 MB)
@   445s  (total 10 workers using 24494 MB)
@   453s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   456s  (total 9 workers using 23019 MB)
@   467s  (total 9 workers using 22530 MB)
@   478s  (total 9 workers using 24826 MB)
@   489s  (total 9 workers using 24665 MB)
@   499s  (total 9 workers using 23503 MB)
@   510s  (total 9 workers using 25461 MB)
@   521s  (total 9 workers using 26245 MB)
@   532s  (total 9 workers using 25287 MB)
@   543s  (total 9 workers using 26276 MB)
@   554s  (total 9 workers using 27025 MB)
@   565s  (total 9 workers using 27497 MB)
@   576s  (total 9 workers using 25576 MB)
@   587s  (total 9 workers using 25912 MB)
@   598s  (total 9 workers using 26375 MB)
@   608s  (total 9 workers using 26528 MB)
@   619s  (total 9 workers using 28840 MB)
@   630s  (total 9 workers using 27995 MB)
@   641s  (total 9 workers using 27829 MB)
@   652s  (total 9 workers using 27460 MB)
@   663s  (total 9 workers using 29758 MB)
@   674s  (total 9 workers using 29308 MB)
@   685s  (total 9 workers using 28466 MB)
@   695s  (total 9 workers using 30702 MB)
@   706s  (total 9 workers using 29564 MB)
@   717s  (total 9 workers using 31518 MB)
@   728s  (total 9 workers using 30392 MB)
@   739s  (total 9 workers using 32047 MB)
@   750s  (total 9 workers using 31182 MB)
@   761s  (total 9 workers using 32355 MB)
@   772s  (total 9 workers using 30603 MB)
@   782s  (total 9 workers using 33462 MB)
@   793s  (total 9 workers using 31077 MB)
@   804s  (total 9 workers using 30811 MB)
@   815s  (total 9 workers using 32422 MB)
@   826s  (total 9 workers using 33708 MB)
@   837s  (total 9 workers using 34266 MB)
@   848s  (total 9 workers using 34882 MB)
@   859s  (total 9 workers using 32410 MB)
@   870s  (total 9 workers using 33125 MB)
@   881s  (total 9 workers using 34165 MB)
@   891s  (total 9 workers using 33747 MB)
@   902s  (total 9 workers using 34185 MB)
@   913s  (total 9 workers using 33944 MB)
@   924s  (total 9 workers using 34490 MB)
@   935s  (total 9 workers using 34105 MB)
@   946s  (total 9 workers using 38200 MB)
@   957s  (total 9 workers using 38448 MB)
@   968s  (total 9 workers using 37987 MB)
@   978s  (total 9 workers using 37234 MB)
@   989s  (total 9 workers using 39713 MB)
@  1000s  (total 9 workers using 38955 MB)
@  1011s  (total 9 workers using 39308 MB)
@  1022s  (total 9 workers using 38040 MB)
@  1033s  (total 9 workers using 37095 MB)
@  1044s  (total 9 workers using 40471 MB)
@  1055s  (total 9 workers using 39318 MB)
@  1066s  (total 9 workers using 38758 MB)
@  1077s  (total 9 workers using 37883 MB)
@  1088s  (total 9 workers using 40163 MB)
@  1099s  (total 9 workers using 37880 MB)
@  1109s  (total 9 workers using 41151 MB)
@  1120s  (total 9 workers using 39553 MB)
@  1131s  (total 9 workers using 40727 MB)
@  1142s  (total 9 workers using 40835 MB)
@  1153s  (total 9 workers using 38743 MB)
@  1164s  (total 9 workers using 42088 MB)
@  1175s  (total 9 workers using 39329 MB)
@  1186s  (total 9 workers using 41996 MB)
@  1196s  (total 9 workers using 41643 MB)
@  1207s  (total 9 workers using 42511 MB)
@  1218s  (total 9 workers using 39842 MB)
@  1229s  (total 9 workers using 42201 MB)
@  1240s  (total 9 workers using 43111 MB)
@  1251s  (total 9 workers using 42114 MB)
@  1262s  (total 9 workers using 43685 MB)
@  1273s  (total 9 workers using 41386 MB)
@  1284s  (total 9 workers using 42704 MB)
@  1295s  (total 9 workers using 44783 MB)
@  1305s  (total 9 workers using 41859 MB)
@  1317s  (total 9 workers using 43701 MB)
@  1327s  (total 9 workers using 45997 MB)
@  1339s  (total 9 workers using 42276 MB)
@  1349s  (total 9 workers using 44553 MB)
@  1360s  (total 9 workers using 45213 MB)
@  1371s  (total 9 workers using 46334 MB)
@  1382s  (total 9 workers using 42822 MB)
@  1393s  (total 9 workers using 43971 MB)
@  1404s  (total 9 workers using 46110 MB)
@  1415s  (total 9 workers using 46723 MB)
@  1426s  (total 9 workers using 47725 MB)
@  1436s  (total 9 workers using 47213 MB)
@  1447s  (total 9 workers using 45394 MB)
@  1458s  (total 9 workers using 44371 MB)
@  1469s  (total 9 workers using 45603 MB)
@  1480s  (total 9 workers using 45270 MB)
@  1491s  (total 9 workers using 46648 MB)
@  1502s  (total 9 workers using 46060 MB)
@  1513s  (total 9 workers using 46540 MB)
@  1524s  (total 9 workers using 47526 MB)
@  1535s  (total 9 workers using 47311 MB)
@  1545s  (total 9 workers using 47636 MB)
@  1556s  (total 9 workers using 48686 MB)
@  1567s  (total 9 workers using 48050 MB)
@  1578s  (total 9 workers using 48106 MB)
@  1589s  (total 9 workers using 48211 MB)
@  1600s  (total 9 workers using 49012 MB)
@  1610s  (total 9 workers using 48551 MB)
@  1621s  (total 9 workers using 48637 MB)
@  1632s  (total 9 workers using 48765 MB)
@  1643s  (total 9 workers using 48797 MB)
@  1654s  (total 9 workers using 49667 MB)
@  1665s  (total 9 workers using 49024 MB)
@  1676s  (total 9 workers using 48840 MB)
@  1687s  (total 9 workers using 46841 MB)
@  1697s  (total 9 workers using 46755 MB)
@  1708s  (total 9 workers using 49945 MB)
@  1719s  (total 9 workers using 50202 MB)
@  1730s  (total 9 workers using 48195 MB)
@  1741s  (total 9 workers using 46971 MB)
@  1752s  (total 9 workers using 47515 MB)
@  1762s  (total 9 workers using 47058 MB)
@  1774s  (total 9 workers using 51323 MB)
@  1784s  (total 9 workers using 50819 MB)
@  1795s  (total 9 workers using 50766 MB)
@  1806s  (total 9 workers using 49645 MB)
@  1817s  (total 9 workers using 49753 MB)
@  1828s  (total 9 workers using 48501 MB)
@  1839s  (total 9 workers using 48058 MB)
@  1850s  (total 9 workers using 51863 MB)
@  1861s  (total 9 workers using 51286 MB)
@  1871s  (total 9 workers using 49717 MB)
@  1882s  (total 9 workers using 49702 MB)
@  1893s  (total 9 workers using 52229 MB)
@  1904s  (total 9 workers using 52590 MB)
@  1915s  (total 9 workers using 51753 MB)
@  1926s  (total 9 workers using 50026 MB)
@  1936s  (total 9 workers using 50084 MB)
@  1948s  (total 9 workers using 53280 MB)
@  1958s  (total 9 workers using 52564 MB)
@  1969s  (total 9 workers using 50435 MB)
@  1980s  (total 9 workers using 53990 MB)
@  1991s  (total 9 workers using 51795 MB)
@  2002s  (total 9 workers using 50794 MB)
@  2013s  (total 9 workers using 54691 MB)
@  2024s  (total 9 workers using 53386 MB)
@  2035s  (total 9 workers using 51506 MB)
@  2046s  (total 9 workers using 55128 MB)
@  2056s  (total 9 workers using 53037 MB)
@  2067s  (total 9 workers using 50567 MB)
@  2078s  (total 9 workers using 55050 MB)
@  2089s  (total 9 workers using 52555 MB)
@  2100s  (total 9 workers using 51261 MB)
@  2111s  (total 9 workers using 54582 MB)
@  2122s  (total 9 workers using 52308 MB)
@  2132s  (total 9 workers using 55318 MB)
@  2143s  (total 9 workers using 54088 MB)
@  2154s  (total 9 workers using 51290 MB)
@  2165s  (total 9 workers using 55372 MB)
@  2176s  (total 9 workers using 52290 MB)
@  2187s  (total 9 workers using 55928 MB)
@  2197s  (total 9 workers using 53987 MB)
@  2208s  (total 9 workers using 55970 MB)
@  2219s  (total 9 workers using 54687 MB)
@  2230s  (total 9 workers using 52223 MB)
@  2241s  (total 9 workers using 55808 MB)
@  2252s  (total 9 workers using 52570 MB)
@  2263s  (total 9 workers using 56002 MB)
@  2274s  (total 9 workers using 56682 MB)
@  2284s  (total 9 workers using 54850 MB)
@  2295s  (total 9 workers using 56466 MB)
@  2306s  (total 9 workers using 53371 MB)
@  2317s  (total 9 workers using 56513 MB)
@  2328s  (total 9 workers using 53080 MB)
@  2339s  (total 9 workers using 52666 MB)
@  2349s  (total 9 workers using 53640 MB)
@  2360s  (total 9 workers using 52597 MB)
@  2371s  (total 9 workers using 53595 MB)
@  2378s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  2382s  (total 8 workers using 26097 MB)
@  2393s  (total 8 workers using 26483 MB)
@  2403s  (total 8 workers using 26261 MB)
@  2414s  (total 8 workers using 27146 MB)
@  2425s  (total 8 workers using 26979 MB)
@  2435s  (total 8 workers using 26725 MB)
@  2446s  (total 8 workers using 26440 MB)
@  2457s  (total 8 workers using 27401 MB)
@  2468s  (total 8 workers using 26844 MB)
@  2478s  (total 8 workers using 27859 MB)
@  2489s  (total 8 workers using 27046 MB)
@  2500s  (total 8 workers using 27451 MB)
@  2511s  (total 8 workers using 26964 MB)
@  2521s  (total 8 workers using 27373 MB)
@  2532s  (total 8 workers using 27631 MB)
@  2543s  (total 8 workers using 27644 MB)
@  2553s  (total 8 workers using 27428 MB)
@  2564s  (total 8 workers using 28196 MB)
@  2575s  (total 8 workers using 27337 MB)
@  2586s  (total 8 workers using 28287 MB)
@  2596s  (total 8 workers using 27613 MB)
@  2607s  (total 8 workers using 28222 MB)
@  2618s  (total 8 workers using 27702 MB)
@  2628s  (total 8 workers using 27804 MB)
@  2639s  (total 8 workers using 28647 MB)
@  2650s  (total 8 workers using 28683 MB)
@  2661s  (total 8 workers using 28559 MB)
@  2671s  (total 8 workers using 29682 MB)
@  2682s  (total 8 workers using 28646 MB)
@  2693s  (total 8 workers using 29291 MB)
@  2704s  (total 8 workers using 29985 MB)
@  2714s  (total 8 workers using 29161 MB)
@  2725s  (total 8 workers using 30066 MB)
@  2736s  (total 8 workers using 29347 MB)
@  2746s  (total 8 workers using 29590 MB)
@  2757s  (total 8 workers using 29619 MB)
@  2768s  (total 8 workers using 30812 MB)
@  2779s  (total 8 workers using 29720 MB)
@  2789s  (total 8 workers using 29755 MB)
@  2800s  (total 8 workers using 29809 MB)
@  2811s  (total 8 workers using 29063 MB)
@  2821s  (total 8 workers using 29427 MB)
@  2832s  (total 8 workers using 29577 MB)
@  2843s  (total 8 workers using 30146 MB)
@  2854s  (total 8 workers using 29569 MB)
@  2864s  (total 8 workers using 29552 MB)
@  2875s  (total 8 workers using 30093 MB)
@  2886s  (total 8 workers using 29618 MB)
@  2897s  (total 8 workers using 30334 MB)
@  2907s  (total 8 workers using 29752 MB)
@  2918s  (total 8 workers using 30538 MB)
@  2929s  (total 8 workers using 29662 MB)
@  2940s  (total 8 workers using 30911 MB)
@  2950s  (total 8 workers using 29855 MB)
@  2961s  (total 8 workers using 29745 MB)
@  2972s  (total 8 workers using 30195 MB)
@  2982s  (total 8 workers using 30527 MB)
@  2993s  (total 8 workers using 30317 MB)
@  3004s  (total 8 workers using 30066 MB)
@  3015s  (total 8 workers using 30691 MB)
@  3025s  (total 8 workers using 30084 MB)
@  3036s  (total 8 workers using 30813 MB)
@  3047s  (total 8 workers using 30144 MB)
@  3057s  (total 8 workers using 31036 MB)
@  3068s  (total 8 workers using 30111 MB)
@  3079s  (total 8 workers using 31225 MB)
@  3090s  (total 8 workers using 30106 MB)
@  3100s  (total 8 workers using 30356 MB)
@  3111s  (total 8 workers using 31180 MB)
@  3122s  (total 8 workers using 30370 MB)
@  3133s  (total 8 workers using 31421 MB)
@  3143s  (total 8 workers using 30302 MB)
@  3154s  (total 8 workers using 31559 MB)
@  3165s  (total 8 workers using 30272 MB)
@  3176s  (total 8 workers using 31070 MB)
@  3186s  (total 8 workers using 30507 MB)
@  3197s  (total 8 workers using 31255 MB)
@  3208s  (total 8 workers using 31028 MB)
@  3219s  (total 8 workers using 31501 MB)
@  3229s  (total 8 workers using 30815 MB)
@  3240s  (total 8 workers using 31721 MB)
@  3251s  (total 8 workers using 30728 MB)
@  3261s  (total 8 workers using 30957 MB)
@  3272s  (total 8 workers using 31340 MB)
@  3283s  (total 8 workers using 31069 MB)
@  3294s  (total 8 workers using 31738 MB)
@  3304s  (total 8 workers using 31424 MB)
@  3315s  (total 8 workers using 32587 MB)
@  3326s  (total 8 workers using 31504 MB)
@  3336s  (total 8 workers using 31713 MB)
@  3347s  (total 8 workers using 32230 MB)
@  3358s  (total 8 workers using 31634 MB)
@  3369s  (total 8 workers using 32393 MB)
@  3379s  (total 8 workers using 31748 MB)
@  3390s  (total 8 workers using 32607 MB)
@  3401s  (total 8 workers using 31629 MB)
@  3412s  (total 8 workers using 32520 MB)
@  3422s  (total 8 workers using 31912 MB)
@  3433s  (total 8 workers using 31999 MB)
@  3444s  (total 8 workers using 33200 MB)
@  3455s  (total 8 workers using 32028 MB)
@  3465s  (total 8 workers using 32378 MB)
@  3476s  (total 8 workers using 31998 MB)
@  3487s  (total 8 workers using 32660 MB)
@  3498s  (total 8 workers using 32001 MB)
@  3508s  (total 8 workers using 32729 MB)
@  3519s  (total 8 workers using 32358 MB)
@  3530s  (total 8 workers using 32269 MB)
@  3540s  (total 8 workers using 33363 MB)
@  3551s  (total 8 workers using 32516 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3559s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3562s  (total 1 workers using 3203 MB)
@  3572s  (total 1 workers using 3203 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3573.87 seconds)[m
unknown
c done
