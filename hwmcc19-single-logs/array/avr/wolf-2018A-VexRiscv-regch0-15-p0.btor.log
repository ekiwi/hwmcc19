c host: c3n31
c start: Fri Oct 18 20:59:00 CEST 2019
c arrayjobid: 17567257
c jobid: 17567578
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2018A/VexRiscv-regch0-15-p0.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567578.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 32536)
@     0s  (started worker 1 with pid 32537)
@     0s  (started worker 2 with pid 32538)
@     0s  (started worker 3 with pid 32539)
@     0s  (started worker 4 with pid 32540)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 32657)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 238 MB)
@     2s  (started worker 6 with pid 32713)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 387 MB)
@     3s  (started worker 7 with pid 308)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 464 MB)
@     4s  (started worker 8 with pid 380)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 552 MB)
@     4s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@     5s  (started worker 9 with pid 472)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 645 MB)
@     6s  (started worker 10 with pid 549)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 820 MB)
@    15s  (total 10 workers using 2392 MB)
@    26s  (total 10 workers using 3597 MB)
@    27s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@    38s  (total 9 workers using 2367 MB)
@    49s  (total 9 workers using 2706 MB)
@    60s  (total 9 workers using 3011 MB)
@    71s  (total 9 workers using 4002 MB)
@    82s  (total 9 workers using 4786 MB)
@    93s  (total 9 workers using 5390 MB)
@   103s  (total 9 workers using 5897 MB)
@   114s  (total 9 workers using 6011 MB)
@   125s  (total 9 workers using 6728 MB)
@   136s  (total 9 workers using 7082 MB)
@   147s  (total 9 workers using 7279 MB)
@   158s  (total 9 workers using 7972 MB)
@   168s  (total 9 workers using 8367 MB)
@   179s  (total 9 workers using 8559 MB)
@   190s  (total 9 workers using 9092 MB)
@   201s  (total 9 workers using 9601 MB)
@   212s  (total 9 workers using 9592 MB)
@   223s  (total 9 workers using 10009 MB)
@   233s  (total 9 workers using 10106 MB)
@   244s  (total 9 workers using 9981 MB)
@   255s  (total 9 workers using 10266 MB)
@   266s  (total 9 workers using 11573 MB)
@   277s  (total 9 workers using 11280 MB)
@   288s  (total 9 workers using 12137 MB)
@   299s  (total 9 workers using 12202 MB)
@   310s  (total 9 workers using 12109 MB)
@   320s  (total 9 workers using 12609 MB)
@   331s  (total 9 workers using 12196 MB)
@   342s  (total 9 workers using 13098 MB)
@   353s  (total 9 workers using 13470 MB)
@   364s  (total 9 workers using 12876 MB)
@   375s  (total 9 workers using 13503 MB)
@   386s  (total 9 workers using 13556 MB)
@   397s  (total 9 workers using 13536 MB)
@   407s  (total 9 workers using 14380 MB)
@   418s  (total 9 workers using 13895 MB)
@   429s  (total 9 workers using 14429 MB)
@   440s  (total 9 workers using 14800 MB)
@   451s  (total 9 workers using 15643 MB)
@   462s  (total 9 workers using 15914 MB)
@   472s  (total 9 workers using 15702 MB)
@   483s  (total 9 workers using 15322 MB)
@   494s  (total 9 workers using 16129 MB)
@   505s  (total 9 workers using 15549 MB)
@   516s  (total 9 workers using 15684 MB)
@   527s  (total 9 workers using 16231 MB)
@   537s  (total 9 workers using 16264 MB)
@   548s  (total 9 workers using 16520 MB)
@   559s  (total 9 workers using 17319 MB)
@   570s  (total 9 workers using 17329 MB)
@   581s  (total 9 workers using 16576 MB)
@   592s  (total 9 workers using 17582 MB)
@   603s  (total 9 workers using 16738 MB)
@   614s  (total 9 workers using 17972 MB)
@   624s  (total 9 workers using 16985 MB)
@   635s  (total 9 workers using 18033 MB)
@   646s  (total 9 workers using 18069 MB)
@   657s  (total 9 workers using 18398 MB)
@   668s  (total 9 workers using 18460 MB)
@   679s  (total 9 workers using 18411 MB)
@   689s  (total 9 workers using 17845 MB)
@   700s  (total 9 workers using 18102 MB)
@   711s  (total 9 workers using 19359 MB)
@   722s  (total 9 workers using 18684 MB)
@   733s  (total 9 workers using 19590 MB)
@   744s  (total 9 workers using 18987 MB)
@   755s  (total 9 workers using 19977 MB)
@   766s  (total 9 workers using 18673 MB)
@   776s  (total 9 workers using 19095 MB)
@   787s  (total 9 workers using 19856 MB)
@   798s  (total 9 workers using 18315 MB)
@   809s  (total 9 workers using 20949 MB)
@   820s  (total 9 workers using 21302 MB)
@   831s  (total 9 workers using 21644 MB)
@   842s  (total 9 workers using 21685 MB)
@   853s  (total 9 workers using 20242 MB)
@   864s  (total 9 workers using 21802 MB)
@   875s  (total 9 workers using 21965 MB)
@   885s  (total 9 workers using 21100 MB)
@   896s  (total 9 workers using 20517 MB)
@   904s  (worker 10 finished with result unknown) python3 avr.py --bmc
@   907s  (total 8 workers using 10841 MB)
@   918s  (total 8 workers using 10871 MB)
@   928s  (total 8 workers using 10998 MB)
@   939s  (total 8 workers using 11090 MB)
@   950s  (total 8 workers using 11213 MB)
@   961s  (total 8 workers using 11449 MB)
@   971s  (total 8 workers using 11284 MB)
@   982s  (total 8 workers using 11444 MB)
@   993s  (total 8 workers using 11575 MB)
@  1004s  (total 8 workers using 11611 MB)
@  1014s  (total 8 workers using 11566 MB)
@  1025s  (total 8 workers using 11564 MB)
@  1036s  (total 8 workers using 11638 MB)
@  1047s  (total 8 workers using 11658 MB)
@  1057s  (total 8 workers using 12046 MB)
@  1068s  (total 8 workers using 12003 MB)
@  1079s  (total 8 workers using 12221 MB)
@  1089s  (total 8 workers using 11999 MB)
@  1100s  (total 8 workers using 11846 MB)
@  1111s  (total 8 workers using 12236 MB)
@  1122s  (total 8 workers using 12418 MB)
@  1132s  (total 8 workers using 12453 MB)
@  1143s  (total 8 workers using 12361 MB)
@  1154s  (total 8 workers using 12394 MB)
@  1165s  (total 8 workers using 12550 MB)
@  1175s  (total 8 workers using 12377 MB)
@  1186s  (total 8 workers using 12577 MB)
@  1197s  (total 8 workers using 12596 MB)
@  1207s  (total 8 workers using 12775 MB)
@  1218s  (total 8 workers using 13002 MB)
@  1229s  (total 8 workers using 12932 MB)
@  1240s  (total 8 workers using 12918 MB)
@  1250s  (total 8 workers using 13141 MB)
@  1261s  (total 8 workers using 12927 MB)
@  1272s  (total 8 workers using 13077 MB)
@  1277s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  1283s  (total 7 workers using 11368 MB)
@  1293s  (total 7 workers using 11193 MB)
@  1304s  (total 7 workers using 11210 MB)
@  1315s  (total 7 workers using 11437 MB)
@  1325s  (total 7 workers using 11042 MB)
@  1336s  (total 7 workers using 11357 MB)
@  1347s  (total 7 workers using 11629 MB)
@  1357s  (total 7 workers using 11449 MB)
@  1368s  (total 7 workers using 11534 MB)
@  1378s  (total 7 workers using 11652 MB)
@  1389s  (total 7 workers using 11306 MB)
@  1400s  (total 7 workers using 11428 MB)
@  1410s  (total 7 workers using 11700 MB)
@  1421s  (total 7 workers using 11767 MB)
@  1432s  (total 7 workers using 11841 MB)
@  1436s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  1442s  (total 6 workers using 10655 MB)
@  1453s  (total 6 workers using 10486 MB)
@  1463s  (total 6 workers using 10706 MB)
@  1474s  (total 6 workers using 10782 MB)
@  1484s  (total 6 workers using 10567 MB)
@  1495s  (total 6 workers using 10752 MB)
@  1505s  (total 6 workers using 10965 MB)
@  1516s  (total 6 workers using 10914 MB)
@  1527s  (total 6 workers using 11071 MB)
@  1537s  (total 6 workers using 10960 MB)
@  1548s  (total 6 workers using 10948 MB)
@  1558s  (total 6 workers using 10985 MB)
@  1569s  (total 6 workers using 11214 MB)
@  1579s  (total 6 workers using 11340 MB)
@  1590s  (total 6 workers using 11428 MB)
@  1600s  (total 6 workers using 11224 MB)
@  1611s  (total 6 workers using 11308 MB)
@  1622s  (total 6 workers using 11420 MB)
@  1631s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  1632s  (total 5 workers using 10085 MB)
@  1643s  (total 5 workers using 9999 MB)
@  1653s  (total 5 workers using 10087 MB)
@  1663s  (total 5 workers using 10184 MB)
@  1674s  (total 5 workers using 10136 MB)
@  1684s  (total 5 workers using 10353 MB)
@  1695s  (total 5 workers using 10299 MB)
@  1705s  (total 5 workers using 10360 MB)
@  1716s  (total 5 workers using 10443 MB)
@  1726s  (total 5 workers using 10527 MB)
@  1736s  (total 5 workers using 10370 MB)
@  1747s  (total 5 workers using 10357 MB)
@  1757s  (total 5 workers using 10266 MB)
@  1768s  (total 5 workers using 10546 MB)
@  1778s  (total 5 workers using 10750 MB)
@  1789s  (total 5 workers using 10603 MB)
@  1799s  (total 5 workers using 10801 MB)
@  1810s  (total 5 workers using 10574 MB)
@  1820s  (total 5 workers using 10462 MB)
@  1831s  (total 5 workers using 10773 MB)
@  1841s  (total 5 workers using 10535 MB)
@  1851s  (total 5 workers using 10578 MB)
@  1862s  (total 5 workers using 10663 MB)
@  1872s  (total 5 workers using 10799 MB)
@  1883s  (total 5 workers using 10826 MB)
@  1893s  (total 5 workers using 10864 MB)
@  1904s  (total 5 workers using 10895 MB)
@  1914s  (total 5 workers using 10942 MB)
@  1924s  (total 5 workers using 10956 MB)
@  1935s  (total 5 workers using 10988 MB)
@  1945s  (total 5 workers using 11004 MB)
@  1956s  (total 5 workers using 10770 MB)
@  1966s  (total 5 workers using 10964 MB)
@  1977s  (total 5 workers using 11016 MB)
@  1987s  (total 5 workers using 10991 MB)
@  1998s  (total 5 workers using 11053 MB)
@  2008s  (total 5 workers using 11097 MB)
@  2019s  (total 5 workers using 11162 MB)
@  2029s  (total 5 workers using 11146 MB)
@  2039s  (total 5 workers using 11199 MB)
@  2050s  (total 5 workers using 11225 MB)
@  2060s  (total 5 workers using 11250 MB)
@  2071s  (total 5 workers using 11320 MB)
@  2081s  (total 5 workers using 11432 MB)
@  2092s  (total 5 workers using 11456 MB)
@  2102s  (total 5 workers using 11146 MB)
@  2112s  (total 5 workers using 11154 MB)
@  2123s  (total 5 workers using 11219 MB)
@  2133s  (total 5 workers using 11199 MB)
@  2144s  (total 5 workers using 11262 MB)
@  2154s  (total 5 workers using 11400 MB)
@  2165s  (total 5 workers using 11529 MB)
@  2175s  (total 5 workers using 11532 MB)
@  2186s  (total 5 workers using 11578 MB)
@  2196s  (total 5 workers using 11488 MB)
@  2207s  (total 5 workers using 11397 MB)
@  2217s  (total 5 workers using 11234 MB)
@  2220s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  2227s  (total 4 workers using 6573 MB)
@  2238s  (total 4 workers using 6674 MB)
@  2248s  (total 4 workers using 6685 MB)
@  2258s  (total 4 workers using 6691 MB)
@  2269s  (total 4 workers using 6681 MB)
@  2279s  (total 4 workers using 6698 MB)
@  2290s  (total 4 workers using 6673 MB)
@  2300s  (total 4 workers using 6673 MB)
@  2310s  (total 4 workers using 6702 MB)
@  2320s  (total 4 workers using 6691 MB)
@  2331s  (total 4 workers using 6683 MB)
@  2341s  (total 4 workers using 6711 MB)
@  2352s  (total 4 workers using 6690 MB)
@  2362s  (total 4 workers using 6712 MB)
@  2372s  (total 4 workers using 6725 MB)
@  2383s  (total 4 workers using 6726 MB)
@  2393s  (total 4 workers using 6713 MB)
@  2403s  (total 4 workers using 6730 MB)
@  2414s  (total 4 workers using 6706 MB)
@  2424s  (total 4 workers using 6709 MB)
@  2434s  (total 4 workers using 6744 MB)
@  2445s  (total 4 workers using 6719 MB)
@  2455s  (total 4 workers using 6720 MB)
@  2465s  (total 4 workers using 6776 MB)
@  2476s  (total 4 workers using 6723 MB)
@  2486s  (total 4 workers using 6752 MB)
@  2497s  (total 4 workers using 6771 MB)
@  2507s  (total 4 workers using 6756 MB)
@  2517s  (total 4 workers using 6758 MB)
@  2528s  (total 4 workers using 6793 MB)
@  2538s  (total 4 workers using 6784 MB)
@  2548s  (total 4 workers using 6801 MB)
@  2559s  (total 4 workers using 6810 MB)
@  2569s  (total 4 workers using 6841 MB)
@  2579s  (total 4 workers using 6843 MB)
@  2590s  (total 4 workers using 6839 MB)
@  2600s  (total 4 workers using 6784 MB)
@  2610s  (total 4 workers using 6829 MB)
@  2621s  (total 4 workers using 6847 MB)
@  2631s  (total 4 workers using 6847 MB)
@  2642s  (total 4 workers using 6786 MB)
@  2652s  (total 4 workers using 6849 MB)
@  2662s  (total 4 workers using 6851 MB)
@  2673s  (total 4 workers using 6816 MB)
@  2683s  (total 4 workers using 6856 MB)
@  2693s  (total 4 workers using 6825 MB)
@  2704s  (total 4 workers using 6984 MB)
@  2714s  (total 4 workers using 6825 MB)
@  2724s  (total 4 workers using 7091 MB)
@  2735s  (total 4 workers using 7094 MB)
@  2745s  (total 4 workers using 6890 MB)
@  2755s  (total 4 workers using 6971 MB)
@  2766s  (total 4 workers using 6968 MB)
@  2776s  (total 4 workers using 6968 MB)
@  2786s  (total 4 workers using 7004 MB)
@  2797s  (total 4 workers using 7004 MB)
@  2807s  (total 4 workers using 6901 MB)
@  2818s  (total 4 workers using 6902 MB)
@  2828s  (total 4 workers using 7138 MB)
@  2838s  (total 4 workers using 7121 MB)
@  2849s  (total 4 workers using 7139 MB)
@  2859s  (total 4 workers using 7140 MB)
@  2869s  (total 4 workers using 7177 MB)
@  2880s  (total 4 workers using 7149 MB)
@  2890s  (total 4 workers using 7186 MB)
@  2900s  (total 4 workers using 7001 MB)
@  2911s  (total 4 workers using 6967 MB)
@  2921s  (total 4 workers using 7098 MB)
@  2931s  (total 4 workers using 7024 MB)
@  2942s  (total 4 workers using 7001 MB)
@  2952s  (total 4 workers using 7039 MB)
@  2962s  (total 4 workers using 7094 MB)
@  2973s  (total 4 workers using 7060 MB)
@  2983s  (total 4 workers using 7136 MB)
@  2994s  (total 4 workers using 7149 MB)
@  3004s  (total 4 workers using 7114 MB)
@  3014s  (total 4 workers using 7117 MB)
@  3025s  (total 4 workers using 7094 MB)
@  3035s  (total 4 workers using 7118 MB)
@  3045s  (total 4 workers using 7118 MB)
@  3056s  (total 4 workers using 7155 MB)
@  3066s  (total 4 workers using 7145 MB)
@  3076s  (total 4 workers using 6893 MB)
@  3087s  (total 4 workers using 7410 MB)
@  3097s  (total 4 workers using 7254 MB)
@  3107s  (total 4 workers using 7287 MB)
@  3118s  (total 4 workers using 7254 MB)
@  3128s  (total 4 workers using 7255 MB)
@  3139s  (total 4 workers using 7181 MB)
@  3149s  (total 4 workers using 7219 MB)
@  3159s  (total 4 workers using 7257 MB)
@  3170s  (total 4 workers using 7264 MB)
@  3180s  (total 4 workers using 7258 MB)
@  3190s  (total 4 workers using 7228 MB)
@  3201s  (total 4 workers using 7268 MB)
@  3211s  (total 4 workers using 7193 MB)
@  3221s  (total 4 workers using 7270 MB)
@  3232s  (total 4 workers using 7271 MB)
@  3242s  (total 4 workers using 7246 MB)
@  3252s  (total 4 workers using 7270 MB)
@  3263s  (total 4 workers using 7280 MB)
@  3273s  (total 4 workers using 7412 MB)
@  3284s  (total 4 workers using 7283 MB)
@  3294s  (total 4 workers using 7284 MB)
@  3304s  (total 4 workers using 7284 MB)
@  3315s  (total 4 workers using 7284 MB)
@  3325s  (total 4 workers using 7246 MB)
@  3335s  (total 4 workers using 7287 MB)
@  3346s  (total 4 workers using 7288 MB)
@  3356s  (total 4 workers using 7248 MB)
@  3366s  (total 4 workers using 7289 MB)
@  3377s  (total 4 workers using 7250 MB)
@  3387s  (total 4 workers using 7270 MB)
@  3397s  (total 4 workers using 7290 MB)
@  3408s  (total 4 workers using 7298 MB)
@  3418s  (total 4 workers using 7299 MB)
@  3429s  (total 4 workers using 7317 MB)
@  3439s  (total 4 workers using 7317 MB)
@  3449s  (total 4 workers using 7318 MB)
@  3460s  (total 4 workers using 7318 MB)
@  3470s  (total 4 workers using 7298 MB)
@  3480s  (total 4 workers using 7237 MB)
@  3491s  (total 4 workers using 7279 MB)
@  3501s  (total 4 workers using 7319 MB)
@  3511s  (total 4 workers using 7279 MB)
@  3522s  (total 4 workers using 7321 MB)
@  3532s  (total 4 workers using 7280 MB)
@  3542s  (total 4 workers using 7306 MB)
@  3553s  (total 4 workers using 7322 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3555s  (copied results from worker 0 in /tmp//pr_test)
@  3555s  [0;30;47m(proof race finished with answer unknown in 3554.81 seconds)[m
unknown
c done
