c host: c3n22
c start: Fri Oct 18 22:43:26 CEST 2019
c arrayjobid: 17567257
c jobid: 17567701
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck1-p437.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567701.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 27337)
@     0s  (started worker 1 with pid 27338)
@     0s  (started worker 2 with pid 27339)
@     0s  (started worker 3 with pid 27340)
@     0s  (started worker 4 with pid 27341)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 27457)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 455 MB)
@     2s  (started worker 6 with pid 27513)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 889 MB)
@     3s  (started worker 7 with pid 27575)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 1185 MB)
@     4s  (started worker 8 with pid 27643)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1412 MB)
@     5s  (started worker 9 with pid 27735)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1665 MB)
@     7s  (started worker 10 with pid 27815)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 2208 MB)
@    15s  (total 11 workers using 3503 MB)
@    27s  (total 11 workers using 4991 MB)
@    39s  (total 11 workers using 6040 MB)
@    50s  (total 11 workers using 7499 MB)
@    61s  (total 11 workers using 8101 MB)
@    73s  (total 11 workers using 9182 MB)
@    83s  (total 11 workers using 9485 MB)
@    95s  (total 11 workers using 10045 MB)
@   106s  (total 11 workers using 10951 MB)
@   117s  (total 11 workers using 11230 MB)
@   128s  (total 11 workers using 11832 MB)
@   139s  (total 11 workers using 12398 MB)
@   150s  (total 11 workers using 12861 MB)
@   161s  (total 11 workers using 13481 MB)
@   172s  (total 11 workers using 13992 MB)
@   183s  (total 11 workers using 15012 MB)
@   194s  (total 11 workers using 15554 MB)
@   205s  (total 11 workers using 16199 MB)
@   216s  (total 11 workers using 16694 MB)
@   228s  (total 11 workers using 17048 MB)
@   239s  (total 11 workers using 18075 MB)
@   250s  (total 11 workers using 18017 MB)
@   261s  (total 11 workers using 18615 MB)
@   272s  (total 11 workers using 18977 MB)
@   283s  (total 11 workers using 19204 MB)
@   294s  (total 11 workers using 19529 MB)
@   305s  (total 11 workers using 19711 MB)
@   316s  (total 11 workers using 19885 MB)
@   327s  (total 11 workers using 19863 MB)
@   338s  (total 11 workers using 20240 MB)
@   349s  (total 11 workers using 20531 MB)
@   361s  (total 11 workers using 21090 MB)
@   371s  (total 11 workers using 21162 MB)
@   383s  (total 11 workers using 21541 MB)
@   394s  (total 11 workers using 21579 MB)
@   405s  (total 11 workers using 21816 MB)
@   416s  (total 11 workers using 22623 MB)
@   427s  (total 11 workers using 22665 MB)
@   438s  (total 11 workers using 23231 MB)
@   449s  (total 11 workers using 23641 MB)
@   460s  (total 11 workers using 24150 MB)
@   471s  (total 11 workers using 24563 MB)
@   482s  (total 11 workers using 25107 MB)
@   493s  (total 11 workers using 24908 MB)
@   504s  (total 11 workers using 25582 MB)
@   515s  (total 11 workers using 25977 MB)
@   526s  (total 11 workers using 26260 MB)
@   538s  (total 11 workers using 26472 MB)
@   548s  (total 11 workers using 26271 MB)
@   560s  (total 11 workers using 27214 MB)
@   571s  (total 11 workers using 26911 MB)
@   582s  (total 11 workers using 27658 MB)
@   593s  (total 11 workers using 27851 MB)
@   604s  (total 11 workers using 28580 MB)
@   615s  (total 11 workers using 28671 MB)
@   626s  (total 11 workers using 28740 MB)
@   637s  (total 11 workers using 28782 MB)
@   648s  (total 11 workers using 29767 MB)
@   659s  (total 11 workers using 30024 MB)
@   670s  (total 11 workers using 30484 MB)
@   681s  (total 11 workers using 30199 MB)
@   692s  (total 11 workers using 30756 MB)
@   703s  (total 11 workers using 31457 MB)
@   715s  (total 11 workers using 31422 MB)
@   726s  (total 11 workers using 31797 MB)
@   737s  (total 11 workers using 32035 MB)
@   748s  (total 11 workers using 31787 MB)
@   759s  (total 11 workers using 32881 MB)
@   770s  (total 11 workers using 32798 MB)
@   781s  (total 11 workers using 31926 MB)
@   792s  (total 11 workers using 32531 MB)
@   803s  (total 11 workers using 32147 MB)
@   814s  (total 11 workers using 33088 MB)
@   825s  (total 11 workers using 33059 MB)
@   836s  (total 11 workers using 32677 MB)
@   847s  (total 11 workers using 33457 MB)
@   858s  (total 11 workers using 32763 MB)
@   869s  (total 11 workers using 33574 MB)
@   880s  (total 11 workers using 33930 MB)
@   892s  (total 11 workers using 33842 MB)
@   903s  (total 11 workers using 34086 MB)
@   914s  (total 11 workers using 33683 MB)
@   925s  (total 11 workers using 34952 MB)
@   936s  (total 11 workers using 34986 MB)
@   947s  (total 11 workers using 35138 MB)
@   958s  (total 11 workers using 35496 MB)
@   969s  (total 11 workers using 35271 MB)
@   980s  (total 11 workers using 35974 MB)
@   991s  (total 11 workers using 36219 MB)
@  1002s  (total 11 workers using 36423 MB)
@  1013s  (total 11 workers using 36308 MB)
@  1024s  (total 11 workers using 36606 MB)
@  1035s  (total 11 workers using 37076 MB)
@  1046s  (total 11 workers using 36969 MB)
@  1057s  (total 11 workers using 37004 MB)
@  1069s  (total 11 workers using 37882 MB)
@  1079s  (total 11 workers using 37385 MB)
@  1091s  (total 11 workers using 38119 MB)
@  1102s  (total 11 workers using 38440 MB)
@  1113s  (total 11 workers using 37687 MB)
@  1124s  (total 11 workers using 38379 MB)
@  1135s  (total 11 workers using 39001 MB)
@  1146s  (total 11 workers using 38789 MB)
@  1157s  (total 11 workers using 38959 MB)
@  1168s  (total 11 workers using 39716 MB)
@  1177s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  1179s  (total 10 workers using 36813 MB)
@  1190s  (total 10 workers using 37819 MB)
@  1201s  (total 10 workers using 38243 MB)
@  1212s  (total 10 workers using 37889 MB)
@  1223s  (total 10 workers using 38675 MB)
@  1234s  (total 10 workers using 38610 MB)
@  1245s  (total 10 workers using 37836 MB)
@  1256s  (total 10 workers using 39442 MB)
@  1267s  (total 10 workers using 39240 MB)
@  1278s  (total 10 workers using 39531 MB)
@  1289s  (total 10 workers using 39235 MB)
@  1300s  (total 10 workers using 39528 MB)
@  1311s  (total 10 workers using 39820 MB)
@  1322s  (total 10 workers using 40133 MB)
@  1333s  (total 10 workers using 40243 MB)
@  1344s  (total 10 workers using 40749 MB)
@  1355s  (total 10 workers using 40295 MB)
@  1366s  (total 10 workers using 41210 MB)
@  1377s  (total 10 workers using 40647 MB)
@  1387s  (total 10 workers using 41175 MB)
@  1399s  (total 10 workers using 41895 MB)
@  1409s  (total 10 workers using 41078 MB)
@  1421s  (total 10 workers using 41572 MB)
@  1431s  (total 10 workers using 41764 MB)
@  1443s  (total 10 workers using 41913 MB)
@  1453s  (total 10 workers using 42004 MB)
@  1464s  (total 10 workers using 42552 MB)
@  1475s  (total 10 workers using 42723 MB)
@  1486s  (total 10 workers using 42518 MB)
@  1497s  (total 10 workers using 42253 MB)
@  1508s  (total 10 workers using 43638 MB)
@  1519s  (total 10 workers using 43113 MB)
@  1530s  (total 10 workers using 42928 MB)
@  1541s  (total 10 workers using 43997 MB)
@  1552s  (total 10 workers using 44214 MB)
@  1563s  (total 10 workers using 44808 MB)
@  1574s  (total 10 workers using 44346 MB)
@  1585s  (total 10 workers using 44552 MB)
@  1596s  (total 10 workers using 44823 MB)
@  1607s  (total 10 workers using 44853 MB)
@  1618s  (total 10 workers using 45436 MB)
@  1629s  (total 10 workers using 44679 MB)
@  1640s  (total 10 workers using 45480 MB)
@  1651s  (total 10 workers using 45323 MB)
@  1662s  (total 10 workers using 45043 MB)
@  1673s  (total 10 workers using 45289 MB)
@  1684s  (total 10 workers using 45096 MB)
@  1695s  (total 10 workers using 45288 MB)
@  1706s  (total 10 workers using 44933 MB)
@  1717s  (total 10 workers using 45921 MB)
@  1728s  (total 10 workers using 46349 MB)
@  1739s  (total 10 workers using 45996 MB)
@  1750s  (total 10 workers using 46535 MB)
@  1761s  (total 10 workers using 46294 MB)
@  1772s  (total 10 workers using 46066 MB)
@  1783s  (total 10 workers using 46149 MB)
@  1794s  (total 10 workers using 47052 MB)
@  1805s  (total 10 workers using 46844 MB)
@  1816s  (total 10 workers using 46719 MB)
@  1827s  (total 10 workers using 46865 MB)
@  1838s  (total 10 workers using 46694 MB)
@  1849s  (total 10 workers using 46942 MB)
@  1860s  (total 10 workers using 46537 MB)
@  1870s  (total 10 workers using 47885 MB)
@  1882s  (total 10 workers using 48211 MB)
@  1892s  (total 10 workers using 47844 MB)
@  1903s  (total 10 workers using 48366 MB)
@  1914s  (total 10 workers using 47660 MB)
@  1925s  (total 10 workers using 48935 MB)
@  1936s  (total 10 workers using 48327 MB)
@  1947s  (total 10 workers using 48049 MB)
@  1958s  (total 10 workers using 47584 MB)
@  1969s  (total 10 workers using 48801 MB)
@  1980s  (total 10 workers using 49144 MB)
@  1991s  (total 10 workers using 48648 MB)
@  2002s  (total 10 workers using 49322 MB)
@  2013s  (total 10 workers using 49079 MB)
@  2024s  (total 10 workers using 48762 MB)
@  2035s  (total 10 workers using 49505 MB)
@  2046s  (total 10 workers using 50112 MB)
@  2057s  (total 10 workers using 49346 MB)
@  2067s  (total 10 workers using 50252 MB)
@  2078s  (total 10 workers using 49286 MB)
@  2089s  (total 10 workers using 50466 MB)
@  2100s  (total 10 workers using 50409 MB)
@  2111s  (total 10 workers using 49653 MB)
@  2122s  (total 10 workers using 50783 MB)
@  2133s  (total 10 workers using 50698 MB)
@  2144s  (total 10 workers using 52317 MB)
@  2155s  (total 10 workers using 52162 MB)
@  2166s  (total 10 workers using 52629 MB)
@  2177s  (total 10 workers using 51853 MB)
@  2188s  (total 10 workers using 52416 MB)
@  2199s  (total 10 workers using 52589 MB)
@  2210s  (total 10 workers using 53344 MB)
@  2221s  (total 10 workers using 53194 MB)
@  2232s  (total 10 workers using 54351 MB)
@  2242s  (total 10 workers using 53657 MB)
@  2254s  (total 10 workers using 53622 MB)
@  2264s  (total 10 workers using 53410 MB)
@  2275s  (total 10 workers using 54508 MB)
@  2286s  (total 10 workers using 53228 MB)
@  2297s  (total 10 workers using 54589 MB)
@  2308s  (total 10 workers using 54322 MB)
@  2319s  (total 10 workers using 55694 MB)
@  2330s  (total 10 workers using 54941 MB)
@  2341s  (total 10 workers using 55209 MB)
@  2352s  (total 10 workers using 54676 MB)
@  2363s  (total 10 workers using 54412 MB)
@  2374s  (total 10 workers using 54912 MB)
@  2385s  (total 10 workers using 55607 MB)
@  2396s  (total 10 workers using 55818 MB)
@  2407s  (total 10 workers using 56372 MB)
@  2418s  (total 10 workers using 56204 MB)
@  2429s  (total 10 workers using 55953 MB)
@  2440s  (total 10 workers using 56333 MB)
@  2451s  (total 10 workers using 56205 MB)
@  2461s  (total 10 workers using 56830 MB)
@  2473s  (total 10 workers using 55471 MB)
@  2483s  (total 10 workers using 56535 MB)
@  2494s  (total 10 workers using 56721 MB)
@  2505s  (total 10 workers using 57630 MB)
@  2516s  (total 10 workers using 57425 MB)
@  2527s  (total 10 workers using 56945 MB)
@  2538s  (total 10 workers using 57064 MB)
@  2549s  (total 10 workers using 57593 MB)
@  2560s  (total 10 workers using 56304 MB)
@  2571s  (total 10 workers using 57426 MB)
@  2582s  (total 10 workers using 58306 MB)
@  2593s  (total 10 workers using 57713 MB)
@  2604s  (total 10 workers using 57630 MB)
@  2615s  (total 10 workers using 58168 MB)
@  2626s  (total 10 workers using 57951 MB)
@  2637s  (total 10 workers using 58739 MB)
@  2648s  (total 10 workers using 58533 MB)
@  2658s  (total 10 workers using 57653 MB)
@  2669s  (total 10 workers using 59564 MB)
@  2680s  (total 10 workers using 58859 MB)
@  2691s  (total 10 workers using 59857 MB)
@  2702s  (total 10 workers using 59041 MB)
@  2713s  (total 10 workers using 59714 MB)
@  2724s  (total 10 workers using 58981 MB)
@  2735s  (total 10 workers using 59739 MB)
@  2746s  (total 10 workers using 59535 MB)
@  2757s  (total 10 workers using 59555 MB)
@  2768s  (total 10 workers using 59495 MB)
@  2779s  (total 10 workers using 60790 MB)
@  2790s  (total 10 workers using 60288 MB)
@  2801s  (total 10 workers using 60058 MB)
@  2812s  (total 10 workers using 60377 MB)
@  2823s  (total 10 workers using 60918 MB)
@  2834s  (total 10 workers using 60433 MB)
@  2845s  (total 10 workers using 60764 MB)
@  2855s  (total 10 workers using 59485 MB)
@  2867s  (total 10 workers using 61549 MB)
@  2877s  (total 10 workers using 61263 MB)
@  2888s  (total 10 workers using 61795 MB)
@  2899s  (total 10 workers using 61803 MB)
@  2910s  (total 10 workers using 61163 MB)
@  2921s  (total 10 workers using 61832 MB)
@  2932s  (total 10 workers using 61123 MB)
@  2943s  (total 10 workers using 62351 MB)
@  2954s  (total 10 workers using 60534 MB)
@  2965s  (total 10 workers using 62420 MB)
@  2976s  (total 10 workers using 61961 MB)
@  2987s  (total 10 workers using 63259 MB)
@  2998s  (total 10 workers using 62283 MB)
@  3009s  (total 10 workers using 62846 MB)
@  3020s  (total 10 workers using 61570 MB)
@  3031s  (total 10 workers using 62643 MB)
@  3042s  (total 10 workers using 61691 MB)
@  3052s  (total 10 workers using 62674 MB)
@  3064s  (total 10 workers using 61756 MB)
@  3074s  (total 10 workers using 61640 MB)
@  3085s  (total 10 workers using 62278 MB)
@  3096s  (total 10 workers using 61538 MB)
@  3107s  (total 10 workers using 63434 MB)
@  3118s  (total 10 workers using 62813 MB)
@  3129s  (total 10 workers using 63234 MB)
@  3140s  (total 10 workers using 62427 MB)
@  3151s  (total 10 workers using 63202 MB)
@  3162s  (total 10 workers using 62260 MB)
@  3173s  (total 10 workers using 62789 MB)
@  3184s  (total 10 workers using 62465 MB)
@  3195s  (total 10 workers using 62235 MB)
@  3206s  (total 10 workers using 63192 MB)
@  3217s  (total 10 workers using 62913 MB)
@  3228s  (total 10 workers using 64208 MB)
@  3239s  (total 10 workers using 63062 MB)
@  3249s  (total 10 workers using 64230 MB)
@  3261s  (total 10 workers using 63458 MB)
@  3271s  (total 10 workers using 63711 MB)
@  3282s  (total 10 workers using 63430 MB)
@  3293s  (total 10 workers using 64344 MB)
@  3304s  (total 10 workers using 63522 MB)
@  3315s  (total 10 workers using 62985 MB)
@  3326s  (total 10 workers using 64775 MB)
@  3337s  (total 10 workers using 64370 MB)
@  3348s  (total 10 workers using 65076 MB)
@  3359s  (total 10 workers using 64030 MB)
@  3370s  (total 10 workers using 65056 MB)
@  3381s  (total 10 workers using 64879 MB)
@  3392s  (total 10 workers using 64714 MB)
@  3403s  (total 10 workers using 65239 MB)
@  3414s  (total 10 workers using 63977 MB)
@  3425s  (total 10 workers using 64717 MB)
@  3436s  (total 10 workers using 65043 MB)
@  3446s  (total 10 workers using 65781 MB)
@  3458s  (total 10 workers using 65173 MB)
@  3468s  (total 10 workers using 65726 MB)
@  3479s  (total 10 workers using 65300 MB)
@  3490s  (total 10 workers using 66111 MB)
@  3501s  (total 10 workers using 65599 MB)
@  3512s  (total 10 workers using 65909 MB)
@  3523s  (total 10 workers using 65893 MB)
@  3534s  (total 10 workers using 64999 MB)
@  3545s  (total 10 workers using 66834 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3556s  (total 5 workers using 59049 MB)
@  3557s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3560s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3564s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3566s  (total 2 workers using 5206 MB)
@  3574s  (stopping all workers)
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3574.78 seconds)[m
unknown
c done
