c host: c3n03
c start: Fri Oct 18 22:52:04 CEST 2019
c arrayjobid: 17567257
c jobid: 17567713
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r1-p020.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567713.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 2718)
@     0s  (started worker 1 with pid 2719)
@     0s  (started worker 2 with pid 2720)
@     0s  (started worker 3 with pid 2721)
@     0s  (started worker 4 with pid 2722)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 2838)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 384 MB)
@     2s  (started worker 6 with pid 2894)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 615 MB)
@     3s  (started worker 7 with pid 2956)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 847 MB)
@     4s  (started worker 8 with pid 3025)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1012 MB)
@     4s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@     5s  (started worker 9 with pid 3116)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1048 MB)
@     6s  (started worker 10 with pid 3191)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 1316 MB)
@    15s  (total 10 workers using 2557 MB)
@    26s  (total 10 workers using 3692 MB)
@    38s  (total 10 workers using 4776 MB)
@    49s  (total 10 workers using 5439 MB)
@    60s  (total 10 workers using 6390 MB)
@    72s  (total 10 workers using 6653 MB)
@    82s  (total 10 workers using 7781 MB)
@    93s  (total 10 workers using 8194 MB)
@   104s  (total 10 workers using 8639 MB)
@   115s  (total 10 workers using 9783 MB)
@   126s  (total 10 workers using 9319 MB)
@   137s  (total 10 workers using 10411 MB)
@   148s  (total 10 workers using 10865 MB)
@   159s  (total 10 workers using 10447 MB)
@   170s  (total 10 workers using 11689 MB)
@   181s  (total 10 workers using 11528 MB)
@   192s  (total 10 workers using 11397 MB)
@   203s  (total 10 workers using 12443 MB)
@   214s  (total 10 workers using 13180 MB)
@   225s  (total 10 workers using 12843 MB)
@   236s  (total 10 workers using 13853 MB)
@   247s  (total 10 workers using 13509 MB)
@   258s  (total 10 workers using 14088 MB)
@   269s  (total 10 workers using 14465 MB)
@   280s  (total 10 workers using 13998 MB)
@   291s  (total 10 workers using 15659 MB)
@   302s  (total 10 workers using 14984 MB)
@   313s  (total 10 workers using 15999 MB)
@   324s  (total 10 workers using 16354 MB)
@   335s  (total 10 workers using 16990 MB)
@   346s  (total 10 workers using 17011 MB)
@   357s  (total 10 workers using 16814 MB)
@   368s  (total 10 workers using 18279 MB)
@   379s  (total 10 workers using 17868 MB)
@   390s  (total 10 workers using 18736 MB)
@   401s  (total 10 workers using 17596 MB)
@   412s  (total 10 workers using 18018 MB)
@   423s  (total 10 workers using 18611 MB)
@   433s  (total 10 workers using 18594 MB)
@   445s  (total 10 workers using 18714 MB)
@   455s  (total 10 workers using 20116 MB)
@   466s  (total 10 workers using 20195 MB)
@   477s  (total 10 workers using 19254 MB)
@   488s  (total 10 workers using 20972 MB)
@   499s  (total 10 workers using 19413 MB)
@   510s  (total 10 workers using 20679 MB)
@   521s  (total 10 workers using 21572 MB)
@   532s  (total 10 workers using 21888 MB)
@   543s  (total 10 workers using 21051 MB)
@   554s  (total 10 workers using 21782 MB)
@   565s  (total 10 workers using 22066 MB)
@   576s  (total 10 workers using 23373 MB)
@   587s  (total 10 workers using 22369 MB)
@   598s  (total 10 workers using 22771 MB)
@   609s  (total 10 workers using 22636 MB)
@   620s  (total 10 workers using 22667 MB)
@   631s  (total 10 workers using 22186 MB)
@   642s  (total 10 workers using 24312 MB)
@   653s  (total 10 workers using 23699 MB)
@   664s  (total 10 workers using 23373 MB)
@   675s  (total 10 workers using 24323 MB)
@   686s  (total 10 workers using 23433 MB)
@   697s  (total 10 workers using 24715 MB)
@   708s  (total 10 workers using 23732 MB)
@   719s  (total 10 workers using 24781 MB)
@   730s  (total 10 workers using 26089 MB)
@   741s  (total 10 workers using 24646 MB)
@   752s  (total 10 workers using 25157 MB)
@   763s  (total 10 workers using 25781 MB)
@   774s  (total 10 workers using 27656 MB)
@   785s  (total 10 workers using 26921 MB)
@   796s  (total 10 workers using 25189 MB)
@   807s  (total 10 workers using 25515 MB)
@   818s  (total 10 workers using 25947 MB)
@   829s  (total 10 workers using 25911 MB)
@   840s  (total 10 workers using 26105 MB)
@   851s  (total 10 workers using 25957 MB)
@   862s  (total 10 workers using 26186 MB)
@   873s  (total 10 workers using 26303 MB)
@   884s  (total 10 workers using 26252 MB)
@   895s  (total 10 workers using 29032 MB)
@   906s  (total 10 workers using 28636 MB)
@   917s  (total 10 workers using 27679 MB)
@   928s  (total 10 workers using 27298 MB)
@   939s  (total 10 workers using 29582 MB)
@   950s  (total 10 workers using 28826 MB)
@   961s  (total 10 workers using 28595 MB)
@   972s  (total 10 workers using 30516 MB)
@   983s  (total 10 workers using 28370 MB)
@   994s  (total 10 workers using 29710 MB)
@  1005s  (total 10 workers using 28618 MB)
@  1016s  (total 10 workers using 31049 MB)
@  1027s  (total 10 workers using 28704 MB)
@  1039s  (total 10 workers using 30958 MB)
@  1049s  (total 10 workers using 31570 MB)
@  1061s  (total 10 workers using 30574 MB)
@  1071s  (total 10 workers using 31673 MB)
@  1083s  (total 10 workers using 30028 MB)
@  1093s  (total 10 workers using 31564 MB)
@  1105s  (total 10 workers using 32277 MB)
@  1115s  (total 10 workers using 30349 MB)
@  1126s  (total 10 workers using 31090 MB)
@  1137s  (total 10 workers using 32395 MB)
@  1148s  (total 10 workers using 34062 MB)
@  1159s  (total 10 workers using 33984 MB)
@  1170s  (total 10 workers using 35742 MB)
@  1181s  (total 10 workers using 35757 MB)
@  1192s  (total 10 workers using 35522 MB)
@  1203s  (total 10 workers using 32941 MB)
@  1214s  (total 10 workers using 33627 MB)
@  1225s  (total 10 workers using 34096 MB)
@  1236s  (total 10 workers using 34500 MB)
@  1247s  (total 10 workers using 34554 MB)
@  1258s  (total 10 workers using 35175 MB)
@  1269s  (total 10 workers using 35719 MB)
@  1280s  (total 10 workers using 34860 MB)
@  1291s  (total 10 workers using 34602 MB)
@  1302s  (total 10 workers using 35070 MB)
@  1313s  (total 10 workers using 34700 MB)
@  1324s  (total 10 workers using 35352 MB)
@  1335s  (total 10 workers using 37452 MB)
@  1346s  (total 10 workers using 37717 MB)
@  1357s  (total 10 workers using 38274 MB)
@  1368s  (total 10 workers using 37956 MB)
@  1379s  (total 10 workers using 36957 MB)
@  1390s  (total 10 workers using 37325 MB)
@  1401s  (total 10 workers using 35777 MB)
@  1412s  (total 10 workers using 38827 MB)
@  1423s  (total 10 workers using 38640 MB)
@  1434s  (total 10 workers using 38034 MB)
@  1445s  (total 10 workers using 37964 MB)
@  1456s  (total 10 workers using 36360 MB)
@  1467s  (total 10 workers using 39018 MB)
@  1478s  (total 10 workers using 38571 MB)
@  1489s  (total 10 workers using 36488 MB)
@  1500s  (total 10 workers using 39980 MB)
@  1511s  (total 10 workers using 37965 MB)
@  1522s  (total 10 workers using 37135 MB)
@  1533s  (total 10 workers using 39530 MB)
@  1544s  (total 10 workers using 38442 MB)
@  1555s  (total 10 workers using 40798 MB)
@  1566s  (total 10 workers using 39456 MB)
@  1577s  (total 10 workers using 37518 MB)
@  1588s  (total 10 workers using 39347 MB)
@  1599s  (total 10 workers using 40871 MB)
@  1610s  (total 10 workers using 40783 MB)
@  1621s  (total 10 workers using 38322 MB)
@  1632s  (total 10 workers using 40557 MB)
@  1643s  (total 10 workers using 38422 MB)
@  1654s  (total 10 workers using 40918 MB)
@  1665s  (total 10 workers using 39279 MB)
@  1676s  (total 10 workers using 41309 MB)
@  1687s  (total 10 workers using 38466 MB)
@  1698s  (total 10 workers using 38508 MB)
@  1709s  (total 10 workers using 38815 MB)
@  1715s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  1720s  (total 9 workers using 19877 MB)
@  1731s  (total 9 workers using 19127 MB)
@  1742s  (total 9 workers using 19640 MB)
@  1753s  (total 9 workers using 19400 MB)
@  1764s  (total 9 workers using 19673 MB)
@  1774s  (total 9 workers using 19443 MB)
@  1785s  (total 9 workers using 19631 MB)
@  1796s  (total 9 workers using 19799 MB)
@  1807s  (total 9 workers using 19895 MB)
@  1818s  (total 9 workers using 19841 MB)
@  1829s  (total 9 workers using 19926 MB)
@  1840s  (total 9 workers using 20958 MB)
@  1850s  (total 9 workers using 20391 MB)
@  1861s  (total 9 workers using 20069 MB)
@  1872s  (total 9 workers using 20614 MB)
@  1883s  (total 9 workers using 20271 MB)
@  1894s  (total 9 workers using 20660 MB)
@  1905s  (total 9 workers using 20460 MB)
@  1916s  (total 9 workers using 20865 MB)
@  1926s  (total 9 workers using 20541 MB)
@  1937s  (total 9 workers using 21236 MB)
@  1948s  (total 9 workers using 20763 MB)
@  1959s  (total 9 workers using 20683 MB)
@  1970s  (total 9 workers using 20712 MB)
@  1981s  (total 9 workers using 21595 MB)
@  1991s  (total 9 workers using 20815 MB)
@  2002s  (total 9 workers using 21231 MB)
@  2013s  (total 9 workers using 20932 MB)
@  2024s  (total 9 workers using 21988 MB)
@  2035s  (total 9 workers using 21021 MB)
@  2046s  (total 9 workers using 21116 MB)
@  2056s  (total 9 workers using 21506 MB)
@  2067s  (total 9 workers using 21234 MB)
@  2078s  (total 9 workers using 21809 MB)
@  2089s  (total 9 workers using 21398 MB)
@  2100s  (total 9 workers using 21706 MB)
@  2111s  (total 9 workers using 21803 MB)
@  2122s  (total 9 workers using 22401 MB)
@  2132s  (total 9 workers using 22528 MB)
@  2143s  (total 9 workers using 22062 MB)
@  2154s  (total 9 workers using 22635 MB)
@  2165s  (total 9 workers using 22849 MB)
@  2176s  (total 9 workers using 22129 MB)
@  2187s  (total 9 workers using 22534 MB)
@  2198s  (total 9 workers using 22201 MB)
@  2208s  (total 9 workers using 23568 MB)
@  2219s  (total 9 workers using 22704 MB)
@  2230s  (total 9 workers using 23760 MB)
@  2241s  (total 9 workers using 23061 MB)
@  2252s  (total 9 workers using 22767 MB)
@  2263s  (total 9 workers using 23017 MB)
@  2273s  (total 9 workers using 22884 MB)
@  2284s  (total 9 workers using 22935 MB)
@  2295s  (total 9 workers using 23668 MB)
@  2306s  (total 9 workers using 23031 MB)
@  2317s  (total 9 workers using 23209 MB)
@  2328s  (total 9 workers using 23616 MB)
@  2338s  (total 9 workers using 23789 MB)
@  2349s  (total 9 workers using 23266 MB)
@  2360s  (total 9 workers using 23302 MB)
@  2371s  (total 9 workers using 24336 MB)
@  2382s  (total 9 workers using 23405 MB)
@  2393s  (total 9 workers using 24345 MB)
@  2404s  (total 9 workers using 23497 MB)
@  2415s  (total 9 workers using 24298 MB)
@  2425s  (total 9 workers using 23693 MB)
@  2436s  (total 9 workers using 24476 MB)
@  2447s  (total 9 workers using 23785 MB)
@  2458s  (total 9 workers using 24444 MB)
@  2469s  (total 9 workers using 23955 MB)
@  2480s  (total 9 workers using 24023 MB)
@  2490s  (total 9 workers using 25066 MB)
@  2501s  (total 9 workers using 24121 MB)
@  2512s  (total 9 workers using 24924 MB)
@  2523s  (total 9 workers using 24313 MB)
@  2534s  (total 9 workers using 24730 MB)
@  2545s  (total 9 workers using 24386 MB)
@  2555s  (total 9 workers using 25912 MB)
@  2566s  (total 9 workers using 24580 MB)
@  2577s  (total 9 workers using 25540 MB)
@  2588s  (total 9 workers using 25098 MB)
@  2599s  (total 9 workers using 25810 MB)
@  2610s  (total 9 workers using 25064 MB)
@  2620s  (total 9 workers using 25764 MB)
@  2631s  (total 9 workers using 25394 MB)
@  2642s  (total 9 workers using 26512 MB)
@  2653s  (total 9 workers using 25472 MB)
@  2664s  (total 9 workers using 26685 MB)
@  2675s  (total 9 workers using 25334 MB)
@  2686s  (total 9 workers using 25724 MB)
@  2696s  (total 9 workers using 26170 MB)
@  2707s  (total 9 workers using 25925 MB)
@  2718s  (total 9 workers using 25965 MB)
@  2729s  (total 9 workers using 26339 MB)
@  2740s  (total 9 workers using 25972 MB)
@  2751s  (total 9 workers using 26982 MB)
@  2762s  (total 9 workers using 26327 MB)
@  2772s  (total 9 workers using 26674 MB)
@  2783s  (total 9 workers using 26913 MB)
@  2794s  (total 9 workers using 26226 MB)
@  2805s  (total 9 workers using 26253 MB)
@  2816s  (total 9 workers using 26379 MB)
@  2827s  (total 9 workers using 26585 MB)
@  2837s  (total 9 workers using 26444 MB)
@  2848s  (total 9 workers using 26498 MB)
@  2859s  (total 9 workers using 27320 MB)
@  2870s  (total 9 workers using 26866 MB)
@  2881s  (total 9 workers using 26633 MB)
@  2892s  (total 9 workers using 27449 MB)
@  2902s  (total 9 workers using 26717 MB)
@  2913s  (total 9 workers using 26753 MB)
@  2924s  (total 9 workers using 27007 MB)
@  2935s  (total 9 workers using 26954 MB)
@  2946s  (total 9 workers using 27655 MB)
@  2957s  (total 9 workers using 27250 MB)
@  2967s  (total 9 workers using 28029 MB)
@  2978s  (total 9 workers using 27820 MB)
@  2989s  (total 9 workers using 28012 MB)
@  3000s  (total 9 workers using 27452 MB)
@  3011s  (total 9 workers using 28201 MB)
@  3022s  (total 9 workers using 27594 MB)
@  3033s  (total 9 workers using 28076 MB)
@  3044s  (total 9 workers using 27620 MB)
@  3054s  (total 9 workers using 28397 MB)
@  3065s  (total 9 workers using 27732 MB)
@  3076s  (total 9 workers using 27764 MB)
@  3087s  (total 9 workers using 28025 MB)
@  3098s  (total 9 workers using 27890 MB)
@  3109s  (total 9 workers using 27933 MB)
@  3119s  (total 9 workers using 27740 MB)
@  3130s  (total 9 workers using 28329 MB)
@  3141s  (total 9 workers using 28356 MB)
@  3152s  (total 9 workers using 28866 MB)
@  3163s  (total 9 workers using 29068 MB)
@  3174s  (total 9 workers using 29031 MB)
@  3184s  (total 9 workers using 28928 MB)
@  3195s  (total 9 workers using 29107 MB)
@  3206s  (total 9 workers using 29345 MB)
@  3217s  (total 9 workers using 29168 MB)
@  3228s  (total 9 workers using 28932 MB)
@  3239s  (total 9 workers using 29751 MB)
@  3249s  (total 9 workers using 29357 MB)
@  3260s  (total 9 workers using 30111 MB)
@  3271s  (total 9 workers using 29504 MB)
@  3282s  (total 9 workers using 30469 MB)
@  3293s  (total 9 workers using 29597 MB)
@  3304s  (total 9 workers using 29580 MB)
@  3315s  (total 9 workers using 29876 MB)
@  3325s  (total 9 workers using 29936 MB)
@  3336s  (total 9 workers using 29774 MB)
@  3347s  (total 9 workers using 29795 MB)
@  3358s  (total 9 workers using 30960 MB)
@  3369s  (total 9 workers using 30073 MB)
@  3380s  (total 9 workers using 30718 MB)
@  3391s  (total 9 workers using 30157 MB)
@  3401s  (total 9 workers using 31026 MB)
@  3412s  (total 9 workers using 30374 MB)
@  3423s  (total 9 workers using 31246 MB)
@  3434s  (total 9 workers using 30544 MB)
@  3445s  (total 9 workers using 31510 MB)
@  3456s  (total 9 workers using 30867 MB)
@  3466s  (total 9 workers using 31061 MB)
@  3477s  (total 9 workers using 31060 MB)
@  3488s  (total 9 workers using 30742 MB)
@  3499s  (total 9 workers using 31482 MB)
@  3510s  (total 9 workers using 30773 MB)
@  3521s  (total 9 workers using 31608 MB)
@  3532s  (total 9 workers using 30851 MB)
@  3543s  (total 9 workers using 31819 MB)
@  3553s  (total 9 workers using 30982 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3557s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3564s  (total 2 workers using 9697 MB)
@  3574s  (total 2 workers using 9697 MB)
@  3576s  (stopping all workers)
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3576s  (copied results from worker 0 in /tmp//pr_test)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3576.24 seconds)[m
unknown
c done
