c host: c3n22
c start: Fri Oct 18 21:43:47 CEST 2019
c arrayjobid: 17567257
c jobid: 17567639
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r0-p104.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567639.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 3522)
@     0s  (started worker 1 with pid 3523)
@     0s  (started worker 2 with pid 3524)
@     0s  (started worker 3 with pid 3525)
@     0s  (started worker 4 with pid 3526)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 3642)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 362 MB)
@     2s  (started worker 6 with pid 3699)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 620 MB)
@     3s  (started worker 7 with pid 3762)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 887 MB)
@     4s  (started worker 8 with pid 3830)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1122 MB)
@     5s  (started worker 9 with pid 3922)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1267 MB)
@     7s  (started worker 10 with pid 4002)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1460 MB)
@     8s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@    15s  (total 10 workers using 1994 MB)
@    26s  (total 10 workers using 2235 MB)
@    38s  (total 10 workers using 2339 MB)
@    49s  (total 10 workers using 2450 MB)
@    60s  (total 10 workers using 2518 MB)
@    72s  (total 10 workers using 2742 MB)
@    82s  (total 10 workers using 2817 MB)
@    94s  (total 10 workers using 2879 MB)
@   104s  (total 10 workers using 2941 MB)
@   115s  (total 10 workers using 3056 MB)
@   126s  (total 10 workers using 3253 MB)
@   137s  (total 10 workers using 3309 MB)
@   148s  (total 10 workers using 3397 MB)
@   159s  (total 10 workers using 3452 MB)
@   170s  (total 10 workers using 3513 MB)
@   181s  (total 10 workers using 3592 MB)
@   192s  (total 10 workers using 3696 MB)
@   203s  (total 10 workers using 3816 MB)
@   214s  (total 10 workers using 3879 MB)
@   225s  (total 10 workers using 4037 MB)
@   236s  (total 10 workers using 4145 MB)
@   247s  (total 10 workers using 4199 MB)
@   258s  (total 10 workers using 4215 MB)
@   269s  (total 10 workers using 4268 MB)
@   280s  (total 10 workers using 4325 MB)
@   291s  (total 10 workers using 4417 MB)
@   302s  (total 10 workers using 4513 MB)
@   313s  (total 10 workers using 4612 MB)
@   324s  (total 10 workers using 4806 MB)
@   335s  (total 10 workers using 4842 MB)
@   346s  (total 10 workers using 4944 MB)
@   357s  (total 10 workers using 4957 MB)
@   367s  (total 10 workers using 5096 MB)
@   379s  (total 10 workers using 5103 MB)
@   389s  (total 10 workers using 5152 MB)
@   400s  (total 10 workers using 5213 MB)
@   411s  (total 10 workers using 5272 MB)
@   422s  (total 10 workers using 5310 MB)
@   433s  (total 10 workers using 5451 MB)
@   444s  (total 10 workers using 5520 MB)
@   455s  (total 10 workers using 5562 MB)
@   466s  (total 10 workers using 5712 MB)
@   477s  (total 10 workers using 5750 MB)
@   488s  (total 10 workers using 5793 MB)
@   499s  (total 10 workers using 5822 MB)
@   510s  (total 10 workers using 5891 MB)
@   521s  (total 10 workers using 6003 MB)
@   532s  (total 10 workers using 5952 MB)
@   543s  (total 10 workers using 6014 MB)
@   554s  (total 10 workers using 6076 MB)
@   565s  (total 10 workers using 6289 MB)
@   576s  (total 10 workers using 6339 MB)
@   587s  (total 10 workers using 6422 MB)
@   598s  (total 10 workers using 6480 MB)
@   609s  (total 10 workers using 6532 MB)
@   620s  (total 10 workers using 6580 MB)
@   631s  (total 10 workers using 6611 MB)
@   642s  (total 10 workers using 6707 MB)
@   653s  (total 10 workers using 6694 MB)
@   664s  (total 10 workers using 6751 MB)
@   674s  (total 10 workers using 6876 MB)
@   686s  (total 10 workers using 6948 MB)
@   696s  (total 10 workers using 7163 MB)
@   707s  (total 10 workers using 7222 MB)
@   718s  (total 10 workers using 7281 MB)
@   729s  (total 10 workers using 7299 MB)
@   740s  (total 10 workers using 7379 MB)
@   751s  (total 10 workers using 7476 MB)
@   762s  (total 10 workers using 7538 MB)
@   773s  (total 10 workers using 7590 MB)
@   784s  (total 10 workers using 7750 MB)
@   795s  (total 10 workers using 7768 MB)
@   806s  (total 10 workers using 7805 MB)
@   817s  (total 10 workers using 7969 MB)
@   828s  (total 10 workers using 7996 MB)
@   839s  (total 10 workers using 8099 MB)
@   850s  (total 10 workers using 8085 MB)
@   861s  (total 10 workers using 8151 MB)
@   872s  (total 10 workers using 8077 MB)
@   883s  (total 10 workers using 8224 MB)
@   894s  (total 10 workers using 8254 MB)
@   905s  (total 10 workers using 8223 MB)
@   916s  (total 10 workers using 8339 MB)
@   927s  (total 10 workers using 8366 MB)
@   937s  (total 10 workers using 8484 MB)
@   949s  (total 10 workers using 8544 MB)
@   959s  (total 10 workers using 8576 MB)
@   970s  (total 10 workers using 8633 MB)
@   981s  (total 10 workers using 8788 MB)
@   992s  (total 10 workers using 8818 MB)
@  1003s  (total 10 workers using 8830 MB)
@  1014s  (total 10 workers using 8866 MB)
@  1025s  (total 10 workers using 9020 MB)
@  1036s  (total 10 workers using 9021 MB)
@  1047s  (total 10 workers using 9092 MB)
@  1058s  (total 10 workers using 9124 MB)
@  1069s  (total 10 workers using 9327 MB)
@  1080s  (total 10 workers using 9352 MB)
@  1091s  (total 10 workers using 9386 MB)
@  1102s  (total 10 workers using 9386 MB)
@  1113s  (total 10 workers using 9458 MB)
@  1124s  (total 10 workers using 9461 MB)
@  1135s  (total 10 workers using 9443 MB)
@  1146s  (total 10 workers using 9545 MB)
@  1157s  (total 10 workers using 9592 MB)
@  1168s  (total 10 workers using 9615 MB)
@  1179s  (total 10 workers using 9706 MB)
@  1190s  (total 10 workers using 9761 MB)
@  1201s  (total 10 workers using 9835 MB)
@  1212s  (total 10 workers using 9996 MB)
@  1223s  (total 10 workers using 10008 MB)
@  1234s  (total 10 workers using 10103 MB)
@  1244s  (total 10 workers using 10124 MB)
@  1255s  (total 10 workers using 10245 MB)
@  1266s  (total 10 workers using 10303 MB)
@  1277s  (total 10 workers using 10350 MB)
@  1288s  (total 10 workers using 10449 MB)
@  1299s  (total 10 workers using 10511 MB)
@  1310s  (total 10 workers using 10543 MB)
@  1321s  (total 10 workers using 10623 MB)
@  1332s  (total 10 workers using 10660 MB)
@  1343s  (total 10 workers using 10737 MB)
@  1354s  (total 10 workers using 10770 MB)
@  1365s  (total 10 workers using 10858 MB)
@  1376s  (total 10 workers using 10905 MB)
@  1387s  (total 10 workers using 11155 MB)
@  1398s  (total 10 workers using 11342 MB)
@  1409s  (total 10 workers using 11328 MB)
@  1420s  (total 10 workers using 11547 MB)
@  1431s  (total 10 workers using 11472 MB)
@  1442s  (total 10 workers using 11529 MB)
@  1453s  (total 10 workers using 11575 MB)
@  1463s  (total 10 workers using 11580 MB)
@  1475s  (total 10 workers using 11612 MB)
@  1485s  (total 10 workers using 11707 MB)
@  1496s  (total 10 workers using 11727 MB)
@  1507s  (total 10 workers using 11927 MB)
@  1518s  (total 10 workers using 11910 MB)
@  1529s  (total 10 workers using 12073 MB)
@  1540s  (total 10 workers using 12043 MB)
@  1551s  (total 10 workers using 12094 MB)
@  1562s  (total 10 workers using 12177 MB)
@  1573s  (total 10 workers using 12178 MB)
@  1584s  (total 10 workers using 12277 MB)
@  1595s  (total 10 workers using 12368 MB)
@  1606s  (total 10 workers using 12462 MB)
@  1617s  (total 10 workers using 12490 MB)
@  1628s  (total 10 workers using 12545 MB)
@  1639s  (total 10 workers using 12640 MB)
@  1650s  (total 10 workers using 12717 MB)
@  1661s  (total 10 workers using 12915 MB)
@  1672s  (total 10 workers using 13030 MB)
@  1683s  (total 10 workers using 13063 MB)
@  1694s  (total 10 workers using 13059 MB)
@  1705s  (total 10 workers using 13113 MB)
@  1716s  (total 10 workers using 13011 MB)
@  1727s  (total 10 workers using 13204 MB)
@  1738s  (total 10 workers using 13271 MB)
@  1748s  (total 10 workers using 13327 MB)
@  1760s  (total 10 workers using 13353 MB)
@  1770s  (total 10 workers using 13345 MB)
@  1781s  (total 10 workers using 13489 MB)
@  1792s  (total 10 workers using 13500 MB)
@  1803s  (total 10 workers using 13667 MB)
@  1814s  (total 10 workers using 13713 MB)
@  1825s  (total 10 workers using 13733 MB)
@  1836s  (total 10 workers using 13854 MB)
@  1847s  (total 10 workers using 14027 MB)
@  1858s  (total 10 workers using 13970 MB)
@  1869s  (total 10 workers using 13995 MB)
@  1880s  (total 10 workers using 14040 MB)
@  1891s  (total 10 workers using 14095 MB)
@  1902s  (total 10 workers using 14194 MB)
@  1913s  (total 10 workers using 14227 MB)
@  1924s  (total 10 workers using 14452 MB)
@  1935s  (total 10 workers using 14521 MB)
@  1946s  (total 10 workers using 14476 MB)
@  1957s  (total 10 workers using 14504 MB)
@  1968s  (total 10 workers using 14522 MB)
@  1979s  (total 10 workers using 14521 MB)
@  1990s  (total 10 workers using 14541 MB)
@  2001s  (total 10 workers using 14515 MB)
@  2011s  (total 10 workers using 14631 MB)
@  2023s  (total 10 workers using 14645 MB)
@  2033s  (total 10 workers using 14748 MB)
@  2044s  (total 10 workers using 14832 MB)
@  2055s  (total 10 workers using 14924 MB)
@  2066s  (total 10 workers using 14902 MB)
@  2077s  (total 10 workers using 15068 MB)
@  2088s  (total 10 workers using 15194 MB)
@  2099s  (total 10 workers using 15132 MB)
@  2110s  (total 10 workers using 15237 MB)
@  2121s  (total 10 workers using 15259 MB)
@  2132s  (total 10 workers using 15452 MB)
@  2143s  (total 10 workers using 15611 MB)
@  2154s  (total 10 workers using 15659 MB)
@  2165s  (total 10 workers using 15779 MB)
@  2176s  (total 10 workers using 15876 MB)
@  2187s  (total 10 workers using 15936 MB)
@  2198s  (total 10 workers using 16013 MB)
@  2209s  (total 10 workers using 16046 MB)
@  2220s  (total 10 workers using 15978 MB)
@  2231s  (total 10 workers using 15925 MB)
@  2242s  (total 10 workers using 16089 MB)
@  2253s  (total 10 workers using 16037 MB)
@  2264s  (total 10 workers using 16255 MB)
@  2274s  (total 10 workers using 16253 MB)
@  2286s  (total 10 workers using 16309 MB)
@  2296s  (total 10 workers using 16383 MB)
@  2308s  (total 10 workers using 16413 MB)
@  2318s  (total 10 workers using 16526 MB)
@  2329s  (total 10 workers using 16532 MB)
@  2340s  (total 10 workers using 16647 MB)
@  2351s  (total 10 workers using 16675 MB)
@  2362s  (total 10 workers using 16621 MB)
@  2373s  (total 10 workers using 16894 MB)
@  2384s  (total 10 workers using 16848 MB)
@  2395s  (total 10 workers using 16949 MB)
@  2406s  (total 10 workers using 17016 MB)
@  2417s  (total 10 workers using 17064 MB)
@  2428s  (total 10 workers using 17194 MB)
@  2439s  (total 10 workers using 17264 MB)
@  2450s  (total 10 workers using 17294 MB)
@  2461s  (total 10 workers using 17327 MB)
@  2472s  (total 10 workers using 17440 MB)
@  2483s  (total 10 workers using 17341 MB)
@  2494s  (total 10 workers using 17328 MB)
@  2505s  (total 10 workers using 17503 MB)
@  2516s  (total 10 workers using 17586 MB)
@  2527s  (total 10 workers using 17625 MB)
@  2538s  (total 10 workers using 17632 MB)
@  2549s  (total 10 workers using 17693 MB)
@  2559s  (total 10 workers using 17767 MB)
@  2571s  (total 10 workers using 17719 MB)
@  2581s  (total 10 workers using 17857 MB)
@  2592s  (total 10 workers using 17795 MB)
@  2603s  (total 10 workers using 18032 MB)
@  2614s  (total 10 workers using 18064 MB)
@  2625s  (total 10 workers using 18106 MB)
@  2636s  (total 10 workers using 18278 MB)
@  2647s  (total 10 workers using 18245 MB)
@  2658s  (total 10 workers using 18321 MB)
@  2669s  (total 10 workers using 18320 MB)
@  2680s  (total 10 workers using 18357 MB)
@  2691s  (total 10 workers using 18464 MB)
@  2702s  (total 10 workers using 18651 MB)
@  2713s  (total 10 workers using 18744 MB)
@  2724s  (total 10 workers using 18875 MB)
@  2735s  (total 10 workers using 18947 MB)
@  2746s  (total 10 workers using 18950 MB)
@  2757s  (total 10 workers using 18891 MB)
@  2768s  (total 10 workers using 19006 MB)
@  2779s  (total 10 workers using 19097 MB)
@  2790s  (total 10 workers using 19254 MB)
@  2801s  (total 10 workers using 19295 MB)
@  2812s  (total 10 workers using 19385 MB)
@  2822s  (total 10 workers using 19480 MB)
@  2834s  (total 10 workers using 19411 MB)
@  2844s  (total 10 workers using 19474 MB)
@  2855s  (total 10 workers using 19685 MB)
@  2866s  (total 10 workers using 19642 MB)
@  2877s  (total 10 workers using 19764 MB)
@  2888s  (total 10 workers using 19747 MB)
@  2899s  (total 10 workers using 19814 MB)
@  2910s  (total 10 workers using 19828 MB)
@  2921s  (total 10 workers using 19837 MB)
@  2932s  (total 10 workers using 19952 MB)
@  2943s  (total 10 workers using 19683 MB)
@  2954s  (total 10 workers using 19893 MB)
@  2965s  (total 10 workers using 20163 MB)
@  2976s  (total 10 workers using 20116 MB)
@  2987s  (total 10 workers using 20344 MB)
@  2998s  (total 10 workers using 20332 MB)
@  3009s  (total 10 workers using 20500 MB)
@  3020s  (total 10 workers using 20590 MB)
@  3031s  (total 10 workers using 20437 MB)
@  3042s  (total 10 workers using 20564 MB)
@  3053s  (total 10 workers using 20570 MB)
@  3064s  (total 10 workers using 20543 MB)
@  3075s  (total 10 workers using 20664 MB)
@  3085s  (total 10 workers using 20625 MB)
@  3097s  (total 10 workers using 20871 MB)
@  3107s  (total 10 workers using 20898 MB)
@  3118s  (total 10 workers using 20879 MB)
@  3129s  (total 10 workers using 20898 MB)
@  3140s  (total 10 workers using 20859 MB)
@  3151s  (total 10 workers using 21015 MB)
@  3162s  (total 10 workers using 20926 MB)
@  3173s  (total 10 workers using 21050 MB)
@  3184s  (total 10 workers using 21379 MB)
@  3195s  (total 10 workers using 21155 MB)
@  3206s  (total 10 workers using 21262 MB)
@  3217s  (total 10 workers using 21304 MB)
@  3228s  (total 10 workers using 21323 MB)
@  3238s  (total 10 workers using 21471 MB)
@  3249s  (total 10 workers using 21517 MB)
@  3260s  (total 10 workers using 21599 MB)
@  3271s  (total 10 workers using 21629 MB)
@  3282s  (total 10 workers using 21374 MB)
@  3293s  (total 10 workers using 21544 MB)
@  3304s  (total 10 workers using 21644 MB)
@  3315s  (total 10 workers using 21672 MB)
@  3326s  (total 10 workers using 21695 MB)
@  3337s  (total 10 workers using 21605 MB)
@  3348s  (total 10 workers using 21689 MB)
@  3359s  (total 10 workers using 21654 MB)
@  3369s  (total 10 workers using 21870 MB)
@  3380s  (total 10 workers using 21851 MB)
@  3391s  (total 10 workers using 21871 MB)
@  3402s  (total 10 workers using 21892 MB)
@  3413s  (total 10 workers using 21870 MB)
@  3424s  (total 10 workers using 22013 MB)
@  3435s  (total 10 workers using 22001 MB)
@  3446s  (total 10 workers using 22130 MB)
@  3457s  (total 10 workers using 21998 MB)
@  3468s  (total 10 workers using 22256 MB)
@  3479s  (total 10 workers using 22370 MB)
@  3490s  (total 10 workers using 22284 MB)
@  3501s  (total 10 workers using 22387 MB)
@  3512s  (total 10 workers using 22178 MB)
@  3522s  (total 10 workers using 22332 MB)
@  3533s  (total 10 workers using 22339 MB)
@  3544s  (total 10 workers using 22514 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (total 2 workers using 4722 MB)
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3565s  (total 1 workers using 4722 MB)
@  3575s  (stopping all workers)
@  3575s  (total 1 workers using 0 MB)
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.36 seconds)[m
unknown
c done
