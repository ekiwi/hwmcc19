c host: c3n20
c start: Fri Oct 18 22:25:50 CEST 2019
c arrayjobid: 17567257
c jobid: 17567675
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r2-p015.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567675.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 22909)
@     0s  (started worker 1 with pid 22910)
@     0s  (started worker 2 with pid 22911)
@     0s  (started worker 3 with pid 22912)
@     0s  (started worker 4 with pid 22913)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 23029)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 404 MB)
@     2s  (started worker 6 with pid 23085)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 638 MB)
@     3s  (started worker 7 with pid 23147)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 888 MB)
@     4s  (started worker 8 with pid 23215)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1082 MB)
@     5s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@     5s  (started worker 9 with pid 23308)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1161 MB)
@     6s  (started worker 10 with pid 23382)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 1302 MB)
@    15s  (total 10 workers using 2656 MB)
@    26s  (total 10 workers using 3969 MB)
@    38s  (total 10 workers using 5139 MB)
@    49s  (total 10 workers using 5885 MB)
@    60s  (total 10 workers using 6051 MB)
@    72s  (total 10 workers using 7054 MB)
@    82s  (total 10 workers using 7438 MB)
@    93s  (total 10 workers using 7839 MB)
@   104s  (total 10 workers using 9166 MB)
@   115s  (total 10 workers using 9684 MB)
@   126s  (total 10 workers using 10250 MB)
@   137s  (total 10 workers using 9839 MB)
@   148s  (total 10 workers using 10756 MB)
@   159s  (total 10 workers using 11692 MB)
@   170s  (total 10 workers using 11771 MB)
@   181s  (total 10 workers using 11478 MB)
@   192s  (total 10 workers using 11760 MB)
@   203s  (total 10 workers using 11854 MB)
@   214s  (total 10 workers using 12817 MB)
@   225s  (total 10 workers using 13682 MB)
@   236s  (total 10 workers using 13747 MB)
@   247s  (total 10 workers using 14054 MB)
@   258s  (total 10 workers using 13630 MB)
@   269s  (total 10 workers using 15192 MB)
@   280s  (total 10 workers using 15457 MB)
@   291s  (total 10 workers using 15484 MB)
@   302s  (total 10 workers using 16333 MB)
@   313s  (total 10 workers using 16587 MB)
@   324s  (total 10 workers using 17670 MB)
@   335s  (total 10 workers using 17499 MB)
@   345s  (total 10 workers using 18134 MB)
@   356s  (total 10 workers using 16817 MB)
@   367s  (total 10 workers using 18266 MB)
@   378s  (total 10 workers using 18624 MB)
@   389s  (total 10 workers using 18685 MB)
@   400s  (total 10 workers using 18923 MB)
@   411s  (total 10 workers using 18033 MB)
@   422s  (total 10 workers using 19682 MB)
@   433s  (total 10 workers using 18934 MB)
@   444s  (total 10 workers using 20083 MB)
@   455s  (total 10 workers using 18831 MB)
@   466s  (total 10 workers using 19961 MB)
@   477s  (total 10 workers using 20481 MB)
@   488s  (total 10 workers using 21247 MB)
@   499s  (total 10 workers using 21186 MB)
@   510s  (total 10 workers using 21892 MB)
@   521s  (total 10 workers using 20477 MB)
@   532s  (total 10 workers using 20725 MB)
@   543s  (total 10 workers using 21392 MB)
@   554s  (total 10 workers using 20906 MB)
@   565s  (total 10 workers using 22927 MB)
@   576s  (total 10 workers using 22614 MB)
@   587s  (total 10 workers using 21481 MB)
@   598s  (total 10 workers using 23372 MB)
@   608s  (total 10 workers using 21773 MB)
@   620s  (total 10 workers using 23358 MB)
@   630s  (total 10 workers using 24078 MB)
@   642s  (total 10 workers using 22587 MB)
@   652s  (total 10 workers using 23516 MB)
@   663s  (total 10 workers using 24649 MB)
@   674s  (total 10 workers using 24695 MB)
@   685s  (total 10 workers using 22747 MB)
@   696s  (total 10 workers using 23325 MB)
@   707s  (total 10 workers using 23907 MB)
@   718s  (total 10 workers using 24043 MB)
@   729s  (total 10 workers using 24546 MB)
@   740s  (total 10 workers using 24551 MB)
@   751s  (total 10 workers using 24681 MB)
@   762s  (total 10 workers using 26595 MB)
@   773s  (total 10 workers using 26494 MB)
@   784s  (total 10 workers using 25944 MB)
@   795s  (total 10 workers using 25710 MB)
@   806s  (total 10 workers using 28085 MB)
@   817s  (total 10 workers using 27724 MB)
@   828s  (total 10 workers using 26821 MB)
@   839s  (total 10 workers using 28853 MB)
@   850s  (total 10 workers using 27759 MB)
@   861s  (total 10 workers using 27028 MB)
@   872s  (total 10 workers using 28422 MB)
@   883s  (total 10 workers using 27726 MB)
@   894s  (total 10 workers using 29035 MB)
@   905s  (total 10 workers using 27386 MB)
@   916s  (total 10 workers using 29391 MB)
@   927s  (total 10 workers using 27223 MB)
@   938s  (total 10 workers using 28398 MB)
@   949s  (total 10 workers using 30463 MB)
@   960s  (total 10 workers using 27838 MB)
@   971s  (total 10 workers using 28888 MB)
@   982s  (total 10 workers using 29832 MB)
@   993s  (total 10 workers using 30672 MB)
@  1004s  (total 10 workers using 30660 MB)
@  1015s  (total 10 workers using 32274 MB)
@  1026s  (total 10 workers using 32721 MB)
@  1037s  (total 10 workers using 33368 MB)
@  1048s  (total 10 workers using 34104 MB)
@  1059s  (total 10 workers using 31177 MB)
@  1070s  (total 10 workers using 31685 MB)
@  1081s  (total 10 workers using 31914 MB)
@  1092s  (total 10 workers using 32109 MB)
@  1103s  (total 10 workers using 32954 MB)
@  1114s  (total 10 workers using 32451 MB)
@  1125s  (total 10 workers using 33365 MB)
@  1136s  (total 10 workers using 32274 MB)
@  1147s  (total 10 workers using 32465 MB)
@  1158s  (total 10 workers using 32845 MB)
@  1169s  (total 10 workers using 32178 MB)
@  1180s  (total 10 workers using 35151 MB)
@  1191s  (total 10 workers using 35991 MB)
@  1202s  (total 10 workers using 34629 MB)
@  1213s  (total 10 workers using 34111 MB)
@  1224s  (total 10 workers using 33166 MB)
@  1235s  (total 10 workers using 33480 MB)
@  1246s  (total 10 workers using 36068 MB)
@  1257s  (total 10 workers using 35449 MB)
@  1268s  (total 10 workers using 35983 MB)
@  1279s  (total 10 workers using 34678 MB)
@  1290s  (total 10 workers using 36369 MB)
@  1301s  (total 10 workers using 35782 MB)
@  1312s  (total 10 workers using 34535 MB)
@  1323s  (total 10 workers using 34159 MB)
@  1334s  (total 10 workers using 36533 MB)
@  1345s  (total 10 workers using 35083 MB)
@  1356s  (total 10 workers using 37963 MB)
@  1367s  (total 10 workers using 36690 MB)
@  1378s  (total 10 workers using 34628 MB)
@  1389s  (total 10 workers using 37267 MB)
@  1400s  (total 10 workers using 36318 MB)
@  1411s  (total 10 workers using 38141 MB)
@  1422s  (total 10 workers using 35878 MB)
@  1433s  (total 10 workers using 38733 MB)
@  1444s  (total 10 workers using 36315 MB)
@  1455s  (total 10 workers using 39055 MB)
@  1466s  (total 10 workers using 36688 MB)
@  1477s  (total 10 workers using 38676 MB)
@  1488s  (total 10 workers using 35963 MB)
@  1499s  (total 10 workers using 38878 MB)
@  1510s  (total 10 workers using 39339 MB)
@  1521s  (total 10 workers using 37589 MB)
@  1532s  (total 10 workers using 40212 MB)
@  1543s  (total 10 workers using 37023 MB)
@  1553s  (total 10 workers using 38480 MB)
@  1565s  (total 10 workers using 40373 MB)
@  1575s  (total 10 workers using 37165 MB)
@  1586s  (total 10 workers using 39031 MB)
@  1597s  (total 10 workers using 40212 MB)
@  1608s  (total 10 workers using 41090 MB)
@  1619s  (total 10 workers using 37690 MB)
@  1630s  (total 10 workers using 40230 MB)
@  1641s  (total 10 workers using 40886 MB)
@  1652s  (total 10 workers using 38066 MB)
@  1663s  (total 10 workers using 39004 MB)
@  1674s  (total 10 workers using 40443 MB)
@  1685s  (total 10 workers using 42287 MB)
@  1696s  (total 10 workers using 38178 MB)
@  1707s  (total 10 workers using 40071 MB)
@  1718s  (total 10 workers using 40756 MB)
@  1729s  (total 10 workers using 41181 MB)
@  1740s  (total 10 workers using 42703 MB)
@  1751s  (total 10 workers using 42005 MB)
@  1762s  (total 10 workers using 39208 MB)
@  1773s  (total 10 workers using 40084 MB)
@  1784s  (total 10 workers using 41035 MB)
@  1795s  (total 10 workers using 40881 MB)
@  1806s  (total 10 workers using 41651 MB)
@  1817s  (total 10 workers using 43183 MB)
@  1828s  (total 10 workers using 42990 MB)
@  1839s  (total 10 workers using 43434 MB)
@  1850s  (total 10 workers using 43964 MB)
@  1861s  (total 10 workers using 41179 MB)
@  1872s  (total 10 workers using 41372 MB)
@  1883s  (total 10 workers using 42569 MB)
@  1894s  (total 10 workers using 43623 MB)
@  1905s  (total 10 workers using 43628 MB)
@  1916s  (total 10 workers using 44166 MB)
@  1927s  (total 10 workers using 44273 MB)
@  1938s  (total 10 workers using 44068 MB)
@  1949s  (total 10 workers using 41602 MB)
@  1960s  (total 10 workers using 41109 MB)
@  1970s  (total 10 workers using 41658 MB)
@  1981s  (total 10 workers using 29288 MB)
@  1985s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  1992s  (total 9 workers using 18883 MB)
@  2003s  (total 9 workers using 18922 MB)
@  2014s  (total 9 workers using 19323 MB)
@  2025s  (total 9 workers using 19044 MB)
@  2035s  (total 9 workers using 19747 MB)
@  2046s  (total 9 workers using 19169 MB)
@  2057s  (total 9 workers using 19274 MB)
@  2068s  (total 9 workers using 19610 MB)
@  2079s  (total 9 workers using 19815 MB)
@  2090s  (total 9 workers using 19117 MB)
@  2100s  (total 9 workers using 20382 MB)
@  2111s  (total 9 workers using 19503 MB)
@  2122s  (total 9 workers using 19809 MB)
@  2133s  (total 9 workers using 19533 MB)
@  2144s  (total 9 workers using 20381 MB)
@  2155s  (total 9 workers using 19494 MB)
@  2165s  (total 9 workers using 20247 MB)
@  2176s  (total 9 workers using 19535 MB)
@  2187s  (total 9 workers using 20310 MB)
@  2198s  (total 9 workers using 20037 MB)
@  2208s  (total 9 workers using 19739 MB)
@  2219s  (total 9 workers using 20362 MB)
@  2230s  (total 9 workers using 20519 MB)
@  2241s  (total 9 workers using 19897 MB)
@  2252s  (total 9 workers using 21369 MB)
@  2263s  (total 9 workers using 20513 MB)
@  2273s  (total 9 workers using 19846 MB)
@  2284s  (total 9 workers using 20096 MB)
@  2295s  (total 9 workers using 20005 MB)
@  2306s  (total 9 workers using 20888 MB)
@  2317s  (total 9 workers using 20040 MB)
@  2328s  (total 9 workers using 20223 MB)
@  2338s  (total 9 workers using 21573 MB)
@  2349s  (total 9 workers using 20449 MB)
@  2360s  (total 9 workers using 20854 MB)
@  2371s  (total 9 workers using 20581 MB)
@  2381s  (total 9 workers using 20758 MB)
@  2392s  (total 9 workers using 20665 MB)
@  2403s  (total 9 workers using 20701 MB)
@  2414s  (total 9 workers using 21383 MB)
@  2425s  (total 9 workers using 20770 MB)
@  2436s  (total 9 workers using 21918 MB)
@  2446s  (total 9 workers using 20975 MB)
@  2457s  (total 9 workers using 20798 MB)
@  2468s  (total 9 workers using 20965 MB)
@  2479s  (total 9 workers using 21235 MB)
@  2490s  (total 9 workers using 21993 MB)
@  2501s  (total 9 workers using 20996 MB)
@  2511s  (total 9 workers using 21871 MB)
@  2522s  (total 9 workers using 21012 MB)
@  2533s  (total 9 workers using 21020 MB)
@  2544s  (total 9 workers using 21792 MB)
@  2554s  (total 9 workers using 21070 MB)
@  2565s  (total 9 workers using 22682 MB)
@  2576s  (total 9 workers using 21121 MB)
@  2587s  (total 9 workers using 21928 MB)
@  2598s  (total 9 workers using 21160 MB)
@  2609s  (total 9 workers using 21645 MB)
@  2619s  (total 9 workers using 21280 MB)
@  2630s  (total 9 workers using 22212 MB)
@  2641s  (total 9 workers using 21394 MB)
@  2652s  (total 9 workers using 21316 MB)
@  2663s  (total 9 workers using 21334 MB)
@  2674s  (total 9 workers using 21887 MB)
@  2684s  (total 9 workers using 22101 MB)
@  2695s  (total 9 workers using 21627 MB)
@  2706s  (total 9 workers using 21515 MB)
@  2717s  (total 9 workers using 21549 MB)
@  2728s  (total 9 workers using 22057 MB)
@  2738s  (total 9 workers using 22056 MB)
@  2749s  (total 9 workers using 22727 MB)
@  2760s  (total 9 workers using 22027 MB)
@  2771s  (total 9 workers using 22345 MB)
@  2782s  (total 9 workers using 22610 MB)
@  2792s  (total 9 workers using 22249 MB)
@  2803s  (total 9 workers using 22885 MB)
@  2814s  (total 9 workers using 22884 MB)
@  2825s  (total 9 workers using 22665 MB)
@  2836s  (total 9 workers using 22547 MB)
@  2847s  (total 9 workers using 23194 MB)
@  2857s  (total 9 workers using 22489 MB)
@  2868s  (total 9 workers using 23877 MB)
@  2879s  (total 9 workers using 22805 MB)
@  2890s  (total 9 workers using 23003 MB)
@  2900s  (total 9 workers using 22703 MB)
@  2911s  (total 9 workers using 23718 MB)
@  2922s  (total 9 workers using 22793 MB)
@  2933s  (total 9 workers using 23022 MB)
@  2944s  (total 9 workers using 22703 MB)
@  2955s  (total 9 workers using 22706 MB)
@  2965s  (total 9 workers using 23487 MB)
@  2976s  (total 9 workers using 22747 MB)
@  2987s  (total 9 workers using 23289 MB)
@  2998s  (total 9 workers using 22816 MB)
@  3009s  (total 9 workers using 23617 MB)
@  3020s  (total 9 workers using 22848 MB)
@  3030s  (total 9 workers using 23837 MB)
@  3041s  (total 9 workers using 22945 MB)
@  3052s  (total 9 workers using 23290 MB)
@  3063s  (total 9 workers using 22943 MB)
@  3073s  (total 9 workers using 22946 MB)
@  3084s  (total 9 workers using 23695 MB)
@  3095s  (total 9 workers using 22649 MB)
@  3106s  (total 9 workers using 23911 MB)
@  3117s  (total 9 workers using 23182 MB)
@  3128s  (total 9 workers using 23620 MB)
@  3138s  (total 9 workers using 23450 MB)
@  3149s  (total 9 workers using 23210 MB)
@  3160s  (total 9 workers using 23277 MB)
@  3171s  (total 9 workers using 24443 MB)
@  3182s  (total 9 workers using 23308 MB)
@  3193s  (total 9 workers using 23311 MB)
@  3203s  (total 9 workers using 24481 MB)
@  3214s  (total 9 workers using 24047 MB)
@  3225s  (total 9 workers using 24103 MB)
@  3236s  (total 9 workers using 23513 MB)
@  3246s  (total 9 workers using 24316 MB)
@  3257s  (total 9 workers using 23566 MB)
@  3268s  (total 9 workers using 24665 MB)
@  3279s  (total 9 workers using 23677 MB)
@  3290s  (total 9 workers using 24242 MB)
@  3301s  (total 9 workers using 23556 MB)
@  3311s  (total 9 workers using 24890 MB)
@  3322s  (total 9 workers using 23716 MB)
@  3333s  (total 9 workers using 24035 MB)
@  3344s  (total 9 workers using 25176 MB)
@  3355s  (total 9 workers using 24483 MB)
@  3366s  (total 9 workers using 25664 MB)
@  3376s  (total 9 workers using 24067 MB)
@  3387s  (total 9 workers using 24511 MB)
@  3398s  (total 9 workers using 24539 MB)
@  3409s  (total 9 workers using 24840 MB)
@  3419s  (total 9 workers using 25211 MB)
@  3430s  (total 9 workers using 24488 MB)
@  3441s  (total 9 workers using 24639 MB)
@  3452s  (total 9 workers using 25150 MB)
@  3463s  (total 9 workers using 24845 MB)
@  3474s  (total 9 workers using 24851 MB)
@  3484s  (total 9 workers using 26114 MB)
@  3495s  (total 9 workers using 24963 MB)
@  3506s  (total 9 workers using 25437 MB)
@  3517s  (total 9 workers using 24869 MB)
@  3528s  (total 9 workers using 25665 MB)
@  3538s  (total 9 workers using 24872 MB)
@  3549s  (total 9 workers using 25739 MB)
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3557s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3560s  (total 4 workers using 11661 MB)
@  3570s  (total 4 workers using 11661 MB)
@  3572s  (stopping all workers)
@  3572s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3572s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3572s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3572s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3573s  (copied results from worker 0 in /tmp//pr_test)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3572.59 seconds)[m
unknown
c done
