c host: c3n24
c start: Fri Oct 18 22:01:31 CEST 2019
c arrayjobid: 17567257
c jobid: 17567668
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck2_r0-p132.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567668.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 8613)
@     0s  (started worker 1 with pid 8614)
@     0s  (started worker 2 with pid 8615)
@     0s  (started worker 3 with pid 8616)
@     0s  (started worker 4 with pid 8617)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 8733)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 470 MB)
@     2s  (started worker 6 with pid 8789)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 760 MB)
@     3s  (started worker 7 with pid 8851)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 1034 MB)
@     4s  (started worker 8 with pid 8919)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1254 MB)
@     5s  (started worker 9 with pid 9011)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1541 MB)
@     7s  (started worker 10 with pid 9091)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1768 MB)
@    15s  (total 11 workers using 2833 MB)
@    27s  (total 11 workers using 3595 MB)
@    39s  (total 11 workers using 4273 MB)
@    50s  (total 11 workers using 4898 MB)
@    58s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@    61s  (total 10 workers using 4983 MB)
@    72s  (total 10 workers using 5365 MB)
@    83s  (total 10 workers using 5736 MB)
@    94s  (total 10 workers using 6246 MB)
@   105s  (total 10 workers using 6367 MB)
@   116s  (total 10 workers using 6867 MB)
@   127s  (total 10 workers using 7098 MB)
@   138s  (total 10 workers using 7440 MB)
@   149s  (total 10 workers using 7398 MB)
@   160s  (total 10 workers using 7697 MB)
@   171s  (total 10 workers using 7863 MB)
@   182s  (total 10 workers using 8168 MB)
@   193s  (total 10 workers using 8649 MB)
@   204s  (total 10 workers using 8825 MB)
@   215s  (total 10 workers using 9275 MB)
@   226s  (total 10 workers using 9189 MB)
@   236s  (total 10 workers using 9359 MB)
@   248s  (total 10 workers using 9584 MB)
@   258s  (total 10 workers using 9724 MB)
@   269s  (total 10 workers using 10006 MB)
@   280s  (total 10 workers using 10319 MB)
@   291s  (total 10 workers using 10681 MB)
@   302s  (total 10 workers using 10968 MB)
@   313s  (total 10 workers using 11088 MB)
@   324s  (total 10 workers using 11322 MB)
@   335s  (total 10 workers using 11699 MB)
@   346s  (total 10 workers using 11772 MB)
@   357s  (total 10 workers using 12102 MB)
@   368s  (total 10 workers using 12295 MB)
@   379s  (total 10 workers using 12303 MB)
@   390s  (total 10 workers using 12621 MB)
@   401s  (total 10 workers using 12842 MB)
@   412s  (total 10 workers using 13364 MB)
@   423s  (total 10 workers using 13303 MB)
@   434s  (total 10 workers using 13634 MB)
@   445s  (total 10 workers using 13865 MB)
@   456s  (total 10 workers using 13812 MB)
@   467s  (total 10 workers using 14039 MB)
@   478s  (total 10 workers using 14000 MB)
@   489s  (total 10 workers using 14286 MB)
@   500s  (total 10 workers using 14268 MB)
@   511s  (total 10 workers using 14598 MB)
@   521s  (total 10 workers using 14792 MB)
@   533s  (total 10 workers using 14898 MB)
@   543s  (total 10 workers using 15119 MB)
@   554s  (total 10 workers using 15284 MB)
@   565s  (total 10 workers using 15237 MB)
@   576s  (total 10 workers using 15281 MB)
@   587s  (total 10 workers using 15529 MB)
@   598s  (total 10 workers using 15519 MB)
@   609s  (total 10 workers using 15690 MB)
@   620s  (total 10 workers using 15841 MB)
@   631s  (total 10 workers using 15991 MB)
@   642s  (total 10 workers using 15973 MB)
@   653s  (total 10 workers using 16109 MB)
@   664s  (total 10 workers using 16250 MB)
@   675s  (total 10 workers using 16281 MB)
@   686s  (total 10 workers using 16784 MB)
@   697s  (total 10 workers using 16969 MB)
@   708s  (total 10 workers using 16998 MB)
@   719s  (total 10 workers using 16910 MB)
@   730s  (total 10 workers using 17046 MB)
@   741s  (total 10 workers using 16945 MB)
@   752s  (total 10 workers using 17149 MB)
@   763s  (total 10 workers using 17180 MB)
@   774s  (total 10 workers using 17355 MB)
@   784s  (total 10 workers using 17551 MB)
@   795s  (total 10 workers using 17790 MB)
@   806s  (total 10 workers using 17635 MB)
@   817s  (total 10 workers using 17780 MB)
@   828s  (total 10 workers using 18119 MB)
@   839s  (total 10 workers using 18277 MB)
@   850s  (total 10 workers using 18138 MB)
@   861s  (total 10 workers using 18144 MB)
@   872s  (total 10 workers using 18373 MB)
@   883s  (total 10 workers using 18627 MB)
@   894s  (total 10 workers using 18585 MB)
@   905s  (total 10 workers using 18780 MB)
@   916s  (total 10 workers using 18877 MB)
@   927s  (total 10 workers using 19260 MB)
@   937s  (total 10 workers using 19186 MB)
@   949s  (total 10 workers using 19238 MB)
@   959s  (total 10 workers using 19532 MB)
@   971s  (total 10 workers using 19714 MB)
@   981s  (total 10 workers using 19464 MB)
@   992s  (total 10 workers using 19702 MB)
@  1003s  (total 10 workers using 19716 MB)
@  1014s  (total 10 workers using 20010 MB)
@  1025s  (total 10 workers using 20090 MB)
@  1036s  (total 10 workers using 19930 MB)
@  1047s  (total 10 workers using 20407 MB)
@  1058s  (total 10 workers using 20335 MB)
@  1069s  (total 10 workers using 20055 MB)
@  1080s  (total 10 workers using 20250 MB)
@  1091s  (total 10 workers using 20720 MB)
@  1102s  (total 10 workers using 20530 MB)
@  1113s  (total 10 workers using 21099 MB)
@  1124s  (total 10 workers using 20925 MB)
@  1135s  (total 10 workers using 21207 MB)
@  1146s  (total 10 workers using 20922 MB)
@  1157s  (total 10 workers using 21102 MB)
@  1168s  (total 10 workers using 21304 MB)
@  1178s  (total 10 workers using 21186 MB)
@  1189s  (total 10 workers using 21562 MB)
@  1200s  (total 10 workers using 22085 MB)
@  1211s  (total 10 workers using 21514 MB)
@  1222s  (total 10 workers using 22090 MB)
@  1233s  (total 10 workers using 22598 MB)
@  1244s  (total 10 workers using 22414 MB)
@  1255s  (total 10 workers using 22216 MB)
@  1266s  (total 10 workers using 22658 MB)
@  1277s  (total 10 workers using 22372 MB)
@  1288s  (total 10 workers using 22620 MB)
@  1299s  (total 10 workers using 22761 MB)
@  1310s  (total 10 workers using 22813 MB)
@  1321s  (total 10 workers using 22918 MB)
@  1332s  (total 10 workers using 23315 MB)
@  1343s  (total 10 workers using 23068 MB)
@  1354s  (total 10 workers using 23469 MB)
@  1365s  (total 10 workers using 23319 MB)
@  1375s  (total 10 workers using 23706 MB)
@  1386s  (total 10 workers using 24224 MB)
@  1397s  (total 10 workers using 24159 MB)
@  1408s  (total 10 workers using 24282 MB)
@  1419s  (total 10 workers using 24738 MB)
@  1430s  (total 10 workers using 24551 MB)
@  1441s  (total 10 workers using 24790 MB)
@  1452s  (total 10 workers using 25273 MB)
@  1463s  (total 10 workers using 24862 MB)
@  1474s  (total 10 workers using 24914 MB)
@  1485s  (total 10 workers using 25336 MB)
@  1496s  (total 10 workers using 25143 MB)
@  1507s  (total 10 workers using 25385 MB)
@  1518s  (total 10 workers using 25021 MB)
@  1529s  (total 10 workers using 25803 MB)
@  1540s  (total 10 workers using 25807 MB)
@  1551s  (total 10 workers using 25961 MB)
@  1562s  (total 10 workers using 26031 MB)
@  1573s  (total 10 workers using 25753 MB)
@  1584s  (total 10 workers using 26293 MB)
@  1594s  (total 10 workers using 25666 MB)
@  1606s  (total 10 workers using 26479 MB)
@  1616s  (total 10 workers using 26489 MB)
@  1628s  (total 10 workers using 26555 MB)
@  1638s  (total 10 workers using 26776 MB)
@  1649s  (total 10 workers using 26658 MB)
@  1660s  (total 10 workers using 27088 MB)
@  1671s  (total 10 workers using 26926 MB)
@  1682s  (total 10 workers using 27186 MB)
@  1693s  (total 10 workers using 27354 MB)
@  1704s  (total 10 workers using 27211 MB)
@  1715s  (total 10 workers using 27924 MB)
@  1726s  (total 10 workers using 27816 MB)
@  1737s  (total 10 workers using 27882 MB)
@  1748s  (total 10 workers using 28222 MB)
@  1759s  (total 10 workers using 27918 MB)
@  1770s  (total 10 workers using 28591 MB)
@  1781s  (total 10 workers using 27754 MB)
@  1792s  (total 10 workers using 28830 MB)
@  1803s  (total 10 workers using 28335 MB)
@  1814s  (total 10 workers using 28771 MB)
@  1825s  (total 10 workers using 29118 MB)
@  1836s  (total 10 workers using 28558 MB)
@  1847s  (total 10 workers using 29544 MB)
@  1858s  (total 10 workers using 29088 MB)
@  1869s  (total 10 workers using 29882 MB)
@  1879s  (total 10 workers using 29379 MB)
@  1891s  (total 10 workers using 30050 MB)
@  1901s  (total 10 workers using 29377 MB)
@  1912s  (total 10 workers using 29705 MB)
@  1923s  (total 10 workers using 30422 MB)
@  1934s  (total 10 workers using 29765 MB)
@  1945s  (total 10 workers using 30827 MB)
@  1956s  (total 10 workers using 30242 MB)
@  1967s  (total 10 workers using 30756 MB)
@  1978s  (total 10 workers using 30641 MB)
@  1989s  (total 10 workers using 30618 MB)
@  2000s  (total 10 workers using 31086 MB)
@  2011s  (total 10 workers using 30870 MB)
@  2022s  (total 10 workers using 31149 MB)
@  2033s  (total 10 workers using 31371 MB)
@  2044s  (total 10 workers using 31748 MB)
@  2055s  (total 10 workers using 31523 MB)
@  2066s  (total 10 workers using 31985 MB)
@  2076s  (total 10 workers using 31825 MB)
@  2087s  (total 10 workers using 31904 MB)
@  2098s  (total 10 workers using 32108 MB)
@  2109s  (total 10 workers using 31734 MB)
@  2120s  (total 10 workers using 32788 MB)
@  2131s  (total 10 workers using 32202 MB)
@  2142s  (total 10 workers using 32629 MB)
@  2153s  (total 10 workers using 31735 MB)
@  2164s  (total 10 workers using 32759 MB)
@  2175s  (total 10 workers using 32137 MB)
@  2186s  (total 10 workers using 32995 MB)
@  2197s  (total 10 workers using 32450 MB)
@  2208s  (total 10 workers using 32780 MB)
@  2219s  (total 10 workers using 32808 MB)
@  2230s  (total 10 workers using 32917 MB)
@  2241s  (total 10 workers using 32989 MB)
@  2252s  (total 10 workers using 33034 MB)
@  2263s  (total 10 workers using 33435 MB)
@  2273s  (total 10 workers using 33599 MB)
@  2284s  (total 10 workers using 33686 MB)
@  2295s  (total 10 workers using 33278 MB)
@  2306s  (total 10 workers using 33993 MB)
@  2317s  (total 10 workers using 33541 MB)
@  2328s  (total 10 workers using 34487 MB)
@  2339s  (total 10 workers using 34063 MB)
@  2350s  (total 10 workers using 34103 MB)
@  2361s  (total 10 workers using 33744 MB)
@  2372s  (total 10 workers using 34192 MB)
@  2383s  (total 10 workers using 33923 MB)
@  2394s  (total 10 workers using 34576 MB)
@  2405s  (total 10 workers using 34786 MB)
@  2416s  (total 10 workers using 34564 MB)
@  2427s  (total 10 workers using 34914 MB)
@  2438s  (total 10 workers using 34726 MB)
@  2448s  (total 10 workers using 35157 MB)
@  2460s  (total 10 workers using 35071 MB)
@  2470s  (total 10 workers using 35169 MB)
@  2481s  (total 10 workers using 35576 MB)
@  2492s  (total 10 workers using 35496 MB)
@  2503s  (total 10 workers using 35469 MB)
@  2514s  (total 10 workers using 36309 MB)
@  2525s  (total 10 workers using 35839 MB)
@  2536s  (total 10 workers using 36134 MB)
@  2547s  (total 10 workers using 35457 MB)
@  2558s  (total 10 workers using 36505 MB)
@  2569s  (total 10 workers using 35977 MB)
@  2580s  (total 10 workers using 36678 MB)
@  2591s  (total 10 workers using 35667 MB)
@  2602s  (total 10 workers using 36398 MB)
@  2613s  (total 10 workers using 36161 MB)
@  2624s  (total 10 workers using 37220 MB)
@  2635s  (total 10 workers using 36631 MB)
@  2646s  (total 10 workers using 37356 MB)
@  2657s  (total 10 workers using 36883 MB)
@  2667s  (total 10 workers using 37691 MB)
@  2678s  (total 10 workers using 37056 MB)
@  2689s  (total 10 workers using 37387 MB)
@  2700s  (total 10 workers using 37430 MB)
@  2711s  (total 10 workers using 37992 MB)
@  2722s  (total 10 workers using 37245 MB)
@  2733s  (total 10 workers using 37718 MB)
@  2744s  (total 10 workers using 37578 MB)
@  2755s  (total 10 workers using 38347 MB)
@  2766s  (total 10 workers using 37231 MB)
@  2777s  (total 10 workers using 38181 MB)
@  2788s  (total 10 workers using 37645 MB)
@  2799s  (total 10 workers using 38055 MB)
@  2810s  (total 10 workers using 37861 MB)
@  2821s  (total 10 workers using 38472 MB)
@  2832s  (total 10 workers using 37328 MB)
@  2842s  (total 10 workers using 39211 MB)
@  2854s  (total 10 workers using 38391 MB)
@  2864s  (total 10 workers using 39044 MB)
@  2875s  (total 10 workers using 38760 MB)
@  2886s  (total 10 workers using 39400 MB)
@  2897s  (total 10 workers using 39243 MB)
@  2908s  (total 10 workers using 40232 MB)
@  2919s  (total 10 workers using 39359 MB)
@  2930s  (total 10 workers using 40022 MB)
@  2941s  (total 10 workers using 38783 MB)
@  2952s  (total 10 workers using 39994 MB)
@  2963s  (total 10 workers using 39720 MB)
@  2974s  (total 10 workers using 40272 MB)
@  2985s  (total 10 workers using 39416 MB)
@  2996s  (total 10 workers using 40247 MB)
@  3007s  (total 10 workers using 40051 MB)
@  3017s  (total 10 workers using 40093 MB)
@  3029s  (total 10 workers using 39917 MB)
@  3039s  (total 10 workers using 40514 MB)
@  3050s  (total 10 workers using 39742 MB)
@  3061s  (total 10 workers using 41004 MB)
@  3072s  (total 10 workers using 39738 MB)
@  3083s  (total 10 workers using 40847 MB)
@  3094s  (total 10 workers using 39999 MB)
@  3105s  (total 10 workers using 40704 MB)
@  3116s  (total 10 workers using 40494 MB)
@  3127s  (total 10 workers using 41101 MB)
@  3138s  (total 10 workers using 39932 MB)
@  3149s  (total 10 workers using 41106 MB)
@  3160s  (total 10 workers using 40527 MB)
@  3171s  (total 10 workers using 40519 MB)
@  3182s  (total 10 workers using 41061 MB)
@  3193s  (total 10 workers using 40908 MB)
@  3204s  (total 10 workers using 41301 MB)
@  3214s  (total 10 workers using 40926 MB)
@  3226s  (total 10 workers using 41554 MB)
@  3236s  (total 10 workers using 40766 MB)
@  3247s  (total 10 workers using 41780 MB)
@  3258s  (total 10 workers using 40787 MB)
@  3269s  (total 10 workers using 41741 MB)
@  3280s  (total 10 workers using 41538 MB)
@  3291s  (total 10 workers using 41760 MB)
@  3302s  (total 10 workers using 41640 MB)
@  3313s  (total 10 workers using 42187 MB)
@  3324s  (total 10 workers using 41391 MB)
@  3335s  (total 10 workers using 41838 MB)
@  3346s  (total 10 workers using 41082 MB)
@  3357s  (total 10 workers using 41630 MB)
@  3368s  (total 10 workers using 41646 MB)
@  3379s  (total 10 workers using 41732 MB)
@  3389s  (total 10 workers using 42236 MB)
@  3401s  (total 10 workers using 42148 MB)
@  3411s  (total 10 workers using 42544 MB)
@  3422s  (total 10 workers using 42077 MB)
@  3433s  (total 10 workers using 43079 MB)
@  3444s  (total 10 workers using 41357 MB)
@  3455s  (total 10 workers using 42621 MB)
@  3466s  (total 10 workers using 42819 MB)
@  3477s  (total 10 workers using 42928 MB)
@  3488s  (total 10 workers using 42966 MB)
@  3499s  (total 10 workers using 43294 MB)
@  3510s  (total 10 workers using 42972 MB)
@  3521s  (total 10 workers using 43386 MB)
@  3532s  (total 10 workers using 43336 MB)
@  3543s  (total 10 workers using 43730 MB)
@  3554s  (total 10 workers using 41035 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3557s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3557s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3558s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3564s  (total 1 workers using 5664 MB)
@  3574s  (stopping all workers)
@  3574s  (total 1 workers using 0 MB)
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3574.37 seconds)[m
unknown
c done
