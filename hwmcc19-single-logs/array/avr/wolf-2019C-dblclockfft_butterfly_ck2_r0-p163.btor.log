c host: c3n26
c start: Fri Oct 18 21:45:42 CEST 2019
c arrayjobid: 17567257
c jobid: 17567643
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck2_r0-p163.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567643.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 32057)
@     0s  (started worker 1 with pid 32058)
@     0s  (started worker 2 with pid 32059)
@     0s  (started worker 3 with pid 32060)
@     0s  (started worker 4 with pid 32061)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 32177)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 434 MB)
@     2s  (started worker 6 with pid 32233)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 709 MB)
@     3s  (started worker 7 with pid 32295)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 981 MB)
@     4s  (started worker 8 with pid 32363)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1143 MB)
@     5s  (started worker 9 with pid 32455)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1378 MB)
@     7s  (started worker 10 with pid 32535)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1574 MB)
@    15s  (total 11 workers using 2486 MB)
@    27s  (total 11 workers using 3181 MB)
@    39s  (total 11 workers using 3655 MB)
@    50s  (total 11 workers using 4120 MB)
@    61s  (total 11 workers using 4636 MB)
@    73s  (total 11 workers using 4939 MB)
@    83s  (total 11 workers using 5257 MB)
@    95s  (total 11 workers using 5578 MB)
@   106s  (total 11 workers using 5876 MB)
@   117s  (total 11 workers using 6128 MB)
@   122s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   128s  (total 10 workers using 6017 MB)
@   139s  (total 10 workers using 6266 MB)
@   150s  (total 10 workers using 6496 MB)
@   161s  (total 10 workers using 6757 MB)
@   171s  (total 10 workers using 6880 MB)
@   182s  (total 10 workers using 7246 MB)
@   193s  (total 10 workers using 7427 MB)
@   204s  (total 10 workers using 7702 MB)
@   215s  (total 10 workers using 7996 MB)
@   226s  (total 10 workers using 8294 MB)
@   237s  (total 10 workers using 8598 MB)
@   248s  (total 10 workers using 8881 MB)
@   259s  (total 10 workers using 8987 MB)
@   270s  (total 10 workers using 9124 MB)
@   281s  (total 10 workers using 9185 MB)
@   292s  (total 10 workers using 9475 MB)
@   303s  (total 10 workers using 9752 MB)
@   314s  (total 10 workers using 9993 MB)
@   325s  (total 10 workers using 10097 MB)
@   336s  (total 10 workers using 10325 MB)
@   346s  (total 10 workers using 10489 MB)
@   358s  (total 10 workers using 10972 MB)
@   368s  (total 10 workers using 11076 MB)
@   379s  (total 10 workers using 11289 MB)
@   390s  (total 10 workers using 11417 MB)
@   401s  (total 10 workers using 11714 MB)
@   412s  (total 10 workers using 12039 MB)
@   423s  (total 10 workers using 12334 MB)
@   434s  (total 10 workers using 12517 MB)
@   445s  (total 10 workers using 12590 MB)
@   456s  (total 10 workers using 12729 MB)
@   467s  (total 10 workers using 12811 MB)
@   478s  (total 10 workers using 12773 MB)
@   489s  (total 10 workers using 13220 MB)
@   500s  (total 10 workers using 13427 MB)
@   511s  (total 10 workers using 13348 MB)
@   522s  (total 10 workers using 13475 MB)
@   533s  (total 10 workers using 13673 MB)
@   544s  (total 10 workers using 13680 MB)
@   555s  (total 10 workers using 14156 MB)
@   565s  (total 10 workers using 14440 MB)
@   577s  (total 10 workers using 14392 MB)
@   587s  (total 10 workers using 14608 MB)
@   599s  (total 10 workers using 14805 MB)
@   609s  (total 10 workers using 15229 MB)
@   620s  (total 10 workers using 14908 MB)
@   631s  (total 10 workers using 15282 MB)
@   642s  (total 10 workers using 15562 MB)
@   653s  (total 10 workers using 15753 MB)
@   664s  (total 10 workers using 15827 MB)
@   675s  (total 10 workers using 16004 MB)
@   686s  (total 10 workers using 16136 MB)
@   697s  (total 10 workers using 16033 MB)
@   708s  (total 10 workers using 16154 MB)
@   719s  (total 10 workers using 16348 MB)
@   730s  (total 10 workers using 16797 MB)
@   741s  (total 10 workers using 16887 MB)
@   752s  (total 10 workers using 16949 MB)
@   763s  (total 10 workers using 17210 MB)
@   774s  (total 10 workers using 17329 MB)
@   785s  (total 10 workers using 17394 MB)
@   796s  (total 10 workers using 17390 MB)
@   807s  (total 10 workers using 17710 MB)
@   818s  (total 10 workers using 17836 MB)
@   828s  (total 10 workers using 17843 MB)
@   840s  (total 10 workers using 17955 MB)
@   850s  (total 10 workers using 18346 MB)
@   862s  (total 10 workers using 18402 MB)
@   872s  (total 10 workers using 18197 MB)
@   883s  (total 10 workers using 18478 MB)
@   894s  (total 10 workers using 18710 MB)
@   905s  (total 10 workers using 18871 MB)
@   916s  (total 10 workers using 18706 MB)
@   927s  (total 10 workers using 19268 MB)
@   938s  (total 10 workers using 19200 MB)
@   949s  (total 10 workers using 19235 MB)
@   960s  (total 10 workers using 19549 MB)
@   971s  (total 10 workers using 19573 MB)
@   982s  (total 10 workers using 19505 MB)
@   993s  (total 10 workers using 19745 MB)
@  1004s  (total 10 workers using 19726 MB)
@  1015s  (total 10 workers using 19456 MB)
@  1026s  (total 10 workers using 20047 MB)
@  1037s  (total 10 workers using 20217 MB)
@  1048s  (total 10 workers using 20055 MB)
@  1059s  (total 10 workers using 19923 MB)
@  1069s  (total 10 workers using 20285 MB)
@  1081s  (total 10 workers using 20303 MB)
@  1091s  (total 10 workers using 20486 MB)
@  1102s  (total 10 workers using 20510 MB)
@  1113s  (total 10 workers using 20683 MB)
@  1124s  (total 10 workers using 20825 MB)
@  1135s  (total 10 workers using 21349 MB)
@  1146s  (total 10 workers using 21134 MB)
@  1157s  (total 10 workers using 21322 MB)
@  1168s  (total 10 workers using 21882 MB)
@  1179s  (total 10 workers using 21455 MB)
@  1190s  (total 10 workers using 21899 MB)
@  1201s  (total 10 workers using 21831 MB)
@  1212s  (total 10 workers using 22037 MB)
@  1223s  (total 10 workers using 22224 MB)
@  1234s  (total 10 workers using 22445 MB)
@  1245s  (total 10 workers using 22424 MB)
@  1256s  (total 10 workers using 22891 MB)
@  1267s  (total 10 workers using 22585 MB)
@  1278s  (total 10 workers using 22593 MB)
@  1289s  (total 10 workers using 23086 MB)
@  1300s  (total 10 workers using 23012 MB)
@  1311s  (total 10 workers using 22798 MB)
@  1322s  (total 10 workers using 23370 MB)
@  1332s  (total 10 workers using 23071 MB)
@  1343s  (total 10 workers using 23051 MB)
@  1354s  (total 10 workers using 23397 MB)
@  1365s  (total 10 workers using 23273 MB)
@  1376s  (total 10 workers using 23419 MB)
@  1387s  (total 10 workers using 24044 MB)
@  1398s  (total 10 workers using 23687 MB)
@  1409s  (total 10 workers using 23793 MB)
@  1420s  (total 10 workers using 24078 MB)
@  1431s  (total 10 workers using 23968 MB)
@  1442s  (total 10 workers using 24133 MB)
@  1453s  (total 10 workers using 23977 MB)
@  1463s  (total 10 workers using 24049 MB)
@  1474s  (total 10 workers using 24218 MB)
@  1485s  (total 10 workers using 24056 MB)
@  1496s  (total 10 workers using 24236 MB)
@  1507s  (total 10 workers using 24239 MB)
@  1518s  (total 10 workers using 24265 MB)
@  1529s  (total 10 workers using 24760 MB)
@  1540s  (total 10 workers using 24670 MB)
@  1551s  (total 10 workers using 24290 MB)
@  1562s  (total 10 workers using 24709 MB)
@  1573s  (total 10 workers using 24636 MB)
@  1584s  (total 10 workers using 24679 MB)
@  1595s  (total 10 workers using 24854 MB)
@  1606s  (total 10 workers using 24817 MB)
@  1616s  (total 10 workers using 25399 MB)
@  1627s  (total 10 workers using 25141 MB)
@  1638s  (total 10 workers using 25865 MB)
@  1649s  (total 10 workers using 25700 MB)
@  1660s  (total 10 workers using 25724 MB)
@  1671s  (total 10 workers using 26358 MB)
@  1682s  (total 10 workers using 25865 MB)
@  1693s  (total 10 workers using 26186 MB)
@  1704s  (total 10 workers using 26254 MB)
@  1715s  (total 10 workers using 26148 MB)
@  1726s  (total 10 workers using 26176 MB)
@  1737s  (total 10 workers using 26149 MB)
@  1747s  (total 10 workers using 26720 MB)
@  1759s  (total 10 workers using 26395 MB)
@  1769s  (total 10 workers using 26318 MB)
@  1780s  (total 10 workers using 26600 MB)
@  1791s  (total 10 workers using 26321 MB)
@  1802s  (total 10 workers using 26709 MB)
@  1813s  (total 10 workers using 26138 MB)
@  1824s  (total 10 workers using 26971 MB)
@  1835s  (total 10 workers using 26567 MB)
@  1846s  (total 10 workers using 26303 MB)
@  1857s  (total 10 workers using 27173 MB)
@  1868s  (total 10 workers using 26584 MB)
@  1879s  (total 10 workers using 27422 MB)
@  1890s  (total 10 workers using 26772 MB)
@  1900s  (total 10 workers using 27746 MB)
@  1911s  (total 10 workers using 26862 MB)
@  1922s  (total 10 workers using 27570 MB)
@  1933s  (total 10 workers using 27496 MB)
@  1944s  (total 10 workers using 27381 MB)
@  1955s  (total 10 workers using 28113 MB)
@  1966s  (total 10 workers using 27162 MB)
@  1977s  (total 10 workers using 28215 MB)
@  1988s  (total 10 workers using 27727 MB)
@  1999s  (total 10 workers using 28463 MB)
@  2010s  (total 10 workers using 28191 MB)
@  2021s  (total 10 workers using 28594 MB)
@  2031s  (total 10 workers using 28775 MB)
@  2043s  (total 10 workers using 28649 MB)
@  2053s  (total 10 workers using 28689 MB)
@  2064s  (total 10 workers using 28812 MB)
@  2075s  (total 10 workers using 29492 MB)
@  2086s  (total 10 workers using 28808 MB)
@  2097s  (total 10 workers using 29488 MB)
@  2108s  (total 10 workers using 28926 MB)
@  2119s  (total 10 workers using 29620 MB)
@  2130s  (total 10 workers using 29621 MB)
@  2141s  (total 10 workers using 29070 MB)
@  2152s  (total 10 workers using 29640 MB)
@  2163s  (total 10 workers using 29446 MB)
@  2174s  (total 10 workers using 29821 MB)
@  2184s  (total 10 workers using 29266 MB)
@  2195s  (total 10 workers using 29972 MB)
@  2206s  (total 10 workers using 29747 MB)
@  2217s  (total 10 workers using 29685 MB)
@  2228s  (total 10 workers using 29733 MB)
@  2239s  (total 10 workers using 29818 MB)
@  2250s  (total 10 workers using 29957 MB)
@  2261s  (total 10 workers using 30128 MB)
@  2272s  (total 10 workers using 30016 MB)
@  2283s  (total 10 workers using 30201 MB)
@  2294s  (total 10 workers using 30249 MB)
@  2305s  (total 10 workers using 30419 MB)
@  2315s  (total 10 workers using 30800 MB)
@  2326s  (total 10 workers using 30085 MB)
@  2337s  (total 10 workers using 30915 MB)
@  2348s  (total 10 workers using 30519 MB)
@  2359s  (total 10 workers using 31143 MB)
@  2370s  (total 10 workers using 30470 MB)
@  2381s  (total 10 workers using 31818 MB)
@  2392s  (total 10 workers using 30937 MB)
@  2403s  (total 10 workers using 31153 MB)
@  2414s  (total 10 workers using 31201 MB)
@  2425s  (total 10 workers using 31746 MB)
@  2436s  (total 10 workers using 31306 MB)
@  2447s  (total 10 workers using 31377 MB)
@  2458s  (total 10 workers using 31212 MB)
@  2468s  (total 10 workers using 31502 MB)
@  2479s  (total 10 workers using 31309 MB)
@  2490s  (total 10 workers using 31565 MB)
@  2501s  (total 10 workers using 31425 MB)
@  2512s  (total 10 workers using 31782 MB)
@  2523s  (total 10 workers using 31171 MB)
@  2534s  (total 10 workers using 31313 MB)
@  2545s  (total 10 workers using 31701 MB)
@  2556s  (total 10 workers using 31596 MB)
@  2567s  (total 10 workers using 32101 MB)
@  2578s  (total 10 workers using 31845 MB)
@  2589s  (total 10 workers using 32216 MB)
@  2599s  (total 10 workers using 31408 MB)
@  2610s  (total 10 workers using 32310 MB)
@  2621s  (total 10 workers using 31392 MB)
@  2632s  (total 10 workers using 32257 MB)
@  2643s  (total 10 workers using 31769 MB)
@  2654s  (total 10 workers using 32464 MB)
@  2665s  (total 10 workers using 31893 MB)
@  2676s  (total 10 workers using 32837 MB)
@  2687s  (total 10 workers using 32125 MB)
@  2698s  (total 10 workers using 32572 MB)
@  2709s  (total 10 workers using 32640 MB)
@  2720s  (total 10 workers using 33189 MB)
@  2730s  (total 10 workers using 32406 MB)
@  2742s  (total 10 workers using 32827 MB)
@  2752s  (total 10 workers using 32586 MB)
@  2763s  (total 10 workers using 33353 MB)
@  2774s  (total 10 workers using 32774 MB)
@  2785s  (total 10 workers using 33726 MB)
@  2796s  (total 10 workers using 32965 MB)
@  2807s  (total 10 workers using 33466 MB)
@  2818s  (total 10 workers using 33063 MB)
@  2829s  (total 10 workers using 33244 MB)
@  2840s  (total 10 workers using 33048 MB)
@  2851s  (total 10 workers using 32931 MB)
@  2862s  (total 10 workers using 33025 MB)
@  2873s  (total 10 workers using 33767 MB)
@  2883s  (total 10 workers using 32983 MB)
@  2894s  (total 10 workers using 33544 MB)
@  2905s  (total 10 workers using 33442 MB)
@  2916s  (total 10 workers using 33534 MB)
@  2927s  (total 10 workers using 33821 MB)
@  2938s  (total 10 workers using 33845 MB)
@  2949s  (total 10 workers using 34070 MB)
@  2960s  (total 10 workers using 34051 MB)
@  2971s  (total 10 workers using 34103 MB)
@  2982s  (total 10 workers using 34234 MB)
@  2993s  (total 10 workers using 34649 MB)
@  3004s  (total 10 workers using 34364 MB)
@  3014s  (total 10 workers using 34658 MB)
@  3026s  (total 10 workers using 34368 MB)
@  3036s  (total 10 workers using 35152 MB)
@  3047s  (total 10 workers using 34262 MB)
@  3058s  (total 10 workers using 35246 MB)
@  3069s  (total 10 workers using 34411 MB)
@  3080s  (total 10 workers using 35038 MB)
@  3091s  (total 10 workers using 34986 MB)
@  3102s  (total 10 workers using 35215 MB)
@  3113s  (total 10 workers using 34415 MB)
@  3124s  (total 10 workers using 35999 MB)
@  3135s  (total 10 workers using 35519 MB)
@  3146s  (total 10 workers using 36135 MB)
@  3157s  (total 10 workers using 36083 MB)
@  3167s  (total 10 workers using 35963 MB)
@  3178s  (total 10 workers using 36188 MB)
@  3189s  (total 10 workers using 36338 MB)
@  3200s  (total 10 workers using 35563 MB)
@  3211s  (total 10 workers using 36554 MB)
@  3222s  (total 10 workers using 36177 MB)
@  3233s  (total 10 workers using 36623 MB)
@  3244s  (total 10 workers using 36338 MB)
@  3255s  (total 10 workers using 36201 MB)
@  3266s  (total 10 workers using 37194 MB)
@  3277s  (total 10 workers using 36052 MB)
@  3288s  (total 10 workers using 37321 MB)
@  3298s  (total 10 workers using 36451 MB)
@  3309s  (total 10 workers using 36989 MB)
@  3320s  (total 10 workers using 36705 MB)
@  3331s  (total 10 workers using 37402 MB)
@  3342s  (total 10 workers using 36099 MB)
@  3353s  (total 10 workers using 37166 MB)
@  3364s  (total 10 workers using 36767 MB)
@  3375s  (total 10 workers using 37250 MB)
@  3386s  (total 10 workers using 37312 MB)
@  3397s  (total 10 workers using 37302 MB)
@  3408s  (total 10 workers using 37811 MB)
@  3419s  (total 10 workers using 37403 MB)
@  3429s  (total 10 workers using 38416 MB)
@  3441s  (total 10 workers using 37617 MB)
@  3451s  (total 10 workers using 37899 MB)
@  3462s  (total 10 workers using 37214 MB)
@  3473s  (total 10 workers using 38461 MB)
@  3484s  (total 10 workers using 37643 MB)
@  3495s  (total 10 workers using 38238 MB)
@  3506s  (total 10 workers using 37989 MB)
@  3517s  (total 10 workers using 37890 MB)
@  3528s  (total 10 workers using 38747 MB)
@  3539s  (total 10 workers using 38035 MB)
@  3550s  (total 10 workers using 38694 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3556s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3557s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3557s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3558s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3560s  (total 1 workers using 2773 MB)
@  3570s  (total 1 workers using 2773 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3574.53 seconds)[m
unknown
c done
