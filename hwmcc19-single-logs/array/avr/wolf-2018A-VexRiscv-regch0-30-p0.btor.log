c host: c3n28
c start: Fri Oct 18 21:00:44 CEST 2019
c arrayjobid: 17567257
c jobid: 17567579
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2018A/VexRiscv-regch0-30-p0.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567579.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 25001)
@     0s  (started worker 1 with pid 25002)
@     0s  (started worker 2 with pid 25003)
@     0s  (started worker 3 with pid 25004)
@     0s  (started worker 4 with pid 25005)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 25121)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 280 MB)
@     2s  (started worker 6 with pid 25175)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 436 MB)
@     3s  (started worker 7 with pid 25237)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 579 MB)
@     4s  (started worker 8 with pid 25305)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 726 MB)
@     4s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@     5s  (started worker 9 with pid 25396)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 796 MB)
@     6s  (started worker 10 with pid 25470)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 985 MB)
@    15s  (total 10 workers using 1535 MB)
@    26s  (total 10 workers using 2000 MB)
@    33s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@    38s  (total 9 workers using 2201 MB)
@    49s  (total 9 workers using 2500 MB)
@    60s  (total 9 workers using 2570 MB)
@    71s  (total 9 workers using 2764 MB)
@    82s  (total 9 workers using 2925 MB)
@    93s  (total 9 workers using 3037 MB)
@   103s  (total 9 workers using 3221 MB)
@   114s  (total 9 workers using 3435 MB)
@   118s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@   125s  (total 8 workers using 3136 MB)
@   136s  (total 8 workers using 3275 MB)
@   146s  (total 8 workers using 3265 MB)
@   157s  (total 8 workers using 3459 MB)
@   168s  (total 8 workers using 3550 MB)
@   179s  (total 8 workers using 3574 MB)
@   189s  (total 8 workers using 3820 MB)
@   200s  (total 8 workers using 3885 MB)
@   211s  (total 8 workers using 3881 MB)
@   222s  (total 8 workers using 4118 MB)
@   232s  (total 8 workers using 4059 MB)
@   243s  (total 8 workers using 4015 MB)
@   254s  (total 8 workers using 4005 MB)
@   259s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   264s  (total 7 workers using 3726 MB)
@   275s  (total 7 workers using 3761 MB)
@   286s  (total 7 workers using 3815 MB)
@   296s  (total 7 workers using 3891 MB)
@   307s  (total 7 workers using 3902 MB)
@   318s  (total 7 workers using 3970 MB)
@   328s  (total 7 workers using 4037 MB)
@   339s  (total 7 workers using 4139 MB)
@   349s  (total 7 workers using 4332 MB)
@   360s  (total 7 workers using 4379 MB)
@   371s  (total 7 workers using 4536 MB)
@   381s  (total 7 workers using 4542 MB)
@   392s  (total 7 workers using 4740 MB)
@   403s  (total 7 workers using 4716 MB)
@   413s  (total 7 workers using 4887 MB)
@   424s  (total 7 workers using 4900 MB)
@   435s  (total 7 workers using 4917 MB)
@   445s  (total 7 workers using 4948 MB)
@   456s  (total 7 workers using 5106 MB)
@   466s  (total 7 workers using 5042 MB)
@   477s  (total 7 workers using 5069 MB)
@   488s  (total 7 workers using 5095 MB)
@   498s  (total 7 workers using 5185 MB)
@   509s  (total 7 workers using 5187 MB)
@   520s  (total 7 workers using 5227 MB)
@   530s  (total 7 workers using 5262 MB)
@   541s  (total 7 workers using 5263 MB)
@   551s  (total 7 workers using 5273 MB)
@   562s  (total 7 workers using 5400 MB)
@   573s  (total 7 workers using 5364 MB)
@   583s  (total 7 workers using 5424 MB)
@   594s  (total 7 workers using 5471 MB)
@   605s  (total 7 workers using 5483 MB)
@   615s  (total 7 workers using 5465 MB)
@   626s  (total 7 workers using 5631 MB)
@   636s  (total 7 workers using 5690 MB)
@   647s  (total 7 workers using 5739 MB)
@   658s  (total 7 workers using 5740 MB)
@   668s  (total 7 workers using 5670 MB)
@   679s  (total 7 workers using 5889 MB)
@   690s  (total 7 workers using 5895 MB)
@   700s  (total 7 workers using 5900 MB)
@   711s  (total 7 workers using 5984 MB)
@   721s  (total 7 workers using 6073 MB)
@   732s  (total 7 workers using 6073 MB)
@   743s  (total 7 workers using 6102 MB)
@   753s  (total 7 workers using 6180 MB)
@   764s  (total 7 workers using 6000 MB)
@   775s  (total 7 workers using 5948 MB)
@   785s  (total 7 workers using 5950 MB)
@   796s  (total 7 workers using 5912 MB)
@   807s  (total 7 workers using 5988 MB)
@   817s  (total 7 workers using 5992 MB)
@   828s  (total 7 workers using 6009 MB)
@   838s  (total 7 workers using 6009 MB)
@   849s  (total 7 workers using 6050 MB)
@   860s  (total 7 workers using 6067 MB)
@   870s  (total 7 workers using 5920 MB)
@   881s  (total 7 workers using 6173 MB)
@   892s  (total 7 workers using 6224 MB)
@   902s  (total 7 workers using 6225 MB)
@   913s  (total 7 workers using 6216 MB)
@   923s  (total 7 workers using 4711 MB)
@   924s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@   934s  (total 6 workers using 4770 MB)
@   945s  (total 6 workers using 4764 MB)
@   955s  (total 6 workers using 4800 MB)
@   966s  (total 6 workers using 4870 MB)
@   976s  (total 6 workers using 4943 MB)
@   987s  (total 6 workers using 4731 MB)
@   997s  (total 6 workers using 4998 MB)
@  1008s  (total 6 workers using 4952 MB)
@  1018s  (total 6 workers using 4975 MB)
@  1029s  (total 6 workers using 4975 MB)
@  1039s  (total 6 workers using 4759 MB)
@  1050s  (total 6 workers using 5040 MB)
@  1060s  (total 6 workers using 5025 MB)
@  1071s  (total 6 workers using 5145 MB)
@  1081s  (total 6 workers using 5145 MB)
@  1092s  (total 6 workers using 5161 MB)
@  1103s  (total 6 workers using 5161 MB)
@  1113s  (total 6 workers using 5092 MB)
@  1124s  (total 6 workers using 4972 MB)
@  1134s  (total 6 workers using 5161 MB)
@  1145s  (total 6 workers using 5167 MB)
@  1155s  (total 6 workers using 5174 MB)
@  1166s  (total 6 workers using 5162 MB)
@  1176s  (total 6 workers using 5202 MB)
@  1187s  (total 6 workers using 5270 MB)
@  1197s  (total 6 workers using 5270 MB)
@  1208s  (total 6 workers using 5271 MB)
@  1219s  (total 6 workers using 5231 MB)
@  1229s  (total 6 workers using 5238 MB)
@  1240s  (total 6 workers using 5317 MB)
@  1250s  (total 6 workers using 5262 MB)
@  1261s  (total 6 workers using 5139 MB)
@  1271s  (total 6 workers using 5156 MB)
@  1282s  (total 6 workers using 5222 MB)
@  1292s  (total 6 workers using 5227 MB)
@  1303s  (total 6 workers using 5257 MB)
@  1313s  (total 6 workers using 5351 MB)
@  1324s  (total 6 workers using 5254 MB)
@  1334s  (total 6 workers using 5157 MB)
@  1345s  (total 6 workers using 5169 MB)
@  1355s  (total 6 workers using 5251 MB)
@  1366s  (total 6 workers using 5254 MB)
@  1377s  (total 6 workers using 5307 MB)
@  1387s  (total 6 workers using 5313 MB)
@  1398s  (total 6 workers using 5313 MB)
@  1408s  (total 6 workers using 5391 MB)
@  1419s  (total 6 workers using 5460 MB)
@  1429s  (total 6 workers using 5686 MB)
@  1440s  (total 6 workers using 5617 MB)
@  1450s  (total 6 workers using 5653 MB)
@  1461s  (total 6 workers using 5497 MB)
@  1471s  (total 6 workers using 5500 MB)
@  1482s  (total 6 workers using 5502 MB)
@  1493s  (total 6 workers using 5526 MB)
@  1503s  (total 6 workers using 5533 MB)
@  1514s  (total 6 workers using 5506 MB)
@  1524s  (total 6 workers using 5614 MB)
@  1535s  (total 6 workers using 5516 MB)
@  1545s  (total 6 workers using 5516 MB)
@  1556s  (total 6 workers using 5575 MB)
@  1566s  (total 6 workers using 5577 MB)
@  1577s  (total 6 workers using 5601 MB)
@  1587s  (total 6 workers using 5606 MB)
@  1598s  (total 6 workers using 5606 MB)
@  1608s  (total 6 workers using 5548 MB)
@  1619s  (total 6 workers using 5549 MB)
@  1629s  (total 6 workers using 5666 MB)
@  1640s  (total 6 workers using 5666 MB)
@  1650s  (total 6 workers using 5668 MB)
@  1661s  (total 6 workers using 5617 MB)
@  1672s  (total 6 workers using 5685 MB)
@  1682s  (total 6 workers using 5611 MB)
@  1693s  (total 6 workers using 5634 MB)
@  1703s  (total 6 workers using 5640 MB)
@  1714s  (total 6 workers using 5646 MB)
@  1724s  (total 6 workers using 5713 MB)
@  1735s  (total 6 workers using 5784 MB)
@  1745s  (total 6 workers using 5722 MB)
@  1756s  (total 6 workers using 5725 MB)
@  1766s  (total 6 workers using 5730 MB)
@  1777s  (total 6 workers using 5730 MB)
@  1788s  (total 6 workers using 5731 MB)
@  1798s  (total 6 workers using 5865 MB)
@  1809s  (total 6 workers using 5745 MB)
@  1819s  (total 6 workers using 5879 MB)
@  1830s  (total 6 workers using 5984 MB)
@  1840s  (total 6 workers using 5985 MB)
@  1851s  (total 6 workers using 5986 MB)
@  1861s  (total 6 workers using 5690 MB)
@  1872s  (total 6 workers using 5781 MB)
@  1882s  (total 6 workers using 5784 MB)
@  1893s  (total 6 workers using 5994 MB)
@  1903s  (total 6 workers using 5994 MB)
@  1914s  (total 6 workers using 5998 MB)
@  1924s  (total 6 workers using 6001 MB)
@  1935s  (total 6 workers using 5827 MB)
@  1946s  (total 6 workers using 5946 MB)
@  1956s  (total 6 workers using 5962 MB)
@  1967s  (total 6 workers using 5962 MB)
@  1977s  (total 6 workers using 5962 MB)
@  1988s  (total 6 workers using 5947 MB)
@  1998s  (total 6 workers using 5882 MB)
@  2009s  (total 6 workers using 6048 MB)
@  2019s  (total 6 workers using 6071 MB)
@  2030s  (total 6 workers using 6072 MB)
@  2040s  (total 6 workers using 6109 MB)
@  2051s  (total 6 workers using 6031 MB)
@  2062s  (total 6 workers using 6048 MB)
@  2072s  (total 6 workers using 6048 MB)
@  2083s  (total 6 workers using 6082 MB)
@  2093s  (total 6 workers using 6117 MB)
@  2104s  (total 6 workers using 6117 MB)
@  2114s  (total 6 workers using 6117 MB)
@  2125s  (total 6 workers using 6118 MB)
@  2135s  (total 6 workers using 6018 MB)
@  2146s  (total 6 workers using 6103 MB)
@  2156s  (total 6 workers using 6017 MB)
@  2167s  (total 6 workers using 6054 MB)
@  2177s  (total 6 workers using 5809 MB)
@  2188s  (total 6 workers using 6127 MB)
@  2198s  (total 6 workers using 5896 MB)
@  2209s  (total 6 workers using 6067 MB)
@  2220s  (total 6 workers using 6067 MB)
@  2230s  (total 6 workers using 6068 MB)
@  2241s  (total 6 workers using 6068 MB)
@  2251s  (total 6 workers using 6070 MB)
@  2262s  (total 6 workers using 6091 MB)
@  2272s  (total 6 workers using 6070 MB)
@  2283s  (total 6 workers using 6070 MB)
@  2293s  (total 6 workers using 6070 MB)
@  2304s  (total 6 workers using 6071 MB)
@  2314s  (total 6 workers using 6072 MB)
@  2325s  (total 6 workers using 6049 MB)
@  2336s  (total 6 workers using 5895 MB)
@  2346s  (total 6 workers using 6355 MB)
@  2357s  (total 6 workers using 5930 MB)
@  2367s  (total 6 workers using 6417 MB)
@  2378s  (total 6 workers using 6081 MB)
@  2388s  (total 6 workers using 6252 MB)
@  2399s  (total 6 workers using 6252 MB)
@  2409s  (total 6 workers using 6253 MB)
@  2420s  (total 6 workers using 6333 MB)
@  2430s  (total 6 workers using 6247 MB)
@  2441s  (total 6 workers using 6332 MB)
@  2451s  (total 6 workers using 6333 MB)
@  2462s  (total 6 workers using 6334 MB)
@  2472s  (total 6 workers using 6241 MB)
@  2483s  (total 6 workers using 6325 MB)
@  2494s  (total 6 workers using 6415 MB)
@  2504s  (total 6 workers using 6417 MB)
@  2515s  (total 6 workers using 6329 MB)
@  2525s  (total 6 workers using 6383 MB)
@  2536s  (total 6 workers using 6338 MB)
@  2546s  (total 6 workers using 6470 MB)
@  2557s  (total 6 workers using 6398 MB)
@  2567s  (total 6 workers using 6401 MB)
@  2578s  (total 6 workers using 6470 MB)
@  2588s  (total 6 workers using 6408 MB)
@  2599s  (total 6 workers using 6408 MB)
@  2610s  (total 6 workers using 6412 MB)
@  2620s  (total 6 workers using 6414 MB)
@  2631s  (total 6 workers using 6508 MB)
@  2641s  (total 6 workers using 6623 MB)
@  2652s  (total 6 workers using 6682 MB)
@  2662s  (total 6 workers using 6596 MB)
@  2673s  (total 6 workers using 6596 MB)
@  2683s  (total 6 workers using 6597 MB)
@  2694s  (total 6 workers using 6237 MB)
@  2704s  (total 6 workers using 6658 MB)
@  2715s  (total 6 workers using 6642 MB)
@  2725s  (total 6 workers using 6641 MB)
@  2736s  (total 6 workers using 6643 MB)
@  2746s  (total 6 workers using 6645 MB)
@  2757s  (total 6 workers using 6645 MB)
@  2767s  (total 6 workers using 6584 MB)
@  2778s  (total 6 workers using 6685 MB)
@  2789s  (total 6 workers using 6678 MB)
@  2799s  (total 6 workers using 6672 MB)
@  2810s  (total 6 workers using 6304 MB)
@  2820s  (total 6 workers using 6538 MB)
@  2831s  (total 6 workers using 6613 MB)
@  2841s  (total 6 workers using 6490 MB)
@  2852s  (total 6 workers using 6446 MB)
@  2862s  (total 6 workers using 6585 MB)
@  2873s  (total 6 workers using 6664 MB)
@  2883s  (total 6 workers using 6665 MB)
@  2894s  (total 6 workers using 6700 MB)
@  2905s  (total 6 workers using 6701 MB)
@  2915s  (total 6 workers using 6704 MB)
@  2926s  (total 6 workers using 6707 MB)
@  2936s  (total 6 workers using 6710 MB)
@  2947s  (total 6 workers using 6710 MB)
@  2957s  (total 6 workers using 6488 MB)
@  2968s  (total 6 workers using 6805 MB)
@  2978s  (total 6 workers using 6806 MB)
@  2989s  (total 6 workers using 6753 MB)
@  2999s  (total 6 workers using 6770 MB)
@  3010s  (total 6 workers using 6771 MB)
@  3020s  (total 6 workers using 6639 MB)
@  3031s  (total 6 workers using 6640 MB)
@  3041s  (total 6 workers using 6641 MB)
@  3052s  (total 6 workers using 6729 MB)
@  3062s  (total 6 workers using 6794 MB)
@  3073s  (total 6 workers using 6796 MB)
@  3084s  (total 6 workers using 6784 MB)
@  3094s  (total 6 workers using 6768 MB)
@  3105s  (total 6 workers using 6739 MB)
@  3115s  (total 6 workers using 6887 MB)
@  3126s  (total 6 workers using 6888 MB)
@  3136s  (total 6 workers using 6828 MB)
@  3147s  (total 6 workers using 6908 MB)
@  3157s  (total 6 workers using 6804 MB)
@  3168s  (total 6 workers using 6964 MB)
@  3178s  (total 6 workers using 6862 MB)
@  3189s  (total 6 workers using 6864 MB)
@  3200s  (total 6 workers using 6925 MB)
@  3210s  (total 6 workers using 6929 MB)
@  3221s  (total 6 workers using 6929 MB)
@  3231s  (total 6 workers using 6930 MB)
@  3242s  (total 6 workers using 6940 MB)
@  3252s  (total 6 workers using 6883 MB)
@  3263s  (total 6 workers using 7216 MB)
@  3273s  (total 6 workers using 7243 MB)
@  3284s  (total 6 workers using 6959 MB)
@  3294s  (total 6 workers using 7159 MB)
@  3305s  (total 6 workers using 7160 MB)
@  3315s  (total 6 workers using 7191 MB)
@  3326s  (total 6 workers using 7198 MB)
@  3336s  (total 6 workers using 7200 MB)
@  3347s  (total 6 workers using 7205 MB)
@  3358s  (total 6 workers using 7207 MB)
@  3368s  (total 6 workers using 7207 MB)
@  3379s  (total 6 workers using 7210 MB)
@  3389s  (total 6 workers using 7212 MB)
@  3400s  (total 6 workers using 7153 MB)
@  3410s  (total 6 workers using 7206 MB)
@  3421s  (total 6 workers using 7271 MB)
@  3431s  (total 6 workers using 7402 MB)
@  3442s  (total 6 workers using 7278 MB)
@  3452s  (total 6 workers using 7165 MB)
@  3463s  (total 6 workers using 6642 MB)
@  3474s  (total 6 workers using 7307 MB)
@  3484s  (total 6 workers using 7307 MB)
@  3495s  (total 6 workers using 7249 MB)
@  3505s  (total 6 workers using 7373 MB)
@  3516s  (total 6 workers using 7254 MB)
@  3526s  (total 6 workers using 7257 MB)
@  3537s  (total 6 workers using 7307 MB)
@  3547s  (total 6 workers using 7310 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (copied results from worker 0 in /tmp//pr_test)
@  3555s  [0;30;47m(proof race finished with answer unknown in 3554.56 seconds)[m
unknown
c done
