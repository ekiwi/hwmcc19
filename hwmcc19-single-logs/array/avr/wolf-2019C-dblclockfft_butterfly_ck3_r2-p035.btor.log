c host: c3n18
c start: Fri Oct 18 21:49:14 CEST 2019
c arrayjobid: 17567257
c jobid: 17567644
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r2-p035.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567644.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 24662)
@     0s  (started worker 1 with pid 24663)
@     0s  (started worker 2 with pid 24664)
@     0s  (started worker 3 with pid 24665)
@     0s  (started worker 4 with pid 24666)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 24782)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 402 MB)
@     2s  (started worker 6 with pid 24838)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 631 MB)
@     3s  (started worker 7 with pid 24900)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 835 MB)
@     4s  (started worker 8 with pid 24966)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 977 MB)
@     5s  (started worker 9 with pid 25058)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1175 MB)
@     7s  (started worker 10 with pid 25138)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1421 MB)
@    15s  (total 11 workers using 2127 MB)
@    27s  (total 11 workers using 2602 MB)
@    39s  (total 11 workers using 2842 MB)
@    50s  (total 11 workers using 3270 MB)
@    61s  (total 11 workers using 3603 MB)
@    73s  (total 11 workers using 3906 MB)
@    83s  (total 11 workers using 4199 MB)
@    95s  (total 11 workers using 4407 MB)
@   106s  (total 11 workers using 4652 MB)
@   117s  (total 11 workers using 4767 MB)
@   128s  (total 11 workers using 4992 MB)
@   139s  (total 11 workers using 5138 MB)
@   150s  (total 11 workers using 5295 MB)
@   161s  (total 11 workers using 5415 MB)
@   172s  (total 11 workers using 5658 MB)
@   183s  (total 11 workers using 5810 MB)
@   194s  (total 11 workers using 5905 MB)
@   205s  (total 11 workers using 6131 MB)
@   216s  (total 11 workers using 6353 MB)
@   228s  (total 11 workers using 6552 MB)
@   239s  (total 11 workers using 6758 MB)
@   250s  (total 11 workers using 6817 MB)
@   261s  (total 11 workers using 6982 MB)
@   272s  (total 11 workers using 7047 MB)
@   283s  (total 11 workers using 7344 MB)
@   288s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   294s  (total 10 workers using 6927 MB)
@   305s  (total 10 workers using 7081 MB)
@   316s  (total 10 workers using 7586 MB)
@   327s  (total 10 workers using 7663 MB)
@   338s  (total 10 workers using 7768 MB)
@   349s  (total 10 workers using 7873 MB)
@   360s  (total 10 workers using 7944 MB)
@   371s  (total 10 workers using 8143 MB)
@   382s  (total 10 workers using 8466 MB)
@   393s  (total 10 workers using 8493 MB)
@   404s  (total 10 workers using 8586 MB)
@   415s  (total 10 workers using 8623 MB)
@   426s  (total 10 workers using 8685 MB)
@   436s  (total 10 workers using 8929 MB)
@   448s  (total 10 workers using 9466 MB)
@   458s  (total 10 workers using 9315 MB)
@   469s  (total 10 workers using 9567 MB)
@   480s  (total 10 workers using 9801 MB)
@   491s  (total 10 workers using 9934 MB)
@   502s  (total 10 workers using 9954 MB)
@   513s  (total 10 workers using 10241 MB)
@   524s  (total 10 workers using 10373 MB)
@   535s  (total 10 workers using 10645 MB)
@   546s  (total 10 workers using 10708 MB)
@   557s  (total 10 workers using 11034 MB)
@   568s  (total 10 workers using 11257 MB)
@   579s  (total 10 workers using 11308 MB)
@   590s  (total 10 workers using 11444 MB)
@   601s  (total 10 workers using 11691 MB)
@   612s  (total 10 workers using 11589 MB)
@   623s  (total 10 workers using 11959 MB)
@   634s  (total 10 workers using 11805 MB)
@   645s  (total 10 workers using 11970 MB)
@   647s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@   655s  (total 9 workers using 9883 MB)
@   666s  (total 9 workers using 10032 MB)
@   677s  (total 9 workers using 10229 MB)
@   688s  (total 9 workers using 10383 MB)
@   699s  (total 9 workers using 10437 MB)
@   710s  (total 9 workers using 10557 MB)
@   720s  (total 9 workers using 10597 MB)
@   731s  (total 9 workers using 10630 MB)
@   742s  (total 9 workers using 10480 MB)
@   753s  (total 9 workers using 10805 MB)
@   764s  (total 9 workers using 10715 MB)
@   775s  (total 9 workers using 10979 MB)
@   785s  (total 9 workers using 11094 MB)
@   796s  (total 9 workers using 11118 MB)
@   807s  (total 9 workers using 11245 MB)
@   818s  (total 9 workers using 11286 MB)
@   829s  (total 9 workers using 11593 MB)
@   840s  (total 9 workers using 11687 MB)
@   850s  (total 9 workers using 11613 MB)
@   861s  (total 9 workers using 11597 MB)
@   872s  (total 9 workers using 11901 MB)
@   883s  (total 9 workers using 11783 MB)
@   894s  (total 9 workers using 11875 MB)
@   905s  (total 9 workers using 11687 MB)
@   915s  (total 9 workers using 11995 MB)
@   926s  (total 9 workers using 12398 MB)
@   937s  (total 9 workers using 12151 MB)
@   948s  (total 9 workers using 12405 MB)
@   959s  (total 9 workers using 12286 MB)
@   969s  (total 9 workers using 12569 MB)
@   980s  (total 9 workers using 12250 MB)
@   991s  (total 9 workers using 12535 MB)
@  1002s  (total 9 workers using 12633 MB)
@  1013s  (total 9 workers using 12699 MB)
@  1023s  (total 9 workers using 12936 MB)
@  1034s  (total 9 workers using 12670 MB)
@  1045s  (total 9 workers using 13034 MB)
@  1056s  (total 9 workers using 12829 MB)
@  1067s  (total 9 workers using 12906 MB)
@  1078s  (total 9 workers using 12921 MB)
@  1088s  (total 9 workers using 13373 MB)
@  1099s  (total 9 workers using 12925 MB)
@  1110s  (total 9 workers using 13223 MB)
@  1121s  (total 9 workers using 13525 MB)
@  1132s  (total 9 workers using 13522 MB)
@  1143s  (total 9 workers using 13771 MB)
@  1153s  (total 9 workers using 13563 MB)
@  1164s  (total 9 workers using 14039 MB)
@  1175s  (total 9 workers using 13856 MB)
@  1186s  (total 9 workers using 14148 MB)
@  1197s  (total 9 workers using 14183 MB)
@  1208s  (total 9 workers using 13998 MB)
@  1218s  (total 9 workers using 14123 MB)
@  1229s  (total 9 workers using 14170 MB)
@  1240s  (total 9 workers using 14247 MB)
@  1251s  (total 9 workers using 14520 MB)
@  1262s  (total 9 workers using 14618 MB)
@  1273s  (total 9 workers using 14669 MB)
@  1283s  (total 9 workers using 14854 MB)
@  1294s  (total 9 workers using 14828 MB)
@  1305s  (total 9 workers using 14863 MB)
@  1316s  (total 9 workers using 14937 MB)
@  1327s  (total 9 workers using 15443 MB)
@  1338s  (total 9 workers using 14952 MB)
@  1348s  (total 9 workers using 15423 MB)
@  1359s  (total 9 workers using 15554 MB)
@  1370s  (total 9 workers using 15417 MB)
@  1381s  (total 9 workers using 15747 MB)
@  1392s  (total 9 workers using 15650 MB)
@  1403s  (total 9 workers using 15766 MB)
@  1413s  (total 9 workers using 15932 MB)
@  1424s  (total 9 workers using 15713 MB)
@  1435s  (total 9 workers using 15695 MB)
@  1446s  (total 9 workers using 15913 MB)
@  1457s  (total 9 workers using 15859 MB)
@  1468s  (total 9 workers using 15989 MB)
@  1478s  (total 9 workers using 15999 MB)
@  1489s  (total 9 workers using 16359 MB)
@  1500s  (total 9 workers using 16342 MB)
@  1511s  (total 9 workers using 16410 MB)
@  1522s  (total 9 workers using 16669 MB)
@  1533s  (total 9 workers using 16510 MB)
@  1543s  (total 9 workers using 16683 MB)
@  1554s  (total 9 workers using 16949 MB)
@  1565s  (total 9 workers using 16890 MB)
@  1576s  (total 9 workers using 16801 MB)
@  1587s  (total 9 workers using 17187 MB)
@  1598s  (total 9 workers using 17068 MB)
@  1608s  (total 9 workers using 17302 MB)
@  1619s  (total 9 workers using 17341 MB)
@  1630s  (total 9 workers using 17321 MB)
@  1641s  (total 9 workers using 17255 MB)
@  1652s  (total 9 workers using 17576 MB)
@  1663s  (total 9 workers using 17714 MB)
@  1673s  (total 9 workers using 17336 MB)
@  1684s  (total 9 workers using 17808 MB)
@  1695s  (total 9 workers using 17704 MB)
@  1706s  (total 9 workers using 17744 MB)
@  1717s  (total 9 workers using 17921 MB)
@  1728s  (total 9 workers using 17633 MB)
@  1738s  (total 9 workers using 18266 MB)
@  1749s  (total 9 workers using 18126 MB)
@  1760s  (total 9 workers using 18476 MB)
@  1771s  (total 9 workers using 18554 MB)
@  1782s  (total 9 workers using 18584 MB)
@  1793s  (total 9 workers using 18812 MB)
@  1803s  (total 9 workers using 18819 MB)
@  1814s  (total 9 workers using 19293 MB)
@  1825s  (total 9 workers using 18952 MB)
@  1836s  (total 9 workers using 19284 MB)
@  1847s  (total 9 workers using 19252 MB)
@  1858s  (total 9 workers using 19231 MB)
@  1869s  (total 9 workers using 19361 MB)
@  1879s  (total 9 workers using 19319 MB)
@  1890s  (total 9 workers using 19189 MB)
@  1901s  (total 9 workers using 19348 MB)
@  1912s  (total 9 workers using 19349 MB)
@  1923s  (total 9 workers using 19364 MB)
@  1934s  (total 9 workers using 19587 MB)
@  1945s  (total 9 workers using 19704 MB)
@  1955s  (total 9 workers using 19439 MB)
@  1966s  (total 9 workers using 19503 MB)
@  1977s  (total 9 workers using 19747 MB)
@  1988s  (total 9 workers using 19631 MB)
@  1999s  (total 9 workers using 19905 MB)
@  2010s  (total 9 workers using 19680 MB)
@  2020s  (total 9 workers using 20130 MB)
@  2031s  (total 9 workers using 20066 MB)
@  2042s  (total 9 workers using 20108 MB)
@  2053s  (total 9 workers using 19961 MB)
@  2064s  (total 9 workers using 19995 MB)
@  2075s  (total 9 workers using 20248 MB)
@  2085s  (total 9 workers using 19868 MB)
@  2096s  (total 9 workers using 20259 MB)
@  2107s  (total 9 workers using 20492 MB)
@  2118s  (total 9 workers using 20412 MB)
@  2129s  (total 9 workers using 20055 MB)
@  2140s  (total 9 workers using 20535 MB)
@  2150s  (total 9 workers using 20418 MB)
@  2161s  (total 9 workers using 21033 MB)
@  2172s  (total 9 workers using 20832 MB)
@  2183s  (total 9 workers using 20542 MB)
@  2194s  (total 9 workers using 20688 MB)
@  2205s  (total 9 workers using 21145 MB)
@  2215s  (total 9 workers using 20837 MB)
@  2226s  (total 9 workers using 21388 MB)
@  2237s  (total 9 workers using 20731 MB)
@  2248s  (total 9 workers using 21001 MB)
@  2259s  (total 9 workers using 21343 MB)
@  2270s  (total 9 workers using 21109 MB)
@  2280s  (total 9 workers using 21431 MB)
@  2291s  (total 9 workers using 21440 MB)
@  2302s  (total 9 workers using 21288 MB)
@  2313s  (total 9 workers using 21151 MB)
@  2324s  (total 9 workers using 21601 MB)
@  2335s  (total 9 workers using 21277 MB)
@  2345s  (total 9 workers using 21576 MB)
@  2356s  (total 9 workers using 21698 MB)
@  2367s  (total 9 workers using 21413 MB)
@  2378s  (total 9 workers using 21439 MB)
@  2389s  (total 9 workers using 21650 MB)
@  2399s  (total 9 workers using 21894 MB)
@  2410s  (total 9 workers using 21709 MB)
@  2421s  (total 9 workers using 21958 MB)
@  2432s  (total 9 workers using 21961 MB)
@  2443s  (total 9 workers using 21941 MB)
@  2453s  (total 9 workers using 22378 MB)
@  2464s  (total 9 workers using 22024 MB)
@  2475s  (total 9 workers using 22301 MB)
@  2486s  (total 9 workers using 22309 MB)
@  2497s  (total 9 workers using 22614 MB)
@  2508s  (total 9 workers using 22657 MB)
@  2518s  (total 9 workers using 22505 MB)
@  2529s  (total 9 workers using 23102 MB)
@  2540s  (total 9 workers using 22335 MB)
@  2551s  (total 9 workers using 23293 MB)
@  2562s  (total 9 workers using 22807 MB)
@  2573s  (total 9 workers using 23182 MB)
@  2583s  (total 9 workers using 23021 MB)
@  2594s  (total 9 workers using 23203 MB)
@  2605s  (total 9 workers using 22794 MB)
@  2616s  (total 9 workers using 23258 MB)
@  2627s  (total 9 workers using 22835 MB)
@  2638s  (total 9 workers using 23029 MB)
@  2648s  (total 9 workers using 23342 MB)
@  2659s  (total 9 workers using 23001 MB)
@  2670s  (total 9 workers using 23394 MB)
@  2681s  (total 9 workers using 22944 MB)
@  2692s  (total 9 workers using 23482 MB)
@  2703s  (total 9 workers using 23117 MB)
@  2713s  (total 9 workers using 23207 MB)
@  2724s  (total 9 workers using 23708 MB)
@  2735s  (total 9 workers using 22824 MB)
@  2746s  (total 9 workers using 23605 MB)
@  2757s  (total 9 workers using 23318 MB)
@  2767s  (total 9 workers using 23223 MB)
@  2778s  (total 9 workers using 24009 MB)
@  2789s  (total 9 workers using 23766 MB)
@  2800s  (total 9 workers using 24276 MB)
@  2811s  (total 9 workers using 23693 MB)
@  2821s  (total 9 workers using 24538 MB)
@  2832s  (total 9 workers using 24032 MB)
@  2843s  (total 9 workers using 24518 MB)
@  2854s  (total 9 workers using 24209 MB)
@  2865s  (total 9 workers using 24593 MB)
@  2876s  (total 9 workers using 24401 MB)
@  2886s  (total 9 workers using 24399 MB)
@  2897s  (total 9 workers using 24650 MB)
@  2908s  (total 9 workers using 24351 MB)
@  2919s  (total 9 workers using 24850 MB)
@  2930s  (total 9 workers using 24100 MB)
@  2941s  (total 9 workers using 24602 MB)
@  2951s  (total 9 workers using 24967 MB)
@  2962s  (total 9 workers using 24694 MB)
@  2973s  (total 9 workers using 25168 MB)
@  2984s  (total 9 workers using 24730 MB)
@  2995s  (total 9 workers using 25172 MB)
@  3006s  (total 9 workers using 25284 MB)
@  3016s  (total 9 workers using 25032 MB)
@  3027s  (total 9 workers using 25487 MB)
@  3038s  (total 9 workers using 25039 MB)
@  3049s  (total 9 workers using 25575 MB)
@  3060s  (total 9 workers using 25154 MB)
@  3071s  (total 9 workers using 25700 MB)
@  3081s  (total 9 workers using 25260 MB)
@  3092s  (total 9 workers using 25797 MB)
@  3103s  (total 9 workers using 25298 MB)
@  3114s  (total 9 workers using 25742 MB)
@  3125s  (total 9 workers using 25616 MB)
@  3136s  (total 9 workers using 26510 MB)
@  3146s  (total 9 workers using 25437 MB)
@  3157s  (total 9 workers using 25912 MB)
@  3168s  (total 9 workers using 25812 MB)
@  3179s  (total 9 workers using 26042 MB)
@  3190s  (total 9 workers using 26269 MB)
@  3201s  (total 9 workers using 26229 MB)
@  3211s  (total 9 workers using 26693 MB)
@  3222s  (total 9 workers using 26104 MB)
@  3233s  (total 9 workers using 26878 MB)
@  3244s  (total 9 workers using 26755 MB)
@  3255s  (total 9 workers using 26660 MB)
@  3266s  (total 9 workers using 27034 MB)
@  3277s  (total 9 workers using 26736 MB)
@  3287s  (total 9 workers using 27473 MB)
@  3298s  (total 9 workers using 26564 MB)
@  3309s  (total 9 workers using 27710 MB)
@  3320s  (total 9 workers using 26772 MB)
@  3331s  (total 9 workers using 26780 MB)
@  3342s  (total 9 workers using 26988 MB)
@  3353s  (total 9 workers using 27466 MB)
@  3363s  (total 9 workers using 27193 MB)
@  3374s  (total 9 workers using 27105 MB)
@  3385s  (total 9 workers using 26898 MB)
@  3396s  (total 9 workers using 27748 MB)
@  3407s  (total 9 workers using 27262 MB)
@  3418s  (total 9 workers using 26925 MB)
@  3428s  (total 9 workers using 27846 MB)
@  3439s  (total 9 workers using 27561 MB)
@  3450s  (total 9 workers using 26978 MB)
@  3461s  (total 9 workers using 27790 MB)
@  3472s  (total 9 workers using 27864 MB)
@  3483s  (total 9 workers using 27186 MB)
@  3493s  (total 9 workers using 27963 MB)
@  3504s  (total 9 workers using 27583 MB)
@  3515s  (total 9 workers using 27702 MB)
@  3526s  (total 9 workers using 28384 MB)
@  3537s  (total 9 workers using 27936 MB)
@  3548s  (total 9 workers using 27793 MB)
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3556s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3558s  (total 2 workers using 6692 MB)
@  3569s  (total 2 workers using 6692 MB)
@  3573s  (stopping all workers)
@  3573s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3573s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3573s  (copied results from worker 0 in /tmp//pr_test)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3572.90 seconds)[m
unknown
c done
