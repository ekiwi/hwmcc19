c host: c3n30
c start: Fri Oct 18 20:57:21 CEST 2019
c arrayjobid: 17567257
c jobid: 17567575
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/unknown/ridecore_array.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567575.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 12450)
@     0s  (started worker 1 with pid 12451)
@     0s  (started worker 2 with pid 12452)
@     0s  (started worker 3 with pid 12453)
@     0s  (started worker 4 with pid 12454)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 12558)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 399 MB)
@     2s  (started worker 6 with pid 12626)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 792 MB)
@     2s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@     3s  (started worker 7 with pid 12687)
@     3s  (spawned 1 workers)
@     3s  (total 7 workers using 1301 MB)
@     4s  (started worker 8 with pid 12743)
@     4s  (spawned 1 workers)
@     4s  (total 8 workers using 1597 MB)
@     5s  (started worker 9 with pid 12834)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1978 MB)
@     5s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@     6s  (started worker 10 with pid 12896)
@     6s  (spawned 1 workers)
@     6s  (total 9 workers using 2154 MB)
@    14s  (total 9 workers using 4498 MB)
@    26s  (total 9 workers using 5170 MB)
@    30s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@    37s  (total 8 workers using 5341 MB)
@    48s  (total 8 workers using 5473 MB)
@    58s  (total 8 workers using 5519 MB)
@    69s  (total 8 workers using 5611 MB)
@    80s  (total 8 workers using 5673 MB)
@    91s  (total 8 workers using 5802 MB)
@   102s  (total 8 workers using 5841 MB)
@   112s  (total 8 workers using 5803 MB)
@   123s  (total 8 workers using 5898 MB)
@   134s  (total 8 workers using 5926 MB)
@   144s  (total 8 workers using 5934 MB)
@   155s  (total 8 workers using 6115 MB)
@   166s  (total 8 workers using 6209 MB)
@   177s  (total 8 workers using 6504 MB)
@   187s  (total 8 workers using 6464 MB)
@   198s  (total 8 workers using 6518 MB)
@   209s  (total 8 workers using 6519 MB)
@   219s  (total 8 workers using 6538 MB)
@   230s  (total 8 workers using 6650 MB)
@   241s  (total 8 workers using 6593 MB)
@   252s  (total 8 workers using 6636 MB)
@   262s  (total 8 workers using 6645 MB)
@   273s  (total 8 workers using 6675 MB)
@   284s  (total 8 workers using 6709 MB)
@   294s  (total 8 workers using 6709 MB)
@   305s  (total 8 workers using 6675 MB)
@   316s  (total 8 workers using 6644 MB)
@   327s  (total 8 workers using 6642 MB)
@   337s  (total 8 workers using 6668 MB)
@   348s  (total 8 workers using 6669 MB)
@   359s  (total 8 workers using 6669 MB)
@   369s  (total 8 workers using 6690 MB)
@   380s  (total 8 workers using 6692 MB)
@   391s  (total 8 workers using 6692 MB)
@   402s  (total 8 workers using 6695 MB)
@   412s  (total 8 workers using 6707 MB)
@   423s  (total 8 workers using 6734 MB)
@   434s  (total 8 workers using 6778 MB)
@   444s  (total 8 workers using 6754 MB)
@   455s  (total 8 workers using 6782 MB)
@   466s  (total 8 workers using 6758 MB)
@   477s  (total 8 workers using 6799 MB)
@   487s  (total 8 workers using 6802 MB)
@   498s  (total 8 workers using 6809 MB)
@   509s  (total 8 workers using 7097 MB)
@   519s  (total 8 workers using 7113 MB)
@   530s  (total 8 workers using 7113 MB)
@   541s  (total 8 workers using 7113 MB)
@   551s  (total 8 workers using 7113 MB)
@   562s  (total 8 workers using 7113 MB)
@   573s  (total 8 workers using 7069 MB)
@   584s  (total 8 workers using 7071 MB)
@   594s  (total 8 workers using 7091 MB)
@   605s  (total 8 workers using 7133 MB)
@   616s  (total 8 workers using 7140 MB)
@   627s  (total 8 workers using 7093 MB)
@   637s  (total 8 workers using 7124 MB)
@   648s  (total 8 workers using 7132 MB)
@   659s  (total 8 workers using 7146 MB)
@   669s  (total 8 workers using 7205 MB)
@   680s  (total 8 workers using 7169 MB)
@   691s  (total 8 workers using 7176 MB)
@   701s  (total 8 workers using 7191 MB)
@   712s  (total 8 workers using 7199 MB)
@   723s  (total 8 workers using 7261 MB)
@   734s  (total 8 workers using 7268 MB)
@   744s  (total 8 workers using 7442 MB)
@   755s  (total 8 workers using 7967 MB)
@   766s  (total 8 workers using 8000 MB)
@   777s  (total 8 workers using 8041 MB)
@   787s  (total 8 workers using 7951 MB)
@   798s  (total 8 workers using 8110 MB)
@   809s  (total 8 workers using 8070 MB)
@   819s  (total 8 workers using 8132 MB)
@   830s  (total 8 workers using 8146 MB)
@   841s  (total 8 workers using 8168 MB)
@   851s  (total 8 workers using 8169 MB)
@   862s  (total 8 workers using 8225 MB)
@   873s  (total 8 workers using 8271 MB)
@   884s  (total 8 workers using 8550 MB)
@   894s  (total 8 workers using 8735 MB)
@   905s  (total 8 workers using 8735 MB)
@   916s  (total 8 workers using 8645 MB)
@   927s  (total 8 workers using 8708 MB)
@   937s  (total 8 workers using 8716 MB)
@   948s  (total 8 workers using 8672 MB)
@   959s  (total 8 workers using 8643 MB)
@   969s  (total 8 workers using 8715 MB)
@   980s  (total 8 workers using 8687 MB)
@   991s  (total 8 workers using 8730 MB)
@  1001s  (total 8 workers using 8752 MB)
@  1012s  (total 8 workers using 8755 MB)
@  1023s  (total 8 workers using 8803 MB)
@  1034s  (total 8 workers using 8805 MB)
@  1044s  (total 8 workers using 8832 MB)
@  1055s  (total 8 workers using 8832 MB)
@  1066s  (total 8 workers using 8833 MB)
@  1077s  (total 8 workers using 8833 MB)
@  1087s  (total 8 workers using 8833 MB)
@  1098s  (total 8 workers using 8833 MB)
@  1109s  (total 8 workers using 8833 MB)
@  1119s  (total 8 workers using 8833 MB)
@  1130s  (total 8 workers using 8833 MB)
@  1141s  (total 8 workers using 8833 MB)
@  1152s  (total 8 workers using 8834 MB)
@  1162s  (total 8 workers using 8834 MB)
@  1173s  (total 8 workers using 9126 MB)
@  1184s  (total 8 workers using 8757 MB)
@  1194s  (total 8 workers using 8872 MB)
@  1205s  (total 8 workers using 8831 MB)
@  1216s  (total 8 workers using 8874 MB)
@  1227s  (total 8 workers using 8890 MB)
@  1237s  (total 8 workers using 8889 MB)
@  1248s  (total 8 workers using 8889 MB)
@  1259s  (total 8 workers using 8889 MB)
@  1269s  (total 8 workers using 8889 MB)
@  1280s  (total 8 workers using 8891 MB)
@  1291s  (total 8 workers using 8892 MB)
@  1302s  (total 8 workers using 8894 MB)
@  1312s  (total 8 workers using 8895 MB)
@  1323s  (total 8 workers using 8896 MB)
@  1334s  (total 8 workers using 8897 MB)
@  1344s  (total 8 workers using 8897 MB)
@  1355s  (total 8 workers using 8898 MB)
@  1366s  (total 8 workers using 8899 MB)
@  1377s  (total 8 workers using 8899 MB)
@  1387s  (total 8 workers using 8900 MB)
@  1398s  (total 8 workers using 8902 MB)
@  1409s  (total 8 workers using 8903 MB)
@  1420s  (total 8 workers using 8839 MB)
@  1430s  (total 8 workers using 8840 MB)
@  1441s  (total 8 workers using 8840 MB)
@  1452s  (total 8 workers using 8840 MB)
@  1462s  (total 8 workers using 8865 MB)
@  1473s  (total 8 workers using 8865 MB)
@  1484s  (total 8 workers using 8865 MB)
@  1494s  (total 8 workers using 8865 MB)
@  1505s  (total 8 workers using 8905 MB)
@  1516s  (total 8 workers using 8905 MB)
@  1527s  (total 8 workers using 8905 MB)
@  1537s  (total 8 workers using 8865 MB)
@  1548s  (total 8 workers using 9099 MB)
@  1559s  (total 8 workers using 9181 MB)
@  1570s  (total 8 workers using 8803 MB)
@  1580s  (total 8 workers using 8878 MB)
@  1591s  (total 8 workers using 8910 MB)
@  1602s  (total 8 workers using 8917 MB)
@  1612s  (total 8 workers using 8918 MB)
@  1623s  (total 8 workers using 8931 MB)
@  1634s  (total 8 workers using 8932 MB)
@  1644s  (total 8 workers using 9072 MB)
@  1655s  (total 8 workers using 9138 MB)
@  1666s  (total 8 workers using 9138 MB)
@  1677s  (total 8 workers using 9142 MB)
@  1687s  (total 8 workers using 9142 MB)
@  1698s  (total 8 workers using 9142 MB)
@  1709s  (total 8 workers using 9142 MB)
@  1720s  (total 8 workers using 9165 MB)
@  1730s  (total 8 workers using 9165 MB)
@  1741s  (total 8 workers using 9129 MB)
@  1752s  (total 8 workers using 9132 MB)
@  1762s  (total 8 workers using 9134 MB)
@  1773s  (total 8 workers using 9168 MB)
@  1784s  (total 8 workers using 9136 MB)
@  1795s  (total 8 workers using 9136 MB)
@  1805s  (total 8 workers using 9163 MB)
@  1816s  (total 8 workers using 9163 MB)
@  1827s  (total 8 workers using 9163 MB)
@  1837s  (total 8 workers using 9164 MB)
@  1848s  (total 8 workers using 9165 MB)
@  1859s  (total 8 workers using 9165 MB)
@  1870s  (total 8 workers using 9165 MB)
@  1880s  (total 8 workers using 9165 MB)
@  1891s  (total 8 workers using 9165 MB)
@  1902s  (total 8 workers using 9061 MB)
@  1913s  (total 8 workers using 9111 MB)
@  1923s  (total 8 workers using 9071 MB)
@  1934s  (total 8 workers using 9074 MB)
@  1945s  (total 8 workers using 9073 MB)
@  1955s  (total 8 workers using 9095 MB)
@  1966s  (total 8 workers using 9131 MB)
@  1977s  (total 8 workers using 9099 MB)
@  1987s  (total 8 workers using 9100 MB)
@  1998s  (total 8 workers using 9103 MB)
@  2009s  (total 8 workers using 9105 MB)
@  2020s  (total 8 workers using 9106 MB)
@  2030s  (total 8 workers using 9107 MB)
@  2041s  (total 8 workers using 9109 MB)
@  2052s  (total 8 workers using 9146 MB)
@  2063s  (total 8 workers using 9148 MB)
@  2073s  (total 8 workers using 9183 MB)
@  2084s  (total 8 workers using 9150 MB)
@  2095s  (total 8 workers using 9118 MB)
@  2105s  (total 8 workers using 9153 MB)
@  2116s  (total 8 workers using 9156 MB)
@  2127s  (total 8 workers using 9157 MB)
@  2137s  (total 8 workers using 9158 MB)
@  2148s  (total 8 workers using 9160 MB)
@  2159s  (total 8 workers using 9160 MB)
@  2170s  (total 8 workers using 9470 MB)
@  2180s  (total 8 workers using 9534 MB)
@  2191s  (total 8 workers using 9535 MB)
@  2202s  (total 8 workers using 9506 MB)
@  2213s  (total 8 workers using 9425 MB)
@  2223s  (total 8 workers using 9426 MB)
@  2234s  (total 8 workers using 9428 MB)
@  2245s  (total 8 workers using 9489 MB)
@  2255s  (total 8 workers using 9543 MB)
@  2266s  (total 8 workers using 9544 MB)
@  2277s  (total 8 workers using 9475 MB)
@  2288s  (total 8 workers using 9490 MB)
@  2298s  (total 8 workers using 9491 MB)
@  2309s  (total 8 workers using 9424 MB)
@  2320s  (total 8 workers using 9426 MB)
@  2330s  (total 8 workers using 9427 MB)
@  2341s  (total 8 workers using 9495 MB)
@  2352s  (total 8 workers using 9497 MB)
@  2363s  (total 8 workers using 9432 MB)
@  2373s  (total 8 workers using 9436 MB)
@  2384s  (total 8 workers using 9438 MB)
@  2395s  (total 8 workers using 9441 MB)
@  2406s  (total 8 workers using 9450 MB)
@  2416s  (total 8 workers using 9454 MB)
@  2427s  (total 8 workers using 9457 MB)
@  2438s  (total 8 workers using 9459 MB)
@  2448s  (total 8 workers using 9526 MB)
@  2459s  (total 8 workers using 9494 MB)
@  2470s  (total 8 workers using 9463 MB)
@  2480s  (total 8 workers using 9432 MB)
@  2491s  (total 8 workers using 9470 MB)
@  2502s  (total 8 workers using 9472 MB)
@  2513s  (total 8 workers using 9474 MB)
@  2523s  (total 8 workers using 9544 MB)
@  2534s  (total 8 workers using 9478 MB)
@  2545s  (total 8 workers using 9480 MB)
@  2556s  (total 8 workers using 9485 MB)
@  2566s  (total 8 workers using 9490 MB)
@  2577s  (total 8 workers using 9495 MB)
@  2588s  (total 8 workers using 9498 MB)
@  2598s  (total 8 workers using 9572 MB)
@  2609s  (total 8 workers using 9509 MB)
@  2620s  (total 8 workers using 9509 MB)
@  2631s  (total 8 workers using 9481 MB)
@  2641s  (total 8 workers using 9484 MB)
@  2652s  (total 8 workers using 9489 MB)
@  2663s  (total 8 workers using 9531 MB)
@  2673s  (total 8 workers using 9539 MB)
@  2684s  (total 8 workers using 9547 MB)
@  2695s  (total 8 workers using 9554 MB)
@  2706s  (total 8 workers using 9563 MB)
@  2716s  (total 8 workers using 9579 MB)
@  2727s  (total 8 workers using 9587 MB)
@  2738s  (total 8 workers using 9635 MB)
@  2748s  (total 8 workers using 9648 MB)
@  2759s  (total 8 workers using 9594 MB)
@  2770s  (total 8 workers using 9634 MB)
@  2781s  (total 8 workers using 9630 MB)
@  2791s  (total 8 workers using 9661 MB)
@  2802s  (total 8 workers using 9667 MB)
@  2813s  (total 8 workers using 9641 MB)
@  2823s  (total 8 workers using 9718 MB)
@  2834s  (total 8 workers using 9784 MB)
@  2845s  (total 8 workers using 9811 MB)
@  2856s  (total 8 workers using 9811 MB)
@  2866s  (total 8 workers using 9782 MB)
@  2877s  (total 8 workers using 9782 MB)
@  2888s  (total 8 workers using 9782 MB)
@  2898s  (total 8 workers using 9782 MB)
@  2909s  (total 8 workers using 9810 MB)
@  2920s  (total 8 workers using 9833 MB)
@  2930s  (total 8 workers using 9833 MB)
@  2941s  (total 8 workers using 9833 MB)
@  2952s  (total 8 workers using 9833 MB)
@  2963s  (total 8 workers using 9833 MB)
@  2973s  (total 8 workers using 9833 MB)
@  2984s  (total 8 workers using 9833 MB)
@  2995s  (total 8 workers using 9833 MB)
@  3006s  (total 8 workers using 9833 MB)
@  3016s  (total 8 workers using 9833 MB)
@  3027s  (total 8 workers using 9850 MB)
@  3038s  (total 8 workers using 9851 MB)
@  3048s  (total 8 workers using 9853 MB)
@  3059s  (total 8 workers using 9857 MB)
@  3070s  (total 8 workers using 9903 MB)
@  3080s  (total 8 workers using 9941 MB)
@  3091s  (total 8 workers using 9946 MB)
@  3102s  (total 8 workers using 9950 MB)
@  3113s  (total 8 workers using 9960 MB)
@  3123s  (total 8 workers using 9927 MB)
@  3134s  (total 8 workers using 9931 MB)
@  3145s  (total 8 workers using 9934 MB)
@  3156s  (total 8 workers using 9943 MB)
@  3166s  (total 8 workers using 9948 MB)
@  3177s  (total 8 workers using 9956 MB)
@  3188s  (total 8 workers using 9994 MB)
@  3198s  (total 8 workers using 9995 MB)
@  3209s  (total 8 workers using 10065 MB)
@  3220s  (total 8 workers using 10000 MB)
@  3230s  (total 8 workers using 10003 MB)
@  3241s  (total 8 workers using 10006 MB)
@  3252s  (total 8 workers using 10007 MB)
@  3263s  (total 8 workers using 9976 MB)
@  3273s  (total 8 workers using 9984 MB)
@  3284s  (total 8 workers using 9986 MB)
@  3295s  (total 8 workers using 9988 MB)
@  3305s  (total 8 workers using 9995 MB)
@  3316s  (total 8 workers using 10000 MB)
@  3327s  (total 8 workers using 10004 MB)
@  3338s  (total 8 workers using 10006 MB)
@  3348s  (total 8 workers using 10007 MB)
@  3359s  (total 8 workers using 10009 MB)
@  3370s  (total 8 workers using 10016 MB)
@  3380s  (total 8 workers using 10040 MB)
@  3391s  (total 8 workers using 10062 MB)
@  3402s  (total 8 workers using 10072 MB)
@  3413s  (total 8 workers using 10119 MB)
@  3423s  (total 8 workers using 10122 MB)
@  3434s  (total 8 workers using 10129 MB)
@  3445s  (total 8 workers using 10137 MB)
@  3455s  (total 8 workers using 10143 MB)
@  3466s  (total 8 workers using 10208 MB)
@  3477s  (total 8 workers using 10219 MB)
@  3488s  (total 8 workers using 10221 MB)
@  3498s  (total 8 workers using 10221 MB)
@  3509s  (total 8 workers using 10221 MB)
@  3520s  (total 8 workers using 10221 MB)
@  3530s  (total 8 workers using 10230 MB)
@  3541s  (total 8 workers using 10230 MB)
@  3552s  (total 8 workers using 10230 MB)
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3556s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3557s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3562s  (total 2 workers using 1654 MB)
@  3572s  (total 2 workers using 1654 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3574.84 seconds)[m
unknown
c done
