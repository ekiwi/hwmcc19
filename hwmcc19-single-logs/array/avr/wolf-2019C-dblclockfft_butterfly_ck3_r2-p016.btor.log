c host: c3n32
c start: Fri Oct 18 22:28:04 CEST 2019
c arrayjobid: 17567257
c jobid: 17567678
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dblclockfft_butterfly_ck3_r2-p016.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567678.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 7948)
@     0s  (started worker 1 with pid 7949)
@     0s  (started worker 2 with pid 7950)
@     0s  (started worker 3 with pid 7951)
@     0s  (started worker 4 with pid 7952)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 8070)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 403 MB)
@     2s  (started worker 6 with pid 8126)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 636 MB)
@     3s  (started worker 7 with pid 8188)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 827 MB)
@     4s  (started worker 8 with pid 8256)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1035 MB)
@     5s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@     5s  (started worker 9 with pid 8349)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1117 MB)
@     6s  (started worker 10 with pid 8423)
@     6s  (spawned 1 workers)
@     6s  (total 10 workers using 1339 MB)
@    15s  (total 10 workers using 2500 MB)
@    26s  (total 10 workers using 3885 MB)
@    38s  (total 10 workers using 4905 MB)
@    49s  (total 10 workers using 5583 MB)
@    60s  (total 10 workers using 6539 MB)
@    71s  (total 10 workers using 6981 MB)
@    82s  (total 10 workers using 7872 MB)
@    93s  (total 10 workers using 8209 MB)
@   104s  (total 10 workers using 9515 MB)
@   115s  (total 10 workers using 9703 MB)
@   126s  (total 10 workers using 10300 MB)
@   137s  (total 10 workers using 10690 MB)
@   148s  (total 10 workers using 10506 MB)
@   159s  (total 10 workers using 11216 MB)
@   170s  (total 10 workers using 11868 MB)
@   181s  (total 10 workers using 11520 MB)
@   192s  (total 10 workers using 12928 MB)
@   203s  (total 10 workers using 12755 MB)
@   214s  (total 10 workers using 13752 MB)
@   225s  (total 10 workers using 14027 MB)
@   236s  (total 10 workers using 14407 MB)
@   247s  (total 10 workers using 13894 MB)
@   258s  (total 10 workers using 15092 MB)
@   269s  (total 10 workers using 14357 MB)
@   279s  (total 10 workers using 14592 MB)
@   291s  (total 10 workers using 15091 MB)
@   301s  (total 10 workers using 16844 MB)
@   313s  (total 10 workers using 16725 MB)
@   324s  (total 10 workers using 17930 MB)
@   335s  (total 10 workers using 17151 MB)
@   346s  (total 10 workers using 17738 MB)
@   357s  (total 10 workers using 17392 MB)
@   368s  (total 10 workers using 18889 MB)
@   379s  (total 10 workers using 19335 MB)
@   390s  (total 10 workers using 19044 MB)
@   401s  (total 10 workers using 19043 MB)
@   412s  (total 10 workers using 20283 MB)
@   423s  (total 10 workers using 19627 MB)
@   433s  (total 10 workers using 20619 MB)
@   445s  (total 10 workers using 19731 MB)
@   455s  (total 10 workers using 20482 MB)
@   467s  (total 10 workers using 21451 MB)
@   477s  (total 10 workers using 21817 MB)
@   489s  (total 10 workers using 22108 MB)
@   499s  (total 10 workers using 21565 MB)
@   511s  (total 10 workers using 21858 MB)
@   521s  (total 10 workers using 22544 MB)
@   532s  (total 10 workers using 22593 MB)
@   543s  (total 10 workers using 22173 MB)
@   555s  (total 10 workers using 22554 MB)
@   565s  (total 10 workers using 24124 MB)
@   576s  (total 10 workers using 23735 MB)
@   587s  (total 10 workers using 23069 MB)
@   598s  (total 10 workers using 24774 MB)
@   609s  (total 10 workers using 23038 MB)
@   620s  (total 10 workers using 24312 MB)
@   631s  (total 10 workers using 25266 MB)
@   642s  (total 10 workers using 23626 MB)
@   653s  (total 10 workers using 24354 MB)
@   664s  (total 10 workers using 25125 MB)
@   675s  (total 10 workers using 26059 MB)
@   686s  (total 10 workers using 25899 MB)
@   697s  (total 10 workers using 26344 MB)
@   708s  (total 10 workers using 26847 MB)
@   719s  (total 10 workers using 26878 MB)
@   730s  (total 10 workers using 27119 MB)
@   741s  (total 10 workers using 26850 MB)
@   752s  (total 10 workers using 26659 MB)
@   763s  (total 10 workers using 25729 MB)
@   774s  (total 10 workers using 28495 MB)
@   785s  (total 10 workers using 27776 MB)
@   796s  (total 10 workers using 27098 MB)
@   807s  (total 10 workers using 29841 MB)
@   818s  (total 10 workers using 29205 MB)
@   828s  (total 10 workers using 27833 MB)
@   840s  (total 10 workers using 30300 MB)
@   851s  (total 10 workers using 28929 MB)
@   862s  (total 10 workers using 31133 MB)
@   872s  (total 10 workers using 28914 MB)
@   884s  (total 10 workers using 30791 MB)
@   894s  (total 10 workers using 29155 MB)
@   906s  (total 10 workers using 30598 MB)
@   917s  (total 10 workers using 31589 MB)
@   928s  (total 10 workers using 29929 MB)
@   939s  (total 10 workers using 30904 MB)
@   950s  (total 10 workers using 32458 MB)
@   961s  (total 10 workers using 29662 MB)
@   972s  (total 10 workers using 30877 MB)
@   983s  (total 10 workers using 32025 MB)
@   994s  (total 10 workers using 32083 MB)
@  1004s  (total 10 workers using 32524 MB)
@  1016s  (total 10 workers using 32444 MB)
@  1026s  (total 10 workers using 33566 MB)
@  1038s  (total 10 workers using 34316 MB)
@  1049s  (total 10 workers using 34654 MB)
@  1060s  (total 10 workers using 34977 MB)
@  1070s  (total 10 workers using 35466 MB)
@  1082s  (total 10 workers using 35819 MB)
@  1092s  (total 10 workers using 35890 MB)
@  1103s  (total 10 workers using 36285 MB)
@  1114s  (total 10 workers using 35790 MB)
@  1125s  (total 10 workers using 36386 MB)
@  1136s  (total 10 workers using 35656 MB)
@  1147s  (total 10 workers using 35392 MB)
@  1158s  (total 10 workers using 35371 MB)
@  1169s  (total 10 workers using 34505 MB)
@  1180s  (total 10 workers using 38019 MB)
@  1191s  (total 10 workers using 37454 MB)
@  1202s  (total 10 workers using 36384 MB)
@  1213s  (total 10 workers using 36101 MB)
@  1224s  (total 10 workers using 38038 MB)
@  1235s  (total 10 workers using 38040 MB)
@  1246s  (total 10 workers using 37182 MB)
@  1257s  (total 10 workers using 36592 MB)
@  1268s  (total 10 workers using 38691 MB)
@  1279s  (total 10 workers using 35795 MB)
@  1290s  (total 10 workers using 38190 MB)
@  1301s  (total 10 workers using 36122 MB)
@  1312s  (total 10 workers using 38234 MB)
@  1323s  (total 10 workers using 37548 MB)
@  1334s  (total 10 workers using 39446 MB)
@  1345s  (total 10 workers using 38794 MB)
@  1356s  (total 10 workers using 40118 MB)
@  1367s  (total 10 workers using 39103 MB)
@  1378s  (total 10 workers using 37760 MB)
@  1389s  (total 10 workers using 39773 MB)
@  1400s  (total 10 workers using 37650 MB)
@  1411s  (total 10 workers using 41080 MB)
@  1422s  (total 10 workers using 37812 MB)
@  1433s  (total 10 workers using 40490 MB)
@  1444s  (total 10 workers using 38228 MB)
@  1455s  (total 10 workers using 40723 MB)
@  1466s  (total 10 workers using 41834 MB)
@  1478s  (total 10 workers using 41020 MB)
@  1488s  (total 10 workers using 42073 MB)
@  1499s  (total 10 workers using 40790 MB)
@  1510s  (total 10 workers using 41443 MB)
@  1521s  (total 10 workers using 40069 MB)
@  1532s  (total 10 workers using 41559 MB)
@  1544s  (total 10 workers using 42801 MB)
@  1554s  (total 10 workers using 40364 MB)
@  1565s  (total 10 workers using 41650 MB)
@  1576s  (total 10 workers using 43148 MB)
@  1588s  (total 10 workers using 40677 MB)
@  1599s  (total 10 workers using 41534 MB)
@  1610s  (total 10 workers using 43961 MB)
@  1621s  (total 10 workers using 43837 MB)
@  1632s  (total 10 workers using 40412 MB)
@  1643s  (total 10 workers using 41486 MB)
@  1654s  (total 10 workers using 43333 MB)
@  1665s  (total 10 workers using 43619 MB)
@  1676s  (total 10 workers using 45565 MB)
@  1687s  (total 10 workers using 45147 MB)
@  1698s  (total 10 workers using 42277 MB)
@  1709s  (total 10 workers using 43888 MB)
@  1720s  (total 10 workers using 44064 MB)
@  1731s  (total 10 workers using 45572 MB)
@  1742s  (total 10 workers using 45733 MB)
@  1753s  (total 10 workers using 46375 MB)
@  1764s  (total 10 workers using 46157 MB)
@  1775s  (total 10 workers using 46614 MB)
@  1786s  (total 10 workers using 43144 MB)
@  1797s  (total 10 workers using 43331 MB)
@  1808s  (total 10 workers using 44730 MB)
@  1818s  (total 10 workers using 43279 MB)
@  1830s  (total 10 workers using 43835 MB)
@  1840s  (total 10 workers using 43933 MB)
@  1851s  (total 10 workers using 45292 MB)
@  1862s  (total 10 workers using 44645 MB)
@  1873s  (total 10 workers using 48993 MB)
@  1884s  (total 10 workers using 48325 MB)
@  1895s  (total 10 workers using 46316 MB)
@  1906s  (total 10 workers using 46258 MB)
@  1917s  (total 10 workers using 47075 MB)
@  1928s  (total 10 workers using 46337 MB)
@  1939s  (total 10 workers using 46336 MB)
@  1950s  (total 10 workers using 46563 MB)
@  1961s  (total 10 workers using 46498 MB)
@  1972s  (total 10 workers using 46318 MB)
@  1983s  (total 10 workers using 46013 MB)
@  1994s  (total 10 workers using 45539 MB)
@  2005s  (total 10 workers using 46385 MB)
@  2016s  (total 10 workers using 33967 MB)
@  2018s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  2027s  (total 9 workers using 23684 MB)
@  2038s  (total 9 workers using 23841 MB)
@  2049s  (total 9 workers using 23772 MB)
@  2060s  (total 9 workers using 23840 MB)
@  2071s  (total 9 workers using 24668 MB)
@  2081s  (total 9 workers using 23930 MB)
@  2092s  (total 9 workers using 24029 MB)
@  2103s  (total 9 workers using 24251 MB)
@  2114s  (total 9 workers using 24684 MB)
@  2125s  (total 9 workers using 24121 MB)
@  2135s  (total 9 workers using 24141 MB)
@  2146s  (total 9 workers using 24701 MB)
@  2157s  (total 9 workers using 24622 MB)
@  2168s  (total 9 workers using 24267 MB)
@  2179s  (total 9 workers using 25328 MB)
@  2189s  (total 9 workers using 24249 MB)
@  2200s  (total 9 workers using 25106 MB)
@  2211s  (total 9 workers using 24474 MB)
@  2222s  (total 9 workers using 24390 MB)
@  2233s  (total 9 workers using 24257 MB)
@  2244s  (total 9 workers using 24487 MB)
@  2254s  (total 9 workers using 24677 MB)
@  2265s  (total 9 workers using 25098 MB)
@  2276s  (total 9 workers using 25189 MB)
@  2287s  (total 9 workers using 24714 MB)
@  2298s  (total 9 workers using 25091 MB)
@  2309s  (total 9 workers using 24798 MB)
@  2319s  (total 9 workers using 24822 MB)
@  2330s  (total 9 workers using 25632 MB)
@  2341s  (total 9 workers using 24904 MB)
@  2352s  (total 9 workers using 25032 MB)
@  2363s  (total 9 workers using 25491 MB)
@  2374s  (total 9 workers using 25720 MB)
@  2384s  (total 9 workers using 25579 MB)
@  2395s  (total 9 workers using 26618 MB)
@  2406s  (total 9 workers using 26138 MB)
@  2417s  (total 9 workers using 25924 MB)
@  2427s  (total 9 workers using 25968 MB)
@  2438s  (total 9 workers using 26225 MB)
@  2449s  (total 9 workers using 25908 MB)
@  2460s  (total 9 workers using 25669 MB)
@  2471s  (total 9 workers using 26298 MB)
@  2482s  (total 9 workers using 25931 MB)
@  2492s  (total 9 workers using 27414 MB)
@  2503s  (total 9 workers using 26106 MB)
@  2514s  (total 9 workers using 27214 MB)
@  2525s  (total 9 workers using 26540 MB)
@  2536s  (total 9 workers using 27679 MB)
@  2547s  (total 9 workers using 27385 MB)
@  2557s  (total 9 workers using 27459 MB)
@  2568s  (total 9 workers using 26841 MB)
@  2579s  (total 9 workers using 27247 MB)
@  2590s  (total 9 workers using 26834 MB)
@  2601s  (total 9 workers using 27204 MB)
@  2611s  (total 9 workers using 27000 MB)
@  2622s  (total 9 workers using 27783 MB)
@  2633s  (total 9 workers using 27083 MB)
@  2644s  (total 9 workers using 27910 MB)
@  2655s  (total 9 workers using 27426 MB)
@  2665s  (total 9 workers using 27709 MB)
@  2676s  (total 9 workers using 27567 MB)
@  2687s  (total 9 workers using 28221 MB)
@  2698s  (total 9 workers using 27677 MB)
@  2709s  (total 9 workers using 27704 MB)
@  2720s  (total 9 workers using 28551 MB)
@  2730s  (total 9 workers using 27907 MB)
@  2741s  (total 9 workers using 28185 MB)
@  2752s  (total 9 workers using 27830 MB)
@  2763s  (total 9 workers using 28725 MB)
@  2774s  (total 9 workers using 27916 MB)
@  2784s  (total 9 workers using 28640 MB)
@  2795s  (total 9 workers using 28056 MB)
@  2806s  (total 9 workers using 28998 MB)
@  2817s  (total 9 workers using 28152 MB)
@  2828s  (total 9 workers using 28611 MB)
@  2838s  (total 9 workers using 28452 MB)
@  2849s  (total 9 workers using 29537 MB)
@  2860s  (total 9 workers using 28356 MB)
@  2871s  (total 9 workers using 29433 MB)
@  2882s  (total 9 workers using 28654 MB)
@  2893s  (total 9 workers using 29544 MB)
@  2903s  (total 9 workers using 28837 MB)
@  2914s  (total 9 workers using 29295 MB)
@  2925s  (total 9 workers using 29822 MB)
@  2936s  (total 9 workers using 30025 MB)
@  2947s  (total 9 workers using 29591 MB)
@  2958s  (total 9 workers using 29622 MB)
@  2968s  (total 9 workers using 30269 MB)
@  2979s  (total 9 workers using 29878 MB)
@  2990s  (total 9 workers using 29985 MB)
@  3001s  (total 9 workers using 29958 MB)
@  3012s  (total 9 workers using 29601 MB)
@  3022s  (total 9 workers using 29877 MB)
@  3033s  (total 9 workers using 30340 MB)
@  3044s  (total 9 workers using 29805 MB)
@  3055s  (total 9 workers using 31835 MB)
@  3066s  (total 9 workers using 30187 MB)
@  3076s  (total 9 workers using 31062 MB)
@  3087s  (total 9 workers using 30184 MB)
@  3098s  (total 9 workers using 30759 MB)
@  3109s  (total 9 workers using 30220 MB)
@  3120s  (total 9 workers using 30389 MB)
@  3131s  (total 9 workers using 30850 MB)
@  3141s  (total 9 workers using 30719 MB)
@  3152s  (total 9 workers using 30270 MB)
@  3163s  (total 9 workers using 30288 MB)
@  3174s  (total 9 workers using 31443 MB)
@  3184s  (total 9 workers using 30372 MB)
@  3195s  (total 9 workers using 30869 MB)
@  3206s  (total 9 workers using 31400 MB)
@  3217s  (total 9 workers using 30838 MB)
@  3228s  (total 9 workers using 30691 MB)
@  3239s  (total 9 workers using 30741 MB)
@  3249s  (total 9 workers using 32141 MB)
@  3260s  (total 9 workers using 30989 MB)
@  3271s  (total 9 workers using 31416 MB)
@  3282s  (total 9 workers using 30831 MB)
@  3293s  (total 9 workers using 30905 MB)
@  3304s  (total 9 workers using 31562 MB)
@  3314s  (total 9 workers using 31383 MB)
@  3325s  (total 9 workers using 30951 MB)
@  3336s  (total 9 workers using 31732 MB)
@  3347s  (total 9 workers using 31106 MB)
@  3358s  (total 9 workers using 31341 MB)
@  3368s  (total 9 workers using 31507 MB)
@  3379s  (total 9 workers using 31308 MB)
@  3390s  (total 9 workers using 31606 MB)
@  3401s  (total 9 workers using 32173 MB)
@  3412s  (total 9 workers using 31603 MB)
@  3422s  (total 9 workers using 32658 MB)
@  3433s  (total 9 workers using 31788 MB)
@  3444s  (total 9 workers using 33009 MB)
@  3455s  (total 9 workers using 31890 MB)
@  3466s  (total 9 workers using 32458 MB)
@  3477s  (total 9 workers using 31840 MB)
@  3487s  (total 9 workers using 32666 MB)
@  3498s  (total 9 workers using 32562 MB)
@  3509s  (total 9 workers using 31883 MB)
@  3520s  (total 9 workers using 32759 MB)
@  3530s  (total 9 workers using 32338 MB)
@  3541s  (total 9 workers using 32363 MB)
@  3552s  (total 9 workers using 33177 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3556s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3557s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3563s  (total 3 workers using 9350 MB)
@  3573s  (total 3 workers using 9350 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.29 seconds)[m
unknown
c done
