c host: c3n19
c start: Fri Oct 18 19:42:52 CEST 2019
c arrayjobid: 17567256
c jobid: 17567407
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2018D/VexRiscv-regch0-30-p1.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567407.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 19357)
@     0s  (started worker 1 with pid 19358)
@     0s  (started worker 2 with pid 19359)
@     0s  (started worker 3 with pid 19360)
@     0s  (started worker 4 with pid 19361)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 19477)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 341 MB)
@     2s  (started worker 6 with pid 19531)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 484 MB)
@     3s  (started worker 7 with pid 19591)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 632 MB)
@     4s  (started worker 8 with pid 19660)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 902 MB)
@     5s  (started worker 9 with pid 19752)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1052 MB)
@     7s  (started worker 10 with pid 19832)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1241 MB)
@    15s  (total 11 workers using 1868 MB)
@    27s  (total 11 workers using 2098 MB)
@    39s  (total 11 workers using 2348 MB)
@    50s  (total 11 workers using 2565 MB)
@    61s  (total 11 workers using 2877 MB)
@    72s  (total 11 workers using 2983 MB)
@    83s  (total 11 workers using 3144 MB)
@    95s  (total 11 workers using 3315 MB)
@   105s  (total 11 workers using 3545 MB)
@   117s  (total 11 workers using 3675 MB)
@   128s  (total 11 workers using 3771 MB)
@   139s  (total 11 workers using 3905 MB)
@   150s  (total 11 workers using 4091 MB)
@   161s  (total 11 workers using 4143 MB)
@   172s  (total 11 workers using 4217 MB)
@   183s  (total 11 workers using 4374 MB)
@   194s  (total 11 workers using 4498 MB)
@   205s  (total 11 workers using 4596 MB)
@   216s  (total 11 workers using 4695 MB)
@   227s  (total 11 workers using 4749 MB)
@   238s  (total 11 workers using 4791 MB)
@   249s  (total 11 workers using 4836 MB)
@   260s  (total 11 workers using 4886 MB)
@   272s  (total 11 workers using 4883 MB)
@   282s  (total 11 workers using 4943 MB)
@   294s  (total 11 workers using 5055 MB)
@   305s  (total 11 workers using 5122 MB)
@   316s  (total 11 workers using 5198 MB)
@   327s  (total 11 workers using 5242 MB)
@   338s  (total 11 workers using 5285 MB)
@   349s  (total 11 workers using 5330 MB)
@   360s  (total 11 workers using 5422 MB)
@   371s  (total 11 workers using 5547 MB)
@   382s  (total 11 workers using 5824 MB)
@   393s  (total 11 workers using 5980 MB)
@   405s  (total 11 workers using 6126 MB)
@   416s  (total 11 workers using 6255 MB)
@   427s  (total 11 workers using 6346 MB)
@   438s  (total 11 workers using 6477 MB)
@   449s  (total 11 workers using 6586 MB)
@   460s  (total 11 workers using 6665 MB)
@   471s  (total 11 workers using 6803 MB)
@   482s  (total 11 workers using 6903 MB)
@   493s  (total 11 workers using 6991 MB)
@   504s  (total 11 workers using 7108 MB)
@   515s  (total 11 workers using 7323 MB)
@   526s  (total 11 workers using 7510 MB)
@   538s  (total 11 workers using 7645 MB)
@   549s  (total 11 workers using 7756 MB)
@   560s  (total 11 workers using 7921 MB)
@   571s  (total 11 workers using 8049 MB)
@   582s  (total 11 workers using 8183 MB)
@   593s  (total 11 workers using 8340 MB)
@   604s  (total 11 workers using 8417 MB)
@   615s  (total 11 workers using 8518 MB)
@   626s  (total 11 workers using 8593 MB)
@   637s  (total 11 workers using 8632 MB)
@   648s  (total 11 workers using 8695 MB)
@   659s  (total 11 workers using 8778 MB)
@   671s  (total 11 workers using 8851 MB)
@   682s  (total 11 workers using 8961 MB)
@   693s  (total 11 workers using 9693 MB)
@   704s  (total 11 workers using 10426 MB)
@   715s  (total 11 workers using 10929 MB)
@   726s  (total 11 workers using 11240 MB)
@   737s  (total 11 workers using 11723 MB)
@   748s  (total 11 workers using 12147 MB)
@   759s  (total 11 workers using 12366 MB)
@   770s  (total 11 workers using 13154 MB)
@   782s  (total 11 workers using 13298 MB)
@   793s  (total 11 workers using 13146 MB)
@   804s  (total 11 workers using 13858 MB)
@   815s  (total 11 workers using 14104 MB)
@   826s  (total 11 workers using 14321 MB)
@   837s  (total 11 workers using 15222 MB)
@   848s  (total 11 workers using 15561 MB)
@   851s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@   859s  (total 10 workers using 13762 MB)
@   870s  (total 10 workers using 14057 MB)
@   881s  (total 10 workers using 14788 MB)
@   892s  (total 10 workers using 15137 MB)
@   903s  (total 10 workers using 15082 MB)
@   914s  (total 10 workers using 14962 MB)
@   925s  (total 10 workers using 15214 MB)
@   936s  (total 10 workers using 15682 MB)
@   947s  (total 10 workers using 15402 MB)
@   958s  (total 10 workers using 16415 MB)
@   969s  (total 10 workers using 15657 MB)
@   980s  (total 10 workers using 16470 MB)
@   991s  (total 10 workers using 16686 MB)
@  1002s  (total 10 workers using 16713 MB)
@  1013s  (total 10 workers using 16262 MB)
@  1024s  (total 10 workers using 17425 MB)
@  1035s  (total 10 workers using 16714 MB)
@  1046s  (total 10 workers using 17926 MB)
@  1057s  (total 10 workers using 17660 MB)
@  1068s  (total 10 workers using 18092 MB)
@  1079s  (total 10 workers using 18146 MB)
@  1090s  (total 10 workers using 18091 MB)
@  1101s  (total 10 workers using 17476 MB)
@  1112s  (total 10 workers using 18785 MB)
@  1123s  (total 10 workers using 17946 MB)
@  1134s  (total 10 workers using 19001 MB)
@  1145s  (total 10 workers using 17789 MB)
@  1156s  (total 10 workers using 19488 MB)
@  1167s  (total 10 workers using 18698 MB)
@  1178s  (total 10 workers using 19381 MB)
@  1189s  (total 10 workers using 19307 MB)
@  1200s  (total 10 workers using 19431 MB)
@  1211s  (total 10 workers using 19479 MB)
@  1222s  (total 10 workers using 19708 MB)
@  1233s  (total 10 workers using 18991 MB)
@  1244s  (total 10 workers using 21065 MB)
@  1255s  (total 10 workers using 20348 MB)
@  1266s  (total 10 workers using 22123 MB)
@  1277s  (total 10 workers using 21098 MB)
@  1288s  (total 10 workers using 22253 MB)
@  1299s  (total 10 workers using 21164 MB)
@  1310s  (total 10 workers using 22552 MB)
@  1321s  (total 10 workers using 22143 MB)
@  1332s  (total 10 workers using 21713 MB)
@  1343s  (total 10 workers using 22171 MB)
@  1354s  (total 10 workers using 22841 MB)
@  1365s  (total 10 workers using 21783 MB)
@  1376s  (total 10 workers using 22220 MB)
@  1387s  (total 10 workers using 22314 MB)
@  1399s  (total 10 workers using 22447 MB)
@  1410s  (total 10 workers using 22092 MB)
@  1421s  (total 10 workers using 22038 MB)
@  1432s  (total 10 workers using 21722 MB)
@  1443s  (total 10 workers using 23687 MB)
@  1454s  (total 10 workers using 23344 MB)
@  1465s  (total 10 workers using 22762 MB)
@  1476s  (total 10 workers using 24082 MB)
@  1487s  (total 10 workers using 23833 MB)
@  1498s  (total 10 workers using 22432 MB)
@  1509s  (total 10 workers using 24317 MB)
@  1520s  (total 10 workers using 22794 MB)
@  1531s  (total 10 workers using 24614 MB)
@  1542s  (total 10 workers using 22943 MB)
@  1553s  (total 10 workers using 24528 MB)
@  1564s  (total 10 workers using 24849 MB)
@  1575s  (total 10 workers using 23718 MB)
@  1586s  (total 10 workers using 24540 MB)
@  1597s  (total 10 workers using 25363 MB)
@  1608s  (total 10 workers using 25602 MB)
@  1619s  (total 10 workers using 24035 MB)
@  1630s  (total 10 workers using 24381 MB)
@  1641s  (total 10 workers using 24927 MB)
@  1652s  (total 10 workers using 25211 MB)
@  1663s  (total 10 workers using 25547 MB)
@  1674s  (total 10 workers using 25636 MB)
@  1685s  (total 10 workers using 26052 MB)
@  1696s  (total 10 workers using 25731 MB)
@  1707s  (total 10 workers using 25837 MB)
@  1718s  (total 10 workers using 25455 MB)
@  1729s  (total 10 workers using 25402 MB)
@  1740s  (total 10 workers using 25044 MB)
@  1751s  (total 10 workers using 27487 MB)
@  1762s  (total 10 workers using 26906 MB)
@  1773s  (total 10 workers using 26528 MB)
@  1784s  (total 10 workers using 25740 MB)
@  1795s  (total 10 workers using 28143 MB)
@  1806s  (total 10 workers using 27632 MB)
@  1817s  (total 10 workers using 26608 MB)
@  1827s  (total 10 workers using 28311 MB)
@  1839s  (total 10 workers using 27901 MB)
@  1849s  (total 10 workers using 26416 MB)
@  1860s  (total 10 workers using 28638 MB)
@  1871s  (total 10 workers using 27206 MB)
@  1883s  (total 10 workers using 26358 MB)
@  1893s  (total 10 workers using 28024 MB)
@  1905s  (total 10 workers using 26625 MB)
@  1915s  (total 10 workers using 28321 MB)
@  1927s  (total 10 workers using 26936 MB)
@  1937s  (total 10 workers using 28536 MB)
@  1949s  (total 10 workers using 27036 MB)
@  1959s  (total 10 workers using 26633 MB)
@  1971s  (total 10 workers using 26649 MB)
@  1973s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  1981s  (total 9 workers using 12515 MB)
@  1992s  (total 9 workers using 12468 MB)
@  2003s  (total 9 workers using 12510 MB)
@  2014s  (total 9 workers using 12698 MB)
@  2025s  (total 9 workers using 12680 MB)
@  2036s  (total 9 workers using 12728 MB)
@  2046s  (total 9 workers using 12646 MB)
@  2057s  (total 9 workers using 12550 MB)
@  2068s  (total 9 workers using 12628 MB)
@  2079s  (total 9 workers using 12734 MB)
@  2090s  (total 9 workers using 12805 MB)
@  2101s  (total 9 workers using 12906 MB)
@  2111s  (total 9 workers using 12937 MB)
@  2122s  (total 9 workers using 12746 MB)
@  2133s  (total 9 workers using 12955 MB)
@  2144s  (total 9 workers using 13023 MB)
@  2155s  (total 9 workers using 13057 MB)
@  2166s  (total 9 workers using 13108 MB)
@  2176s  (total 9 workers using 13131 MB)
@  2187s  (total 9 workers using 12888 MB)
@  2198s  (total 9 workers using 12902 MB)
@  2209s  (total 9 workers using 12980 MB)
@  2220s  (total 9 workers using 13186 MB)
@  2231s  (total 9 workers using 13005 MB)
@  2241s  (total 9 workers using 13355 MB)
@  2252s  (total 9 workers using 13128 MB)
@  2263s  (total 9 workers using 13069 MB)
@  2274s  (total 9 workers using 13155 MB)
@  2285s  (total 9 workers using 13263 MB)
@  2296s  (total 9 workers using 13094 MB)
@  2306s  (total 9 workers using 13226 MB)
@  2317s  (total 9 workers using 13391 MB)
@  2328s  (total 9 workers using 13182 MB)
@  2339s  (total 9 workers using 13339 MB)
@  2350s  (total 9 workers using 13313 MB)
@  2361s  (total 9 workers using 13309 MB)
@  2371s  (total 9 workers using 13442 MB)
@  2382s  (total 9 workers using 13268 MB)
@  2393s  (total 9 workers using 13409 MB)
@  2404s  (total 9 workers using 13532 MB)
@  2415s  (total 9 workers using 13358 MB)
@  2425s  (total 9 workers using 13419 MB)
@  2436s  (total 9 workers using 13475 MB)
@  2447s  (total 9 workers using 13610 MB)
@  2458s  (total 9 workers using 13465 MB)
@  2469s  (total 9 workers using 13534 MB)
@  2480s  (total 9 workers using 13624 MB)
@  2491s  (total 9 workers using 13435 MB)
@  2501s  (total 9 workers using 13478 MB)
@  2512s  (total 9 workers using 13646 MB)
@  2523s  (total 9 workers using 13897 MB)
@  2534s  (total 9 workers using 13496 MB)
@  2545s  (total 9 workers using 13646 MB)
@  2556s  (total 9 workers using 13726 MB)
@  2566s  (total 9 workers using 13555 MB)
@  2577s  (total 9 workers using 13596 MB)
@  2588s  (total 9 workers using 13716 MB)
@  2599s  (total 9 workers using 13726 MB)
@  2610s  (total 9 workers using 13769 MB)
@  2621s  (total 9 workers using 13949 MB)
@  2631s  (total 9 workers using 13658 MB)
@  2642s  (total 9 workers using 13708 MB)
@  2653s  (total 9 workers using 13833 MB)
@  2664s  (total 9 workers using 13894 MB)
@  2675s  (total 9 workers using 13978 MB)
@  2686s  (total 9 workers using 14034 MB)
@  2696s  (total 9 workers using 13826 MB)
@  2707s  (total 9 workers using 13835 MB)
@  2718s  (total 9 workers using 13899 MB)
@  2729s  (total 9 workers using 13937 MB)
@  2740s  (total 9 workers using 13990 MB)
@  2751s  (total 9 workers using 13971 MB)
@  2761s  (total 9 workers using 13968 MB)
@  2772s  (total 9 workers using 14169 MB)
@  2783s  (total 9 workers using 14174 MB)
@  2794s  (total 9 workers using 14321 MB)
@  2805s  (total 9 workers using 14030 MB)
@  2816s  (total 9 workers using 14128 MB)
@  2826s  (total 9 workers using 14095 MB)
@  2837s  (total 9 workers using 14161 MB)
@  2848s  (total 9 workers using 14197 MB)
@  2859s  (total 9 workers using 14310 MB)
@  2870s  (total 9 workers using 14330 MB)
@  2881s  (total 9 workers using 14406 MB)
@  2891s  (total 9 workers using 14488 MB)
@  2902s  (total 9 workers using 14561 MB)
@  2913s  (total 9 workers using 14440 MB)
@  2924s  (total 9 workers using 14494 MB)
@  2935s  (total 9 workers using 14963 MB)
@  2946s  (total 9 workers using 16365 MB)
@  2951s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  2956s  (total 8 workers using 14445 MB)
@  2967s  (total 8 workers using 14414 MB)
@  2978s  (total 8 workers using 14517 MB)
@  2989s  (total 8 workers using 14523 MB)
@  2999s  (total 8 workers using 14719 MB)
@  3010s  (total 8 workers using 14629 MB)
@  3021s  (total 8 workers using 14861 MB)
@  3032s  (total 8 workers using 14707 MB)
@  3042s  (total 8 workers using 14835 MB)
@  3053s  (total 8 workers using 14915 MB)
@  3064s  (total 8 workers using 14878 MB)
@  3075s  (total 8 workers using 14722 MB)
@  3085s  (total 8 workers using 14483 MB)
@  3087s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3096s  (total 7 workers using 9315 MB)
@  3107s  (total 7 workers using 9328 MB)
@  3117s  (total 7 workers using 9377 MB)
@  3128s  (total 7 workers using 9367 MB)
@  3138s  (total 7 workers using 9181 MB)
@  3149s  (total 7 workers using 9193 MB)
@  3160s  (total 7 workers using 9198 MB)
@  3170s  (total 7 workers using 9201 MB)
@  3181s  (total 7 workers using 9168 MB)
@  3192s  (total 7 workers using 9223 MB)
@  3202s  (total 7 workers using 9262 MB)
@  3213s  (total 7 workers using 9270 MB)
@  3223s  (total 7 workers using 9381 MB)
@  3234s  (total 7 workers using 9414 MB)
@  3245s  (total 7 workers using 9488 MB)
@  3255s  (total 7 workers using 9457 MB)
@  3266s  (total 7 workers using 9494 MB)
@  3276s  (total 7 workers using 9495 MB)
@  3287s  (total 7 workers using 9482 MB)
@  3298s  (total 7 workers using 9541 MB)
@  3308s  (total 7 workers using 9543 MB)
@  3319s  (total 7 workers using 9516 MB)
@  3330s  (total 7 workers using 9528 MB)
@  3340s  (total 7 workers using 9501 MB)
@  3351s  (total 7 workers using 9529 MB)
@  3362s  (total 7 workers using 9531 MB)
@  3372s  (total 7 workers using 9503 MB)
@  3383s  (total 7 workers using 9535 MB)
@  3393s  (total 7 workers using 9536 MB)
@  3404s  (total 7 workers using 9539 MB)
@  3415s  (total 7 workers using 9547 MB)
@  3425s  (total 7 workers using 9574 MB)
@  3436s  (total 7 workers using 9576 MB)
@  3447s  (total 7 workers using 9555 MB)
@  3457s  (total 7 workers using 9554 MB)
@  3468s  (total 7 workers using 9545 MB)
@  3478s  (total 7 workers using 9599 MB)
@  3489s  (total 7 workers using 9634 MB)
@  3500s  (total 7 workers using 9619 MB)
@  3510s  (total 7 workers using 9646 MB)
@  3521s  (total 7 workers using 9666 MB)
@  3531s  (total 7 workers using 9612 MB)
@  3542s  (total 7 workers using 9679 MB)
@  3553s  (total 7 workers using 9641 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3563s  (total 3 workers using 5841 MB)
@  3573s  (total 3 workers using 5841 MB)
@  3575s  (stopping all workers)
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3576s  (copied results from worker 0 in /tmp//pr_test)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3575.73 seconds)[m
unknown
c done
