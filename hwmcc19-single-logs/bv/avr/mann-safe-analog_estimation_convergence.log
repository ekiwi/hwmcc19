c host: c3n09
c start: Fri Oct 18 19:40:44 CEST 2019
c arrayjobid: 17567256
c jobid: 17567394
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/safe/analog_estimation_convergence.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567394.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 15159)
@     0s  (started worker 1 with pid 15160)
@     0s  (started worker 2 with pid 15161)
@     0s  (started worker 3 with pid 15162)
@     0s  (started worker 4 with pid 15163)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 15279)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 136 MB)
@     2s  (started worker 6 with pid 15335)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 199 MB)
@     3s  (started worker 7 with pid 15397)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 264 MB)
@     4s  (started worker 8 with pid 15465)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 347 MB)
@     5s  (started worker 9 with pid 15557)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 429 MB)
@     7s  (started worker 10 with pid 15637)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 505 MB)
@    15s  (total 11 workers using 768 MB)
@    27s  (total 11 workers using 1086 MB)
@    39s  (total 11 workers using 1321 MB)
@    44s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@    50s  (total 10 workers using 1060 MB)
@    61s  (total 10 workers using 1202 MB)
@    72s  (total 10 workers using 1355 MB)
@    83s  (total 10 workers using 1443 MB)
@    94s  (total 10 workers using 1530 MB)
@   105s  (total 10 workers using 1696 MB)
@   116s  (total 10 workers using 1873 MB)
@   126s  (total 10 workers using 1941 MB)
@   138s  (total 10 workers using 2096 MB)
@   148s  (total 10 workers using 2169 MB)
@   159s  (total 10 workers using 2233 MB)
@   170s  (total 10 workers using 2331 MB)
@   181s  (total 10 workers using 2467 MB)
@   192s  (total 10 workers using 2538 MB)
@   203s  (total 10 workers using 2737 MB)
@   214s  (total 10 workers using 2806 MB)
@   225s  (total 10 workers using 2859 MB)
@   236s  (total 10 workers using 2944 MB)
@   247s  (total 10 workers using 2974 MB)
@   258s  (total 10 workers using 3108 MB)
@   269s  (total 10 workers using 3230 MB)
@   280s  (total 10 workers using 3283 MB)
@   291s  (total 10 workers using 3333 MB)
@   301s  (total 10 workers using 3349 MB)
@   313s  (total 10 workers using 3385 MB)
@   323s  (total 10 workers using 3529 MB)
@   334s  (total 10 workers using 3595 MB)
@   345s  (total 10 workers using 3642 MB)
@   356s  (total 10 workers using 3664 MB)
@   367s  (total 10 workers using 3906 MB)
@   378s  (total 10 workers using 3984 MB)
@   389s  (total 10 workers using 4054 MB)
@   400s  (total 10 workers using 4095 MB)
@   411s  (total 10 workers using 4179 MB)
@   422s  (total 10 workers using 4416 MB)
@   433s  (total 10 workers using 4452 MB)
@   444s  (total 10 workers using 4589 MB)
@   454s  (total 10 workers using 4633 MB)
@   466s  (total 10 workers using 4732 MB)
@   476s  (total 10 workers using 4747 MB)
@   487s  (total 10 workers using 4905 MB)
@   498s  (total 10 workers using 4907 MB)
@   509s  (total 10 workers using 4978 MB)
@   520s  (total 10 workers using 5080 MB)
@   531s  (total 10 workers using 5103 MB)
@   542s  (total 10 workers using 5143 MB)
@   553s  (total 10 workers using 5226 MB)
@   564s  (total 10 workers using 5244 MB)
@   575s  (total 10 workers using 5298 MB)
@   586s  (total 10 workers using 5355 MB)
@   597s  (total 10 workers using 5440 MB)
@   608s  (total 10 workers using 5592 MB)
@   619s  (total 10 workers using 5638 MB)
@   629s  (total 10 workers using 5652 MB)
@   640s  (total 10 workers using 5704 MB)
@   651s  (total 10 workers using 5778 MB)
@   662s  (total 10 workers using 5800 MB)
@   673s  (total 10 workers using 5847 MB)
@   684s  (total 10 workers using 5848 MB)
@   695s  (total 10 workers using 5883 MB)
@   706s  (total 10 workers using 5898 MB)
@   717s  (total 10 workers using 6164 MB)
@   728s  (total 10 workers using 6308 MB)
@   739s  (total 10 workers using 6444 MB)
@   750s  (total 10 workers using 6496 MB)
@   760s  (total 10 workers using 6511 MB)
@   772s  (total 10 workers using 6560 MB)
@   782s  (total 10 workers using 6642 MB)
@   793s  (total 10 workers using 6755 MB)
@   804s  (total 10 workers using 6842 MB)
@   815s  (total 10 workers using 6978 MB)
@   826s  (total 10 workers using 6983 MB)
@   837s  (total 10 workers using 7092 MB)
@   848s  (total 10 workers using 7134 MB)
@   859s  (total 10 workers using 7280 MB)
@   870s  (total 10 workers using 7278 MB)
@   881s  (total 10 workers using 7432 MB)
@   892s  (total 10 workers using 7423 MB)
@   903s  (total 10 workers using 7447 MB)
@   913s  (total 10 workers using 7687 MB)
@   924s  (total 10 workers using 7750 MB)
@   935s  (total 10 workers using 7777 MB)
@   946s  (total 10 workers using 7837 MB)
@   957s  (total 10 workers using 7835 MB)
@   968s  (total 10 workers using 7969 MB)
@   979s  (total 10 workers using 7977 MB)
@   990s  (total 10 workers using 8077 MB)
@  1001s  (total 10 workers using 8147 MB)
@  1012s  (total 10 workers using 8226 MB)
@  1023s  (total 10 workers using 8260 MB)
@  1034s  (total 10 workers using 8314 MB)
@  1044s  (total 10 workers using 8316 MB)
@  1056s  (total 10 workers using 8403 MB)
@  1066s  (total 10 workers using 8558 MB)
@  1077s  (total 10 workers using 8582 MB)
@  1088s  (total 10 workers using 8650 MB)
@  1099s  (total 10 workers using 8678 MB)
@  1110s  (total 10 workers using 8801 MB)
@  1121s  (total 10 workers using 8995 MB)
@  1132s  (total 10 workers using 9584 MB)
@  1143s  (total 10 workers using 9756 MB)
@  1154s  (total 10 workers using 9748 MB)
@  1165s  (total 10 workers using 9760 MB)
@  1176s  (total 10 workers using 9946 MB)
@  1187s  (total 10 workers using 10002 MB)
@  1197s  (total 10 workers using 10010 MB)
@  1208s  (total 10 workers using 10059 MB)
@  1219s  (total 10 workers using 10147 MB)
@  1230s  (total 10 workers using 10160 MB)
@  1241s  (total 10 workers using 10171 MB)
@  1252s  (total 10 workers using 10308 MB)
@  1263s  (total 10 workers using 10236 MB)
@  1274s  (total 10 workers using 10380 MB)
@  1285s  (total 10 workers using 10354 MB)
@  1296s  (total 10 workers using 10431 MB)
@  1307s  (total 10 workers using 10514 MB)
@  1318s  (total 10 workers using 10544 MB)
@  1328s  (total 10 workers using 10573 MB)
@  1339s  (total 10 workers using 10630 MB)
@  1350s  (total 10 workers using 10628 MB)
@  1361s  (total 10 workers using 10701 MB)
@  1372s  (total 10 workers using 10694 MB)
@  1383s  (total 10 workers using 10758 MB)
@  1394s  (total 10 workers using 10743 MB)
@  1405s  (total 10 workers using 10783 MB)
@  1416s  (total 10 workers using 10825 MB)
@  1427s  (total 10 workers using 10827 MB)
@  1438s  (total 10 workers using 10807 MB)
@  1449s  (total 10 workers using 10935 MB)
@  1459s  (total 10 workers using 10952 MB)
@  1470s  (total 10 workers using 11002 MB)
@  1481s  (total 10 workers using 11031 MB)
@  1492s  (total 10 workers using 11094 MB)
@  1503s  (total 10 workers using 11113 MB)
@  1514s  (total 10 workers using 11126 MB)
@  1525s  (total 10 workers using 11151 MB)
@  1536s  (total 10 workers using 11169 MB)
@  1547s  (total 10 workers using 11263 MB)
@  1558s  (total 10 workers using 11377 MB)
@  1569s  (total 10 workers using 11333 MB)
@  1580s  (total 10 workers using 11350 MB)
@  1590s  (total 10 workers using 11446 MB)
@  1602s  (total 10 workers using 11399 MB)
@  1612s  (total 10 workers using 11485 MB)
@  1623s  (total 10 workers using 11500 MB)
@  1634s  (total 10 workers using 11581 MB)
@  1645s  (total 10 workers using 11520 MB)
@  1656s  (total 10 workers using 11568 MB)
@  1667s  (total 10 workers using 11598 MB)
@  1678s  (total 10 workers using 11660 MB)
@  1689s  (total 10 workers using 11670 MB)
@  1700s  (total 10 workers using 11668 MB)
@  1711s  (total 10 workers using 11808 MB)
@  1722s  (total 10 workers using 11858 MB)
@  1733s  (total 10 workers using 11883 MB)
@  1743s  (total 10 workers using 11980 MB)
@  1754s  (total 10 workers using 11919 MB)
@  1765s  (total 10 workers using 11938 MB)
@  1776s  (total 10 workers using 11983 MB)
@  1787s  (total 10 workers using 12079 MB)
@  1798s  (total 10 workers using 12058 MB)
@  1809s  (total 10 workers using 12133 MB)
@  1820s  (total 10 workers using 12097 MB)
@  1831s  (total 10 workers using 12124 MB)
@  1842s  (total 10 workers using 12195 MB)
@  1853s  (total 10 workers using 12203 MB)
@  1864s  (total 10 workers using 12184 MB)
@  1874s  (total 10 workers using 12240 MB)
@  1886s  (total 10 workers using 12221 MB)
@  1896s  (total 10 workers using 12232 MB)
@  1907s  (total 10 workers using 12241 MB)
@  1918s  (total 10 workers using 12254 MB)
@  1929s  (total 10 workers using 12260 MB)
@  1940s  (total 10 workers using 12423 MB)
@  1951s  (total 10 workers using 12519 MB)
@  1962s  (total 10 workers using 12527 MB)
@  1973s  (total 10 workers using 12485 MB)
@  1984s  (total 10 workers using 12536 MB)
@  1995s  (total 10 workers using 12529 MB)
@  2005s  (total 10 workers using 12549 MB)
@  2016s  (total 10 workers using 12876 MB)
@  2027s  (total 10 workers using 13401 MB)
@  2038s  (total 10 workers using 13665 MB)
@  2049s  (total 10 workers using 13673 MB)
@  2060s  (total 10 workers using 13712 MB)
@  2071s  (total 10 workers using 13809 MB)
@  2082s  (total 10 workers using 13794 MB)
@  2093s  (total 10 workers using 13789 MB)
@  2104s  (total 10 workers using 13825 MB)
@  2115s  (total 10 workers using 13826 MB)
@  2126s  (total 10 workers using 13806 MB)
@  2136s  (total 10 workers using 13857 MB)
@  2147s  (total 10 workers using 13870 MB)
@  2158s  (total 10 workers using 13832 MB)
@  2169s  (total 10 workers using 14023 MB)
@  2180s  (total 10 workers using 13974 MB)
@  2191s  (total 10 workers using 13980 MB)
@  2202s  (total 10 workers using 14004 MB)
@  2213s  (total 10 workers using 14057 MB)
@  2224s  (total 10 workers using 14060 MB)
@  2235s  (total 10 workers using 14059 MB)
@  2246s  (total 10 workers using 14340 MB)
@  2257s  (total 10 workers using 14347 MB)
@  2268s  (total 10 workers using 14386 MB)
@  2279s  (total 10 workers using 14396 MB)
@  2289s  (total 10 workers using 14440 MB)
@  2301s  (total 10 workers using 14469 MB)
@  2311s  (total 10 workers using 14442 MB)
@  2322s  (total 10 workers using 14513 MB)
@  2333s  (total 10 workers using 14490 MB)
@  2344s  (total 10 workers using 14562 MB)
@  2355s  (total 10 workers using 14583 MB)
@  2366s  (total 10 workers using 14583 MB)
@  2377s  (total 10 workers using 14603 MB)
@  2388s  (total 10 workers using 14645 MB)
@  2399s  (total 10 workers using 14649 MB)
@  2410s  (total 10 workers using 14671 MB)
@  2421s  (total 10 workers using 14673 MB)
@  2432s  (total 10 workers using 14834 MB)
@  2442s  (total 10 workers using 14760 MB)
@  2454s  (total 10 workers using 14771 MB)
@  2464s  (total 10 workers using 14794 MB)
@  2475s  (total 10 workers using 14855 MB)
@  2486s  (total 10 workers using 14854 MB)
@  2497s  (total 10 workers using 14844 MB)
@  2508s  (total 10 workers using 14851 MB)
@  2519s  (total 10 workers using 14840 MB)
@  2530s  (total 10 workers using 14835 MB)
@  2541s  (total 10 workers using 15180 MB)
@  2552s  (total 10 workers using 15143 MB)
@  2563s  (total 10 workers using 15165 MB)
@  2574s  (total 10 workers using 15241 MB)
@  2585s  (total 10 workers using 15251 MB)
@  2595s  (total 10 workers using 15235 MB)
@  2606s  (total 10 workers using 15246 MB)
@  2617s  (total 10 workers using 15247 MB)
@  2628s  (total 10 workers using 15388 MB)
@  2639s  (total 10 workers using 15401 MB)
@  2650s  (total 10 workers using 15490 MB)
@  2661s  (total 10 workers using 15446 MB)
@  2672s  (total 10 workers using 15447 MB)
@  2683s  (total 10 workers using 15512 MB)
@  2694s  (total 10 workers using 15572 MB)
@  2705s  (total 10 workers using 15600 MB)
@  2716s  (total 10 workers using 15634 MB)
@  2726s  (total 10 workers using 15656 MB)
@  2738s  (total 10 workers using 15616 MB)
@  2748s  (total 10 workers using 15706 MB)
@  2759s  (total 10 workers using 15655 MB)
@  2770s  (total 10 workers using 15771 MB)
@  2781s  (total 10 workers using 15786 MB)
@  2792s  (total 10 workers using 15777 MB)
@  2803s  (total 10 workers using 15864 MB)
@  2814s  (total 10 workers using 15789 MB)
@  2825s  (total 10 workers using 15782 MB)
@  2836s  (total 10 workers using 15923 MB)
@  2847s  (total 10 workers using 15909 MB)
@  2858s  (total 10 workers using 15927 MB)
@  2869s  (total 10 workers using 15998 MB)
@  2879s  (total 10 workers using 16012 MB)
@  2891s  (total 10 workers using 16009 MB)
@  2901s  (total 10 workers using 16072 MB)
@  2912s  (total 10 workers using 16041 MB)
@  2923s  (total 10 workers using 16072 MB)
@  2934s  (total 10 workers using 16083 MB)
@  2945s  (total 10 workers using 16093 MB)
@  2956s  (total 10 workers using 16099 MB)
@  2967s  (total 10 workers using 16177 MB)
@  2978s  (total 10 workers using 16144 MB)
@  2989s  (total 10 workers using 16224 MB)
@  3000s  (total 10 workers using 16233 MB)
@  3011s  (total 10 workers using 16375 MB)
@  3022s  (total 10 workers using 16417 MB)
@  3033s  (total 10 workers using 16420 MB)
@  3044s  (total 10 workers using 16448 MB)
@  3054s  (total 10 workers using 16497 MB)
@  3065s  (total 10 workers using 16517 MB)
@  3076s  (total 10 workers using 16581 MB)
@  3087s  (total 10 workers using 16708 MB)
@  3098s  (total 10 workers using 16754 MB)
@  3109s  (total 10 workers using 16783 MB)
@  3120s  (total 10 workers using 16791 MB)
@  3131s  (total 10 workers using 16786 MB)
@  3142s  (total 10 workers using 16803 MB)
@  3153s  (total 10 workers using 16947 MB)
@  3164s  (total 10 workers using 16851 MB)
@  3175s  (total 10 workers using 16916 MB)
@  3186s  (total 10 workers using 16919 MB)
@  3197s  (total 10 workers using 16926 MB)
@  3207s  (total 10 workers using 16989 MB)
@  3219s  (total 10 workers using 17000 MB)
@  3229s  (total 10 workers using 16976 MB)
@  3240s  (total 10 workers using 16997 MB)
@  3251s  (total 10 workers using 17001 MB)
@  3262s  (total 10 workers using 17309 MB)
@  3273s  (total 10 workers using 17793 MB)
@  3284s  (total 10 workers using 18339 MB)
@  3295s  (total 10 workers using 18085 MB)
@  3306s  (total 10 workers using 18071 MB)
@  3317s  (total 10 workers using 18142 MB)
@  3328s  (total 10 workers using 18201 MB)
@  3338s  (total 10 workers using 18202 MB)
@  3349s  (total 10 workers using 18241 MB)
@  3360s  (total 10 workers using 18364 MB)
@  3371s  (total 10 workers using 18202 MB)
@  3382s  (total 10 workers using 18215 MB)
@  3393s  (total 10 workers using 18173 MB)
@  3404s  (total 10 workers using 18232 MB)
@  3415s  (total 10 workers using 18224 MB)
@  3426s  (total 10 workers using 18225 MB)
@  3437s  (total 10 workers using 18234 MB)
@  3447s  (total 10 workers using 18210 MB)
@  3458s  (total 10 workers using 18375 MB)
@  3469s  (total 10 workers using 18400 MB)
@  3480s  (total 10 workers using 18407 MB)
@  3491s  (total 10 workers using 18416 MB)
@  3502s  (total 10 workers using 18558 MB)
@  3513s  (total 10 workers using 18449 MB)
@  3524s  (total 10 workers using 18457 MB)
@  3535s  (total 10 workers using 17843 MB)
@  3535s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3546s  (total 9 workers using 17865 MB)
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3556s  (total 2 workers using 3934 MB)
@  3566s  (total 2 workers using 3934 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3574.81 seconds)[m
unknown
c done
