c host: c3n01
c start: Fri Oct 18 20:42:59 CEST 2019
c arrayjobid: 17567256
c jobid: 17567556
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/vgasim_imgfifo-p051.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567556.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 2858)
@     0s  (started worker 1 with pid 2859)
@     0s  (started worker 2 with pid 2860)
@     0s  (started worker 3 with pid 2861)
@     0s  (started worker 4 with pid 2862)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 2978)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 271 MB)
@     2s  (started worker 6 with pid 3032)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 468 MB)
@     3s  (started worker 7 with pid 3094)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 622 MB)
@     4s  (started worker 8 with pid 3163)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 782 MB)
@     5s  (started worker 9 with pid 3255)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 858 MB)
@     6s  (started worker 10 with pid 3335)
@     6s  (spawned 1 workers)
@     6s  (total 11 workers using 948 MB)
@    15s  (total 11 workers using 1348 MB)
@    27s  (total 11 workers using 1836 MB)
@    39s  (total 11 workers using 2197 MB)
@    50s  (total 11 workers using 2569 MB)
@    61s  (total 11 workers using 2747 MB)
@    72s  (total 11 workers using 2891 MB)
@    83s  (total 11 workers using 3127 MB)
@    95s  (total 11 workers using 3485 MB)
@   105s  (total 11 workers using 3617 MB)
@   117s  (total 11 workers using 3909 MB)
@   120s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@   128s  (total 10 workers using 3848 MB)
@   139s  (total 10 workers using 4043 MB)
@   149s  (total 10 workers using 4285 MB)
@   160s  (total 10 workers using 4510 MB)
@   171s  (total 10 workers using 4679 MB)
@   182s  (total 10 workers using 4984 MB)
@   193s  (total 10 workers using 5320 MB)
@   204s  (total 10 workers using 5504 MB)
@   215s  (total 10 workers using 5836 MB)
@   226s  (total 10 workers using 6067 MB)
@   237s  (total 10 workers using 6187 MB)
@   248s  (total 10 workers using 6486 MB)
@   259s  (total 10 workers using 6606 MB)
@   270s  (total 10 workers using 6665 MB)
@   281s  (total 10 workers using 6668 MB)
@   292s  (total 10 workers using 6816 MB)
@   302s  (total 10 workers using 6935 MB)
@   313s  (total 10 workers using 7051 MB)
@   324s  (total 10 workers using 7162 MB)
@   335s  (total 10 workers using 7218 MB)
@   346s  (total 10 workers using 7412 MB)
@   357s  (total 10 workers using 7507 MB)
@   368s  (total 10 workers using 7633 MB)
@   379s  (total 10 workers using 7742 MB)
@   390s  (total 10 workers using 7871 MB)
@   401s  (total 10 workers using 8068 MB)
@   411s  (total 10 workers using 8245 MB)
@   422s  (total 10 workers using 8376 MB)
@   433s  (total 10 workers using 8463 MB)
@   444s  (total 10 workers using 8704 MB)
@   455s  (total 10 workers using 8799 MB)
@   466s  (total 10 workers using 8944 MB)
@   477s  (total 10 workers using 9169 MB)
@   488s  (total 10 workers using 9250 MB)
@   499s  (total 10 workers using 9369 MB)
@   510s  (total 10 workers using 9476 MB)
@   521s  (total 10 workers using 9571 MB)
@   532s  (total 10 workers using 9753 MB)
@   542s  (total 10 workers using 9782 MB)
@   553s  (total 10 workers using 10018 MB)
@   564s  (total 10 workers using 10174 MB)
@   575s  (total 10 workers using 10331 MB)
@   586s  (total 10 workers using 10466 MB)
@   597s  (total 10 workers using 10669 MB)
@   608s  (total 10 workers using 10781 MB)
@   619s  (total 10 workers using 10885 MB)
@   630s  (total 10 workers using 10975 MB)
@   641s  (total 10 workers using 10974 MB)
@   651s  (total 10 workers using 11020 MB)
@   663s  (total 10 workers using 11141 MB)
@   673s  (total 10 workers using 11144 MB)
@   684s  (total 10 workers using 11237 MB)
@   695s  (total 10 workers using 11500 MB)
@   706s  (total 10 workers using 11426 MB)
@   717s  (total 10 workers using 11541 MB)
@   728s  (total 10 workers using 11573 MB)
@   739s  (total 10 workers using 11645 MB)
@   750s  (total 10 workers using 11757 MB)
@   761s  (total 10 workers using 11915 MB)
@   772s  (total 10 workers using 11920 MB)
@   782s  (total 10 workers using 11987 MB)
@   793s  (total 10 workers using 11846 MB)
@   804s  (total 10 workers using 11928 MB)
@   815s  (total 10 workers using 12063 MB)
@   826s  (total 10 workers using 12076 MB)
@   837s  (total 10 workers using 12143 MB)
@   848s  (total 10 workers using 12120 MB)
@   859s  (total 10 workers using 12227 MB)
@   870s  (total 10 workers using 12297 MB)
@   881s  (total 10 workers using 12323 MB)
@   891s  (total 10 workers using 12347 MB)
@   902s  (total 10 workers using 12417 MB)
@   913s  (total 10 workers using 12510 MB)
@   924s  (total 10 workers using 12582 MB)
@   935s  (total 10 workers using 12612 MB)
@   946s  (total 10 workers using 12646 MB)
@   957s  (total 10 workers using 12639 MB)
@   968s  (total 10 workers using 12816 MB)
@   979s  (total 10 workers using 12619 MB)
@   990s  (total 10 workers using 12794 MB)
@  1000s  (total 10 workers using 12657 MB)
@  1011s  (total 10 workers using 12657 MB)
@  1022s  (total 10 workers using 12658 MB)
@  1033s  (total 10 workers using 12631 MB)
@  1044s  (total 10 workers using 12659 MB)
@  1055s  (total 10 workers using 12671 MB)
@  1066s  (total 10 workers using 12700 MB)
@  1077s  (total 10 workers using 12701 MB)
@  1088s  (total 10 workers using 12749 MB)
@  1099s  (total 10 workers using 12752 MB)
@  1109s  (total 10 workers using 12758 MB)
@  1121s  (total 10 workers using 12986 MB)
@  1131s  (total 10 workers using 12787 MB)
@  1142s  (total 10 workers using 12757 MB)
@  1153s  (total 10 workers using 12925 MB)
@  1164s  (total 10 workers using 12746 MB)
@  1175s  (total 10 workers using 12757 MB)
@  1186s  (total 10 workers using 12790 MB)
@  1197s  (total 10 workers using 12873 MB)
@  1208s  (total 10 workers using 12917 MB)
@  1218s  (total 10 workers using 12918 MB)
@  1229s  (total 10 workers using 12921 MB)
@  1240s  (total 10 workers using 12924 MB)
@  1251s  (total 10 workers using 12924 MB)
@  1262s  (total 10 workers using 12935 MB)
@  1273s  (total 10 workers using 12935 MB)
@  1284s  (total 10 workers using 12975 MB)
@  1295s  (total 10 workers using 12981 MB)
@  1306s  (total 10 workers using 12989 MB)
@  1317s  (total 10 workers using 12966 MB)
@  1327s  (total 10 workers using 12932 MB)
@  1338s  (total 10 workers using 12980 MB)
@  1349s  (total 10 workers using 12967 MB)
@  1360s  (total 10 workers using 12922 MB)
@  1371s  (total 10 workers using 12933 MB)
@  1382s  (total 10 workers using 13068 MB)
@  1393s  (total 10 workers using 13042 MB)
@  1404s  (total 10 workers using 13083 MB)
@  1415s  (total 10 workers using 13107 MB)
@  1426s  (total 10 workers using 13107 MB)
@  1436s  (total 10 workers using 13118 MB)
@  1447s  (total 10 workers using 13121 MB)
@  1458s  (total 10 workers using 13149 MB)
@  1469s  (total 10 workers using 13158 MB)
@  1480s  (total 10 workers using 13194 MB)
@  1491s  (total 10 workers using 13194 MB)
@  1502s  (total 10 workers using 13178 MB)
@  1513s  (total 10 workers using 13292 MB)
@  1524s  (total 10 workers using 13231 MB)
@  1535s  (total 10 workers using 13335 MB)
@  1545s  (total 10 workers using 13319 MB)
@  1556s  (total 10 workers using 13280 MB)
@  1567s  (total 10 workers using 13384 MB)
@  1578s  (total 10 workers using 13344 MB)
@  1589s  (total 10 workers using 13313 MB)
@  1600s  (total 10 workers using 13310 MB)
@  1611s  (total 10 workers using 13310 MB)
@  1622s  (total 10 workers using 13310 MB)
@  1633s  (total 10 workers using 13310 MB)
@  1644s  (total 10 workers using 13310 MB)
@  1654s  (total 10 workers using 13294 MB)
@  1665s  (total 10 workers using 13433 MB)
@  1676s  (total 10 workers using 13449 MB)
@  1687s  (total 10 workers using 13449 MB)
@  1698s  (total 10 workers using 13397 MB)
@  1709s  (total 10 workers using 13453 MB)
@  1720s  (total 10 workers using 13453 MB)
@  1731s  (total 10 workers using 13453 MB)
@  1742s  (total 10 workers using 13471 MB)
@  1753s  (total 10 workers using 13455 MB)
@  1763s  (total 10 workers using 13485 MB)
@  1774s  (total 10 workers using 13496 MB)
@  1785s  (total 10 workers using 13497 MB)
@  1796s  (total 10 workers using 13504 MB)
@  1807s  (total 10 workers using 13515 MB)
@  1818s  (total 10 workers using 13527 MB)
@  1829s  (total 10 workers using 13742 MB)
@  1840s  (total 10 workers using 13487 MB)
@  1851s  (total 10 workers using 13442 MB)
@  1862s  (total 10 workers using 13556 MB)
@  1872s  (total 10 workers using 13589 MB)
@  1883s  (total 10 workers using 13515 MB)
@  1894s  (total 10 workers using 13621 MB)
@  1905s  (total 10 workers using 13549 MB)
@  1916s  (total 10 workers using 13610 MB)
@  1927s  (total 10 workers using 13626 MB)
@  1938s  (total 10 workers using 13650 MB)
@  1949s  (total 10 workers using 13667 MB)
@  1959s  (total 10 workers using 13644 MB)
@  1971s  (total 10 workers using 13621 MB)
@  1981s  (total 10 workers using 13659 MB)
@  1992s  (total 10 workers using 13622 MB)
@  2003s  (total 10 workers using 13622 MB)
@  2014s  (total 10 workers using 13665 MB)
@  2025s  (total 10 workers using 13667 MB)
@  2036s  (total 10 workers using 13670 MB)
@  2047s  (total 10 workers using 13670 MB)
@  2058s  (total 10 workers using 13689 MB)
@  2068s  (total 10 workers using 13681 MB)
@  2079s  (total 10 workers using 13694 MB)
@  2090s  (total 10 workers using 13583 MB)
@  2101s  (total 10 workers using 13693 MB)
@  2112s  (total 10 workers using 13711 MB)
@  2123s  (total 10 workers using 13773 MB)
@  2134s  (total 10 workers using 13831 MB)
@  2145s  (total 10 workers using 13834 MB)
@  2156s  (total 10 workers using 13869 MB)
@  2167s  (total 10 workers using 13692 MB)
@  2177s  (total 10 workers using 13726 MB)
@  2188s  (total 10 workers using 13862 MB)
@  2199s  (total 10 workers using 13843 MB)
@  2210s  (total 10 workers using 13857 MB)
@  2221s  (total 10 workers using 13799 MB)
@  2232s  (total 10 workers using 13759 MB)
@  2243s  (total 10 workers using 13871 MB)
@  2254s  (total 10 workers using 13871 MB)
@  2265s  (total 10 workers using 13872 MB)
@  2276s  (total 10 workers using 13872 MB)
@  2286s  (total 10 workers using 13874 MB)
@  2297s  (total 10 workers using 13874 MB)
@  2308s  (total 10 workers using 13957 MB)
@  2319s  (total 10 workers using 13974 MB)
@  2330s  (total 10 workers using 13974 MB)
@  2341s  (total 10 workers using 13974 MB)
@  2352s  (total 10 workers using 13906 MB)
@  2363s  (total 10 workers using 13891 MB)
@  2374s  (total 10 workers using 13933 MB)
@  2385s  (total 10 workers using 13956 MB)
@  2395s  (total 10 workers using 13956 MB)
@  2406s  (total 10 workers using 13957 MB)
@  2417s  (total 10 workers using 13946 MB)
@  2428s  (total 10 workers using 13857 MB)
@  2439s  (total 10 workers using 14045 MB)
@  2450s  (total 10 workers using 13961 MB)
@  2461s  (total 10 workers using 13961 MB)
@  2472s  (total 10 workers using 14029 MB)
@  2483s  (total 10 workers using 13821 MB)
@  2494s  (total 10 workers using 13990 MB)
@  2504s  (total 10 workers using 14119 MB)
@  2515s  (total 10 workers using 14004 MB)
@  2526s  (total 10 workers using 13991 MB)
@  2537s  (total 10 workers using 13991 MB)
@  2548s  (total 10 workers using 14015 MB)
@  2559s  (total 10 workers using 14015 MB)
@  2570s  (total 10 workers using 14020 MB)
@  2581s  (total 10 workers using 14111 MB)
@  2592s  (total 10 workers using 14008 MB)
@  2603s  (total 10 workers using 14150 MB)
@  2613s  (total 10 workers using 14151 MB)
@  2624s  (total 10 workers using 14242 MB)
@  2635s  (total 10 workers using 14157 MB)
@  2646s  (total 10 workers using 14157 MB)
@  2657s  (total 10 workers using 14157 MB)
@  2668s  (total 10 workers using 14177 MB)
@  2679s  (total 10 workers using 14187 MB)
@  2690s  (total 10 workers using 14187 MB)
@  2701s  (total 10 workers using 14403 MB)
@  2712s  (total 10 workers using 14148 MB)
@  2722s  (total 10 workers using 14190 MB)
@  2733s  (total 10 workers using 14190 MB)
@  2744s  (total 10 workers using 14190 MB)
@  2755s  (total 10 workers using 14190 MB)
@  2766s  (total 10 workers using 14190 MB)
@  2777s  (total 10 workers using 14191 MB)
@  2788s  (total 10 workers using 14194 MB)
@  2799s  (total 10 workers using 14327 MB)
@  2810s  (total 10 workers using 14286 MB)
@  2821s  (total 10 workers using 14197 MB)
@  2831s  (total 10 workers using 14138 MB)
@  2842s  (total 10 workers using 14372 MB)
@  2853s  (total 10 workers using 14166 MB)
@  2864s  (total 10 workers using 14166 MB)
@  2875s  (total 10 workers using 14139 MB)
@  2886s  (total 10 workers using 14351 MB)
@  2897s  (total 10 workers using 14282 MB)
@  2908s  (total 10 workers using 14581 MB)
@  2919s  (total 10 workers using 14359 MB)
@  2930s  (total 10 workers using 14337 MB)
@  2940s  (total 10 workers using 14338 MB)
@  2951s  (total 10 workers using 14365 MB)
@  2962s  (total 10 workers using 14365 MB)
@  2973s  (total 10 workers using 14365 MB)
@  2984s  (total 10 workers using 14365 MB)
@  2995s  (total 10 workers using 14369 MB)
@  3006s  (total 10 workers using 14369 MB)
@  3017s  (total 10 workers using 14369 MB)
@  3028s  (total 10 workers using 14369 MB)
@  3039s  (total 10 workers using 14369 MB)
@  3049s  (total 10 workers using 14410 MB)
@  3060s  (total 10 workers using 14411 MB)
@  3071s  (total 10 workers using 14411 MB)
@  3082s  (total 10 workers using 14420 MB)
@  3093s  (total 10 workers using 14496 MB)
@  3104s  (total 10 workers using 14453 MB)
@  3115s  (total 10 workers using 14453 MB)
@  3126s  (total 10 workers using 14433 MB)
@  3137s  (total 10 workers using 14458 MB)
@  3148s  (total 10 workers using 14331 MB)
@  3158s  (total 10 workers using 14456 MB)
@  3169s  (total 10 workers using 14456 MB)
@  3180s  (total 10 workers using 14432 MB)
@  3191s  (total 10 workers using 14432 MB)
@  3202s  (total 10 workers using 14432 MB)
@  3213s  (total 10 workers using 14516 MB)
@  3224s  (total 10 workers using 14488 MB)
@  3235s  (total 10 workers using 14487 MB)
@  3246s  (total 10 workers using 14431 MB)
@  3257s  (total 10 workers using 14499 MB)
@  3267s  (total 10 workers using 14672 MB)
@  3278s  (total 10 workers using 14425 MB)
@  3289s  (total 10 workers using 14427 MB)
@  3300s  (total 10 workers using 14434 MB)
@  3311s  (total 10 workers using 14435 MB)
@  3322s  (total 10 workers using 14570 MB)
@  3333s  (total 10 workers using 14570 MB)
@  3344s  (total 10 workers using 14572 MB)
@  3355s  (total 10 workers using 14557 MB)
@  3366s  (total 10 workers using 14600 MB)
@  3376s  (total 10 workers using 14631 MB)
@  3387s  (total 10 workers using 14631 MB)
@  3398s  (total 10 workers using 14438 MB)
@  3409s  (total 10 workers using 14588 MB)
@  3420s  (total 10 workers using 14544 MB)
@  3431s  (total 10 workers using 14544 MB)
@  3442s  (total 10 workers using 14461 MB)
@  3453s  (total 10 workers using 14417 MB)
@  3464s  (total 10 workers using 14543 MB)
@  3475s  (total 10 workers using 14543 MB)
@  3485s  (total 10 workers using 14576 MB)
@  3496s  (total 10 workers using 14586 MB)
@  3507s  (total 10 workers using 14599 MB)
@  3518s  (total 10 workers using 14605 MB)
@  3529s  (total 10 workers using 14640 MB)
@  3540s  (total 10 workers using 14683 MB)
@  3551s  (total 10 workers using 14711 MB)
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3562s  (total 7 workers using 8772 MB)
@  3572s  (total 7 workers using 8772 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3574s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3574s  (worker 2 finished with result unknown) python3 avr.py
@  3574s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3574.70 seconds)[m
unknown
c done
