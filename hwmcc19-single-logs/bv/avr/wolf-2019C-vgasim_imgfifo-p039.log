c host: c3n26
c start: Fri Oct 18 20:45:09 CEST 2019
c arrayjobid: 17567256
c jobid: 17567557
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/vgasim_imgfifo-p039.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567557.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 6261)
@     0s  (started worker 1 with pid 6262)
@     0s  (started worker 2 with pid 6263)
@     0s  (started worker 3 with pid 6264)
@     0s  (started worker 4 with pid 6265)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 6381)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 264 MB)
@     2s  (started worker 6 with pid 6437)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 450 MB)
@     3s  (started worker 7 with pid 6499)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 543 MB)
@     4s  (started worker 8 with pid 6567)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 620 MB)
@     5s  (started worker 9 with pid 6659)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 710 MB)
@     7s  (started worker 10 with pid 6739)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 791 MB)
@    15s  (total 11 workers using 1315 MB)
@    27s  (total 11 workers using 1536 MB)
@    39s  (total 11 workers using 1900 MB)
@    50s  (total 11 workers using 2179 MB)
@    61s  (total 11 workers using 2468 MB)
@    72s  (total 11 workers using 2700 MB)
@    83s  (total 11 workers using 2986 MB)
@    94s  (total 11 workers using 3278 MB)
@   105s  (total 11 workers using 3446 MB)
@   116s  (total 11 workers using 3670 MB)
@   127s  (total 11 workers using 3947 MB)
@   138s  (total 11 workers using 4335 MB)
@   149s  (total 11 workers using 4506 MB)
@   161s  (total 11 workers using 4685 MB)
@   171s  (total 11 workers using 4954 MB)
@   183s  (total 11 workers using 5198 MB)
@   193s  (total 11 workers using 5419 MB)
@   205s  (total 11 workers using 5732 MB)
@   216s  (total 11 workers using 5873 MB)
@   227s  (total 11 workers using 6219 MB)
@   238s  (total 11 workers using 6347 MB)
@   249s  (total 11 workers using 6522 MB)
@   260s  (total 11 workers using 6725 MB)
@   271s  (total 11 workers using 6948 MB)
@   282s  (total 11 workers using 7233 MB)
@   293s  (total 11 workers using 7495 MB)
@   304s  (total 11 workers using 7825 MB)
@   315s  (total 11 workers using 8090 MB)
@   326s  (total 11 workers using 8299 MB)
@   337s  (total 11 workers using 8553 MB)
@   348s  (total 11 workers using 8673 MB)
@   359s  (total 11 workers using 8899 MB)
@   370s  (total 11 workers using 9218 MB)
@   381s  (total 11 workers using 9461 MB)
@   392s  (total 11 workers using 9657 MB)
@   403s  (total 11 workers using 10003 MB)
@   414s  (total 11 workers using 10201 MB)
@   425s  (total 11 workers using 10449 MB)
@   436s  (total 11 workers using 10727 MB)
@   447s  (total 11 workers using 10957 MB)
@   458s  (total 11 workers using 11288 MB)
@   469s  (total 11 workers using 11536 MB)
@   480s  (total 11 workers using 11910 MB)
@   491s  (total 11 workers using 12129 MB)
@   502s  (total 11 workers using 12492 MB)
@   513s  (total 11 workers using 12804 MB)
@   524s  (total 11 workers using 12968 MB)
@   536s  (total 11 workers using 13140 MB)
@   546s  (total 11 workers using 13433 MB)
@   558s  (total 11 workers using 13695 MB)
@   569s  (total 11 workers using 13939 MB)
@   580s  (total 11 workers using 14258 MB)
@   591s  (total 11 workers using 14503 MB)
@   602s  (total 11 workers using 14803 MB)
@   613s  (total 11 workers using 15136 MB)
@   624s  (total 11 workers using 15296 MB)
@   635s  (total 11 workers using 15583 MB)
@   646s  (total 11 workers using 15874 MB)
@   657s  (total 11 workers using 16163 MB)
@   668s  (total 11 workers using 16434 MB)
@   679s  (total 11 workers using 16671 MB)
@   690s  (total 11 workers using 16889 MB)
@   701s  (total 11 workers using 17109 MB)
@   712s  (total 11 workers using 17313 MB)
@   723s  (total 11 workers using 17586 MB)
@   735s  (total 11 workers using 17878 MB)
@   745s  (total 11 workers using 18083 MB)
@   757s  (total 11 workers using 18266 MB)
@   767s  (total 11 workers using 18461 MB)
@   779s  (total 11 workers using 18665 MB)
@   790s  (total 11 workers using 18885 MB)
@   801s  (total 11 workers using 19229 MB)
@   812s  (total 11 workers using 19463 MB)
@   823s  (total 11 workers using 19753 MB)
@   834s  (total 11 workers using 19929 MB)
@   845s  (total 11 workers using 20147 MB)
@   856s  (total 11 workers using 20431 MB)
@   867s  (total 11 workers using 20675 MB)
@   878s  (total 11 workers using 20929 MB)
@   889s  (total 11 workers using 21126 MB)
@   900s  (total 11 workers using 21331 MB)
@   911s  (total 11 workers using 21564 MB)
@   922s  (total 11 workers using 21626 MB)
@   925s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@   933s  (total 10 workers using 20675 MB)
@   944s  (total 10 workers using 20744 MB)
@   955s  (total 10 workers using 21061 MB)
@   966s  (total 10 workers using 21309 MB)
@   977s  (total 10 workers using 21416 MB)
@   988s  (total 10 workers using 21528 MB)
@   999s  (total 10 workers using 21639 MB)
@  1010s  (total 10 workers using 21713 MB)
@  1021s  (total 10 workers using 21926 MB)
@  1031s  (total 10 workers using 21903 MB)
@  1042s  (total 10 workers using 22066 MB)
@  1053s  (total 10 workers using 22162 MB)
@  1064s  (total 10 workers using 22259 MB)
@  1075s  (total 10 workers using 22363 MB)
@  1086s  (total 10 workers using 22487 MB)
@  1097s  (total 10 workers using 22620 MB)
@  1108s  (total 10 workers using 22742 MB)
@  1119s  (total 10 workers using 22916 MB)
@  1130s  (total 10 workers using 23135 MB)
@  1140s  (total 10 workers using 23333 MB)
@  1152s  (total 10 workers using 23502 MB)
@  1162s  (total 10 workers using 23704 MB)
@  1173s  (total 10 workers using 23771 MB)
@  1184s  (total 10 workers using 23913 MB)
@  1195s  (total 10 workers using 24201 MB)
@  1206s  (total 10 workers using 24188 MB)
@  1217s  (total 10 workers using 24332 MB)
@  1228s  (total 10 workers using 24485 MB)
@  1239s  (total 10 workers using 24543 MB)
@  1250s  (total 10 workers using 24691 MB)
@  1261s  (total 10 workers using 24897 MB)
@  1271s  (total 10 workers using 25036 MB)
@  1283s  (total 10 workers using 25158 MB)
@  1293s  (total 10 workers using 25301 MB)
@  1304s  (total 10 workers using 25455 MB)
@  1315s  (total 10 workers using 25587 MB)
@  1326s  (total 10 workers using 25744 MB)
@  1337s  (total 10 workers using 25885 MB)
@  1348s  (total 10 workers using 26038 MB)
@  1359s  (total 10 workers using 26155 MB)
@  1370s  (total 10 workers using 26335 MB)
@  1381s  (total 10 workers using 26467 MB)
@  1392s  (total 10 workers using 26748 MB)
@  1402s  (total 10 workers using 26734 MB)
@  1414s  (total 10 workers using 26906 MB)
@  1424s  (total 10 workers using 27067 MB)
@  1435s  (total 10 workers using 27284 MB)
@  1446s  (total 10 workers using 27157 MB)
@  1457s  (total 10 workers using 27282 MB)
@  1468s  (total 10 workers using 27329 MB)
@  1479s  (total 10 workers using 27503 MB)
@  1490s  (total 10 workers using 27546 MB)
@  1501s  (total 10 workers using 27533 MB)
@  1512s  (total 10 workers using 27538 MB)
@  1523s  (total 10 workers using 27550 MB)
@  1533s  (total 10 workers using 27554 MB)
@  1544s  (total 10 workers using 27588 MB)
@  1555s  (total 10 workers using 27665 MB)
@  1566s  (total 10 workers using 27692 MB)
@  1577s  (total 10 workers using 27736 MB)
@  1588s  (total 10 workers using 27786 MB)
@  1599s  (total 10 workers using 27849 MB)
@  1610s  (total 10 workers using 27905 MB)
@  1621s  (total 10 workers using 28135 MB)
@  1632s  (total 10 workers using 28056 MB)
@  1643s  (total 10 workers using 28121 MB)
@  1654s  (total 10 workers using 28188 MB)
@  1664s  (total 10 workers using 28257 MB)
@  1675s  (total 10 workers using 28332 MB)
@  1686s  (total 10 workers using 28422 MB)
@  1697s  (total 10 workers using 28343 MB)
@  1708s  (total 10 workers using 28487 MB)
@  1719s  (total 10 workers using 28505 MB)
@  1730s  (total 10 workers using 28547 MB)
@  1741s  (total 10 workers using 28549 MB)
@  1752s  (total 10 workers using 28646 MB)
@  1763s  (total 10 workers using 28669 MB)
@  1773s  (total 10 workers using 28677 MB)
@  1785s  (total 10 workers using 28677 MB)
@  1795s  (total 10 workers using 28689 MB)
@  1806s  (total 10 workers using 28699 MB)
@  1817s  (total 10 workers using 28704 MB)
@  1828s  (total 10 workers using 28721 MB)
@  1839s  (total 10 workers using 28748 MB)
@  1850s  (total 10 workers using 28788 MB)
@  1861s  (total 10 workers using 28790 MB)
@  1872s  (total 10 workers using 28860 MB)
@  1883s  (total 10 workers using 28907 MB)
@  1894s  (total 10 workers using 28964 MB)
@  1904s  (total 10 workers using 29033 MB)
@  1915s  (total 10 workers using 29101 MB)
@  1926s  (total 10 workers using 29164 MB)
@  1937s  (total 10 workers using 29217 MB)
@  1948s  (total 10 workers using 29261 MB)
@  1959s  (total 10 workers using 29326 MB)
@  1970s  (total 10 workers using 29444 MB)
@  1981s  (total 10 workers using 29489 MB)
@  1992s  (total 10 workers using 29500 MB)
@  2003s  (total 10 workers using 29547 MB)
@  2013s  (total 10 workers using 29434 MB)
@  2025s  (total 10 workers using 29450 MB)
@  2035s  (total 10 workers using 29469 MB)
@  2046s  (total 10 workers using 29335 MB)
@  2057s  (total 10 workers using 29426 MB)
@  2068s  (total 10 workers using 29426 MB)
@  2079s  (total 10 workers using 29438 MB)
@  2090s  (total 10 workers using 29512 MB)
@  2101s  (total 10 workers using 29529 MB)
@  2112s  (total 10 workers using 29529 MB)
@  2122s  (total 10 workers using 29436 MB)
@  2133s  (total 10 workers using 29529 MB)
@  2144s  (total 10 workers using 29565 MB)
@  2155s  (total 10 workers using 29565 MB)
@  2166s  (total 10 workers using 29565 MB)
@  2177s  (total 10 workers using 29608 MB)
@  2188s  (total 10 workers using 29608 MB)
@  2199s  (total 10 workers using 29618 MB)
@  2209s  (total 10 workers using 29794 MB)
@  2221s  (total 10 workers using 29638 MB)
@  2231s  (total 10 workers using 29638 MB)
@  2242s  (total 10 workers using 29711 MB)
@  2253s  (total 10 workers using 29711 MB)
@  2264s  (total 10 workers using 29647 MB)
@  2275s  (total 10 workers using 29689 MB)
@  2286s  (total 10 workers using 29649 MB)
@  2297s  (total 10 workers using 29631 MB)
@  2308s  (total 10 workers using 29631 MB)
@  2318s  (total 10 workers using 29672 MB)
@  2329s  (total 10 workers using 29672 MB)
@  2340s  (total 10 workers using 29687 MB)
@  2351s  (total 10 workers using 29687 MB)
@  2362s  (total 10 workers using 29687 MB)
@  2373s  (total 10 workers using 29687 MB)
@  2384s  (total 10 workers using 29714 MB)
@  2395s  (total 10 workers using 29714 MB)
@  2406s  (total 10 workers using 29714 MB)
@  2417s  (total 10 workers using 29714 MB)
@  2427s  (total 10 workers using 29714 MB)
@  2438s  (total 10 workers using 29731 MB)
@  2449s  (total 10 workers using 29731 MB)
@  2460s  (total 10 workers using 29757 MB)
@  2471s  (total 10 workers using 29792 MB)
@  2482s  (total 10 workers using 29737 MB)
@  2493s  (total 10 workers using 29761 MB)
@  2504s  (total 10 workers using 29761 MB)
@  2514s  (total 10 workers using 29768 MB)
@  2525s  (total 10 workers using 29766 MB)
@  2536s  (total 10 workers using 29769 MB)
@  2547s  (total 10 workers using 29769 MB)
@  2558s  (total 10 workers using 29769 MB)
@  2569s  (total 10 workers using 29831 MB)
@  2580s  (total 10 workers using 29756 MB)
@  2591s  (total 10 workers using 29756 MB)
@  2602s  (total 10 workers using 29785 MB)
@  2613s  (total 10 workers using 29770 MB)
@  2623s  (total 10 workers using 29770 MB)
@  2634s  (total 10 workers using 29770 MB)
@  2645s  (total 10 workers using 29771 MB)
@  2656s  (total 10 workers using 29771 MB)
@  2667s  (total 10 workers using 29771 MB)
@  2678s  (total 10 workers using 29815 MB)
@  2689s  (total 10 workers using 29816 MB)
@  2700s  (total 10 workers using 29816 MB)
@  2711s  (total 10 workers using 29816 MB)
@  2722s  (total 10 workers using 29816 MB)
@  2732s  (total 10 workers using 29816 MB)
@  2743s  (total 10 workers using 29812 MB)
@  2754s  (total 10 workers using 29843 MB)
@  2765s  (total 10 workers using 29844 MB)
@  2776s  (total 10 workers using 29844 MB)
@  2787s  (total 10 workers using 29844 MB)
@  2798s  (total 10 workers using 29825 MB)
@  2809s  (total 10 workers using 29842 MB)
@  2819s  (total 10 workers using 29847 MB)
@  2831s  (total 10 workers using 29858 MB)
@  2841s  (total 10 workers using 29859 MB)
@  2852s  (total 10 workers using 29861 MB)
@  2863s  (total 10 workers using 29885 MB)
@  2874s  (total 10 workers using 29885 MB)
@  2885s  (total 10 workers using 29885 MB)
@  2896s  (total 10 workers using 29886 MB)
@  2907s  (total 10 workers using 29885 MB)
@  2918s  (total 10 workers using 29885 MB)
@  2928s  (total 10 workers using 29885 MB)
@  2939s  (total 10 workers using 29886 MB)
@  2950s  (total 10 workers using 29886 MB)
@  2961s  (total 10 workers using 29886 MB)
@  2972s  (total 10 workers using 29870 MB)
@  2983s  (total 10 workers using 29911 MB)
@  2994s  (total 10 workers using 29920 MB)
@  3005s  (total 10 workers using 29921 MB)
@  3016s  (total 10 workers using 29921 MB)
@  3027s  (total 10 workers using 29899 MB)
@  3037s  (total 10 workers using 30137 MB)
@  3048s  (total 10 workers using 30014 MB)
@  3059s  (total 10 workers using 29972 MB)
@  3070s  (total 10 workers using 29943 MB)
@  3081s  (total 10 workers using 29989 MB)
@  3092s  (total 10 workers using 29967 MB)
@  3103s  (total 10 workers using 29923 MB)
@  3114s  (total 10 workers using 29940 MB)
@  3124s  (total 10 workers using 29967 MB)
@  3135s  (total 10 workers using 29968 MB)
@  3146s  (total 10 workers using 29968 MB)
@  3157s  (total 10 workers using 29979 MB)
@  3168s  (total 10 workers using 29979 MB)
@  3179s  (total 10 workers using 29979 MB)
@  3190s  (total 10 workers using 29866 MB)
@  3201s  (total 10 workers using 29971 MB)
@  3211s  (total 10 workers using 29959 MB)
@  3222s  (total 10 workers using 30015 MB)
@  3233s  (total 10 workers using 30046 MB)
@  3244s  (total 10 workers using 30050 MB)
@  3255s  (total 10 workers using 30046 MB)
@  3266s  (total 10 workers using 30005 MB)
@  3277s  (total 10 workers using 30027 MB)
@  3288s  (total 10 workers using 30027 MB)
@  3299s  (total 10 workers using 30027 MB)
@  3310s  (total 10 workers using 30027 MB)
@  3320s  (total 10 workers using 30025 MB)
@  3331s  (total 10 workers using 30029 MB)
@  3342s  (total 10 workers using 30029 MB)
@  3353s  (total 10 workers using 30029 MB)
@  3364s  (total 10 workers using 30031 MB)
@  3375s  (total 10 workers using 30032 MB)
@  3386s  (total 10 workers using 30032 MB)
@  3397s  (total 10 workers using 30032 MB)
@  3408s  (total 10 workers using 30032 MB)
@  3419s  (total 10 workers using 30032 MB)
@  3429s  (total 10 workers using 30032 MB)
@  3440s  (total 10 workers using 30032 MB)
@  3451s  (total 10 workers using 30067 MB)
@  3462s  (total 10 workers using 30067 MB)
@  3473s  (total 10 workers using 30067 MB)
@  3484s  (total 10 workers using 30284 MB)
@  3495s  (total 10 workers using 30075 MB)
@  3506s  (total 10 workers using 30049 MB)
@  3516s  (total 10 workers using 30049 MB)
@  3527s  (total 10 workers using 30049 MB)
@  3538s  (total 10 workers using 30049 MB)
@  3549s  (total 10 workers using 30052 MB)
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3560s  (total 7 workers using 25598 MB)
@  3571s  (total 7 workers using 25598 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3575s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3575s  (worker 2 finished with result unknown) python3 avr.py
@  3575s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.17 seconds)[m
unknown
c done
