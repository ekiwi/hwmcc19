c host: c3n13
c start: Fri Oct 18 20:40:08 CEST 2019
c arrayjobid: 17567256
c jobid: 17567470
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dspfilters_fastfir_second-p20.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567470.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 22828)
@     0s  (started worker 1 with pid 22829)
@     0s  (started worker 2 with pid 22830)
@     0s  (started worker 3 with pid 22831)
@     0s  (started worker 4 with pid 22832)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 22948)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 449 MB)
@     2s  (started worker 6 with pid 23004)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 664 MB)
@     3s  (started worker 7 with pid 23064)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 820 MB)
@     4s  (started worker 8 with pid 23132)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1059 MB)
@     5s  (started worker 9 with pid 23224)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1241 MB)
@     7s  (started worker 10 with pid 23304)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1350 MB)
@    15s  (total 11 workers using 1966 MB)
@    27s  (total 11 workers using 2662 MB)
@    39s  (total 11 workers using 3019 MB)
@    50s  (total 11 workers using 3281 MB)
@    61s  (total 11 workers using 3500 MB)
@    73s  (total 11 workers using 3984 MB)
@    84s  (total 11 workers using 4162 MB)
@    95s  (total 11 workers using 4232 MB)
@   106s  (total 11 workers using 4472 MB)
@   117s  (total 11 workers using 4549 MB)
@   120s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   128s  (total 10 workers using 4141 MB)
@   139s  (total 10 workers using 4201 MB)
@   150s  (total 10 workers using 4279 MB)
@   161s  (total 10 workers using 4419 MB)
@   172s  (total 10 workers using 4582 MB)
@   183s  (total 10 workers using 4715 MB)
@   193s  (total 10 workers using 4928 MB)
@   205s  (total 10 workers using 4943 MB)
@   215s  (total 10 workers using 5071 MB)
@   226s  (total 10 workers using 5056 MB)
@   237s  (total 10 workers using 5196 MB)
@   248s  (total 10 workers using 5341 MB)
@   259s  (total 10 workers using 5446 MB)
@   270s  (total 10 workers using 5540 MB)
@   281s  (total 10 workers using 5664 MB)
@   292s  (total 10 workers using 5824 MB)
@   303s  (total 10 workers using 6019 MB)
@   314s  (total 10 workers using 6107 MB)
@   325s  (total 10 workers using 6201 MB)
@   336s  (total 10 workers using 6246 MB)
@   347s  (total 10 workers using 6347 MB)
@   358s  (total 10 workers using 6424 MB)
@   369s  (total 10 workers using 6537 MB)
@   380s  (total 10 workers using 6566 MB)
@   391s  (total 10 workers using 6807 MB)
@   402s  (total 10 workers using 7024 MB)
@   413s  (total 10 workers using 7229 MB)
@   424s  (total 10 workers using 7440 MB)
@   434s  (total 10 workers using 7484 MB)
@   446s  (total 10 workers using 7563 MB)
@   456s  (total 10 workers using 7606 MB)
@   467s  (total 10 workers using 7716 MB)
@   478s  (total 10 workers using 7740 MB)
@   489s  (total 10 workers using 7794 MB)
@   500s  (total 10 workers using 7945 MB)
@   511s  (total 10 workers using 8088 MB)
@   522s  (total 10 workers using 8038 MB)
@   533s  (total 10 workers using 8171 MB)
@   544s  (total 10 workers using 8388 MB)
@   555s  (total 10 workers using 8439 MB)
@   566s  (total 10 workers using 8468 MB)
@   577s  (total 10 workers using 8500 MB)
@   588s  (total 10 workers using 8646 MB)
@   599s  (total 10 workers using 8654 MB)
@   610s  (total 10 workers using 8756 MB)
@   621s  (total 10 workers using 8791 MB)
@   632s  (total 10 workers using 8751 MB)
@   643s  (total 10 workers using 8985 MB)
@   654s  (total 10 workers using 9054 MB)
@   665s  (total 10 workers using 9078 MB)
@   675s  (total 10 workers using 9283 MB)
@   686s  (total 10 workers using 9434 MB)
@   697s  (total 10 workers using 9424 MB)
@   708s  (total 10 workers using 9656 MB)
@   719s  (total 10 workers using 9688 MB)
@   730s  (total 10 workers using 9779 MB)
@   741s  (total 10 workers using 9816 MB)
@   752s  (total 10 workers using 9990 MB)
@   763s  (total 10 workers using 10018 MB)
@   774s  (total 10 workers using 10178 MB)
@   785s  (total 10 workers using 10338 MB)
@   796s  (total 10 workers using 10391 MB)
@   807s  (total 10 workers using 10375 MB)
@   818s  (total 10 workers using 10451 MB)
@   829s  (total 10 workers using 10489 MB)
@   840s  (total 10 workers using 10481 MB)
@   851s  (total 10 workers using 10507 MB)
@   862s  (total 10 workers using 10611 MB)
@   873s  (total 10 workers using 10755 MB)
@   884s  (total 10 workers using 10663 MB)
@   895s  (total 10 workers using 10897 MB)
@   906s  (total 10 workers using 10965 MB)
@   917s  (total 10 workers using 11013 MB)
@   928s  (total 10 workers using 11037 MB)
@   938s  (total 10 workers using 11378 MB)
@   950s  (total 10 workers using 11414 MB)
@   960s  (total 10 workers using 11417 MB)
@   971s  (total 10 workers using 11572 MB)
@   982s  (total 10 workers using 11680 MB)
@   993s  (total 10 workers using 11695 MB)
@  1004s  (total 10 workers using 11834 MB)
@  1015s  (total 10 workers using 11861 MB)
@  1026s  (total 10 workers using 11935 MB)
@  1037s  (total 10 workers using 12283 MB)
@  1048s  (total 10 workers using 12329 MB)
@  1059s  (total 10 workers using 12332 MB)
@  1070s  (total 10 workers using 12349 MB)
@  1081s  (total 10 workers using 12482 MB)
@  1092s  (total 10 workers using 12483 MB)
@  1103s  (total 10 workers using 12508 MB)
@  1114s  (total 10 workers using 12678 MB)
@  1125s  (total 10 workers using 12724 MB)
@  1136s  (total 10 workers using 12944 MB)
@  1147s  (total 10 workers using 13031 MB)
@  1158s  (total 10 workers using 13084 MB)
@  1169s  (total 10 workers using 13146 MB)
@  1180s  (total 10 workers using 13068 MB)
@  1191s  (total 10 workers using 13254 MB)
@  1202s  (total 10 workers using 13328 MB)
@  1213s  (total 10 workers using 13380 MB)
@  1223s  (total 10 workers using 13395 MB)
@  1235s  (total 10 workers using 13400 MB)
@  1245s  (total 10 workers using 13469 MB)
@  1256s  (total 10 workers using 13598 MB)
@  1267s  (total 10 workers using 13709 MB)
@  1278s  (total 10 workers using 13700 MB)
@  1289s  (total 10 workers using 13640 MB)
@  1300s  (total 10 workers using 13758 MB)
@  1311s  (total 10 workers using 13779 MB)
@  1322s  (total 10 workers using 13928 MB)
@  1333s  (total 10 workers using 13846 MB)
@  1344s  (total 10 workers using 13891 MB)
@  1355s  (total 10 workers using 13922 MB)
@  1366s  (total 10 workers using 14018 MB)
@  1377s  (total 10 workers using 14086 MB)
@  1388s  (total 10 workers using 14097 MB)
@  1399s  (total 10 workers using 14181 MB)
@  1410s  (total 10 workers using 14167 MB)
@  1421s  (total 10 workers using 14237 MB)
@  1432s  (total 10 workers using 14271 MB)
@  1443s  (total 10 workers using 14398 MB)
@  1454s  (total 10 workers using 14505 MB)
@  1465s  (total 10 workers using 14612 MB)
@  1476s  (total 10 workers using 14622 MB)
@  1486s  (total 10 workers using 15029 MB)
@  1498s  (total 10 workers using 14976 MB)
@  1508s  (total 10 workers using 15065 MB)
@  1519s  (total 10 workers using 15083 MB)
@  1530s  (total 10 workers using 15218 MB)
@  1541s  (total 10 workers using 15230 MB)
@  1552s  (total 10 workers using 15347 MB)
@  1563s  (total 10 workers using 15305 MB)
@  1574s  (total 10 workers using 15560 MB)
@  1585s  (total 10 workers using 15675 MB)
@  1596s  (total 10 workers using 15589 MB)
@  1607s  (total 10 workers using 15522 MB)
@  1618s  (total 10 workers using 15546 MB)
@  1629s  (total 10 workers using 15579 MB)
@  1640s  (total 10 workers using 15731 MB)
@  1651s  (total 10 workers using 15902 MB)
@  1662s  (total 10 workers using 16029 MB)
@  1673s  (total 10 workers using 16025 MB)
@  1684s  (total 10 workers using 16110 MB)
@  1695s  (total 10 workers using 16638 MB)
@  1706s  (total 10 workers using 16659 MB)
@  1717s  (total 10 workers using 16740 MB)
@  1728s  (total 10 workers using 16777 MB)
@  1739s  (total 10 workers using 16821 MB)
@  1750s  (total 10 workers using 16880 MB)
@  1761s  (total 10 workers using 16966 MB)
@  1771s  (total 10 workers using 17053 MB)
@  1783s  (total 10 workers using 17023 MB)
@  1793s  (total 10 workers using 17152 MB)
@  1805s  (total 10 workers using 17223 MB)
@  1815s  (total 10 workers using 17365 MB)
@  1826s  (total 10 workers using 17238 MB)
@  1837s  (total 10 workers using 17256 MB)
@  1848s  (total 10 workers using 17362 MB)
@  1859s  (total 10 workers using 17389 MB)
@  1870s  (total 10 workers using 17331 MB)
@  1881s  (total 10 workers using 17568 MB)
@  1892s  (total 10 workers using 17637 MB)
@  1903s  (total 10 workers using 17534 MB)
@  1914s  (total 10 workers using 17588 MB)
@  1925s  (total 10 workers using 17513 MB)
@  1936s  (total 10 workers using 17715 MB)
@  1947s  (total 10 workers using 17806 MB)
@  1958s  (total 10 workers using 17933 MB)
@  1969s  (total 10 workers using 17976 MB)
@  1980s  (total 10 workers using 18081 MB)
@  1991s  (total 10 workers using 17937 MB)
@  2002s  (total 10 workers using 18077 MB)
@  2013s  (total 10 workers using 18150 MB)
@  2024s  (total 10 workers using 18091 MB)
@  2035s  (total 10 workers using 18234 MB)
@  2046s  (total 10 workers using 18356 MB)
@  2056s  (total 10 workers using 18398 MB)
@  2068s  (total 10 workers using 18495 MB)
@  2078s  (total 10 workers using 18473 MB)
@  2090s  (total 10 workers using 18479 MB)
@  2100s  (total 10 workers using 18635 MB)
@  2111s  (total 10 workers using 18666 MB)
@  2122s  (total 10 workers using 18612 MB)
@  2133s  (total 10 workers using 18862 MB)
@  2144s  (total 10 workers using 18826 MB)
@  2155s  (total 10 workers using 18971 MB)
@  2166s  (total 10 workers using 18917 MB)
@  2177s  (total 10 workers using 19113 MB)
@  2188s  (total 10 workers using 19196 MB)
@  2199s  (total 10 workers using 19298 MB)
@  2210s  (total 10 workers using 19327 MB)
@  2221s  (total 10 workers using 19287 MB)
@  2232s  (total 10 workers using 19525 MB)
@  2243s  (total 10 workers using 19541 MB)
@  2254s  (total 10 workers using 19485 MB)
@  2265s  (total 10 workers using 19634 MB)
@  2276s  (total 10 workers using 19662 MB)
@  2287s  (total 10 workers using 19834 MB)
@  2298s  (total 10 workers using 19772 MB)
@  2309s  (total 10 workers using 19879 MB)
@  2320s  (total 10 workers using 19826 MB)
@  2331s  (total 10 workers using 19861 MB)
@  2341s  (total 10 workers using 19960 MB)
@  2353s  (total 10 workers using 19958 MB)
@  2363s  (total 10 workers using 20068 MB)
@  2375s  (total 10 workers using 20082 MB)
@  2385s  (total 10 workers using 20125 MB)
@  2396s  (total 10 workers using 20145 MB)
@  2407s  (total 10 workers using 20373 MB)
@  2418s  (total 10 workers using 20333 MB)
@  2429s  (total 10 workers using 20432 MB)
@  2440s  (total 10 workers using 20284 MB)
@  2451s  (total 10 workers using 20480 MB)
@  2462s  (total 10 workers using 20409 MB)
@  2473s  (total 10 workers using 20525 MB)
@  2484s  (total 10 workers using 20603 MB)
@  2495s  (total 10 workers using 20790 MB)
@  2506s  (total 10 workers using 20675 MB)
@  2517s  (total 10 workers using 20942 MB)
@  2528s  (total 10 workers using 20774 MB)
@  2539s  (total 10 workers using 20895 MB)
@  2550s  (total 10 workers using 20829 MB)
@  2561s  (total 10 workers using 21078 MB)
@  2572s  (total 10 workers using 21213 MB)
@  2583s  (total 10 workers using 21152 MB)
@  2594s  (total 10 workers using 21254 MB)
@  2605s  (total 10 workers using 21300 MB)
@  2616s  (total 10 workers using 21480 MB)
@  2626s  (total 10 workers using 21458 MB)
@  2638s  (total 10 workers using 21439 MB)
@  2648s  (total 10 workers using 21478 MB)
@  2659s  (total 10 workers using 21580 MB)
@  2670s  (total 10 workers using 21608 MB)
@  2681s  (total 10 workers using 21711 MB)
@  2692s  (total 10 workers using 21677 MB)
@  2703s  (total 10 workers using 21667 MB)
@  2714s  (total 10 workers using 21666 MB)
@  2725s  (total 10 workers using 21656 MB)
@  2736s  (total 10 workers using 21738 MB)
@  2747s  (total 10 workers using 21924 MB)
@  2758s  (total 10 workers using 22111 MB)
@  2769s  (total 10 workers using 22149 MB)
@  2780s  (total 10 workers using 22186 MB)
@  2791s  (total 10 workers using 22374 MB)
@  2802s  (total 10 workers using 22115 MB)
@  2813s  (total 10 workers using 22175 MB)
@  2824s  (total 10 workers using 22350 MB)
@  2835s  (total 10 workers using 22408 MB)
@  2846s  (total 10 workers using 22270 MB)
@  2857s  (total 10 workers using 22573 MB)
@  2867s  (total 10 workers using 22733 MB)
@  2879s  (total 10 workers using 22783 MB)
@  2889s  (total 10 workers using 22997 MB)
@  2901s  (total 10 workers using 23037 MB)
@  2911s  (total 10 workers using 22776 MB)
@  2922s  (total 10 workers using 23123 MB)
@  2933s  (total 10 workers using 23132 MB)
@  2944s  (total 10 workers using 23276 MB)
@  2955s  (total 10 workers using 23211 MB)
@  2966s  (total 10 workers using 23428 MB)
@  2977s  (total 10 workers using 23330 MB)
@  2988s  (total 10 workers using 23386 MB)
@  2999s  (total 10 workers using 23541 MB)
@  3010s  (total 10 workers using 23611 MB)
@  3021s  (total 10 workers using 23740 MB)
@  3032s  (total 10 workers using 23564 MB)
@  3043s  (total 10 workers using 23671 MB)
@  3054s  (total 10 workers using 23717 MB)
@  3065s  (total 10 workers using 23657 MB)
@  3076s  (total 10 workers using 24268 MB)
@  3087s  (total 10 workers using 24479 MB)
@  3098s  (total 10 workers using 24296 MB)
@  3109s  (total 10 workers using 24359 MB)
@  3120s  (total 10 workers using 24494 MB)
@  3130s  (total 10 workers using 24680 MB)
@  3142s  (total 10 workers using 24462 MB)
@  3152s  (total 10 workers using 24455 MB)
@  3163s  (total 10 workers using 24635 MB)
@  3174s  (total 10 workers using 24590 MB)
@  3185s  (total 10 workers using 24698 MB)
@  3196s  (total 10 workers using 24567 MB)
@  3207s  (total 10 workers using 24822 MB)
@  3218s  (total 10 workers using 24815 MB)
@  3229s  (total 10 workers using 25003 MB)
@  3240s  (total 10 workers using 24886 MB)
@  3251s  (total 10 workers using 25171 MB)
@  3262s  (total 10 workers using 25042 MB)
@  3273s  (total 10 workers using 25199 MB)
@  3284s  (total 10 workers using 25008 MB)
@  3295s  (total 10 workers using 25110 MB)
@  3306s  (total 10 workers using 25266 MB)
@  3317s  (total 10 workers using 25345 MB)
@  3328s  (total 10 workers using 25289 MB)
@  3339s  (total 10 workers using 25485 MB)
@  3349s  (total 10 workers using 25459 MB)
@  3361s  (total 10 workers using 25662 MB)
@  3371s  (total 10 workers using 25645 MB)
@  3382s  (total 10 workers using 25525 MB)
@  3393s  (total 10 workers using 25700 MB)
@  3404s  (total 10 workers using 25675 MB)
@  3415s  (total 10 workers using 25783 MB)
@  3426s  (total 10 workers using 25990 MB)
@  3437s  (total 10 workers using 25956 MB)
@  3448s  (total 10 workers using 26103 MB)
@  3459s  (total 10 workers using 25997 MB)
@  3470s  (total 10 workers using 26214 MB)
@  3481s  (total 10 workers using 26337 MB)
@  3492s  (total 10 workers using 26520 MB)
@  3503s  (total 10 workers using 26325 MB)
@  3514s  (total 10 workers using 26377 MB)
@  3525s  (total 10 workers using 26440 MB)
@  3536s  (total 10 workers using 26519 MB)
@  3547s  (total 10 workers using 26797 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3556s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3557s  (total 4 workers using 8216 MB)
@  3568s  (total 4 workers using 8216 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3574s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3574s  (worker 2 finished with result unknown) python3 avr.py
@  3574s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3574.37 seconds)[m
unknown
c done
