c host: c3n27
c start: Fri Oct 18 20:16:12 CEST 2019
c arrayjobid: 17567256
c jobid: 17567462
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dspfilters_fastfir_second-p08.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567462.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 10116)
@     0s  (started worker 1 with pid 10117)
@     0s  (started worker 2 with pid 10118)
@     0s  (started worker 3 with pid 10119)
@     0s  (started worker 4 with pid 10120)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 10236)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 466 MB)
@     2s  (started worker 6 with pid 10292)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 707 MB)
@     3s  (started worker 7 with pid 10354)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 887 MB)
@     4s  (started worker 8 with pid 10422)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1093 MB)
@     5s  (started worker 9 with pid 10514)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1283 MB)
@     7s  (started worker 10 with pid 10594)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1389 MB)
@    15s  (total 11 workers using 2098 MB)
@    27s  (total 11 workers using 2776 MB)
@    39s  (total 11 workers using 3162 MB)
@    50s  (total 11 workers using 3555 MB)
@    61s  (total 11 workers using 3892 MB)
@    73s  (total 11 workers using 4233 MB)
@    84s  (total 11 workers using 4382 MB)
@    95s  (total 11 workers using 4671 MB)
@   106s  (total 11 workers using 4838 MB)
@   117s  (total 11 workers using 4878 MB)
@   128s  (total 11 workers using 5129 MB)
@   139s  (total 11 workers using 5299 MB)
@   150s  (total 11 workers using 5525 MB)
@   161s  (total 11 workers using 5708 MB)
@   172s  (total 11 workers using 5907 MB)
@   183s  (total 11 workers using 6065 MB)
@   194s  (total 11 workers using 6178 MB)
@   206s  (total 11 workers using 6325 MB)
@   217s  (total 11 workers using 6386 MB)
@   228s  (total 11 workers using 6598 MB)
@   239s  (total 11 workers using 6718 MB)
@   250s  (total 11 workers using 6898 MB)
@   261s  (total 11 workers using 7063 MB)
@   272s  (total 11 workers using 7182 MB)
@   283s  (total 11 workers using 7175 MB)
@   294s  (total 11 workers using 7362 MB)
@   305s  (total 11 workers using 7450 MB)
@   316s  (total 11 workers using 7711 MB)
@   327s  (total 11 workers using 7828 MB)
@   339s  (total 11 workers using 7987 MB)
@   350s  (total 11 workers using 8087 MB)
@   361s  (total 11 workers using 8286 MB)
@   372s  (total 11 workers using 8265 MB)
@   383s  (total 11 workers using 8404 MB)
@   394s  (total 11 workers using 8641 MB)
@   405s  (total 11 workers using 8943 MB)
@   416s  (total 11 workers using 9086 MB)
@   427s  (total 11 workers using 9128 MB)
@   438s  (total 11 workers using 9405 MB)
@   449s  (total 11 workers using 9444 MB)
@   460s  (total 11 workers using 9536 MB)
@   471s  (total 11 workers using 9698 MB)
@   482s  (total 11 workers using 9797 MB)
@   494s  (total 11 workers using 10001 MB)
@   505s  (total 11 workers using 9910 MB)
@   516s  (total 11 workers using 9983 MB)
@   527s  (total 11 workers using 10066 MB)
@   538s  (total 11 workers using 10151 MB)
@   549s  (total 11 workers using 10389 MB)
@   560s  (total 11 workers using 10520 MB)
@   571s  (total 11 workers using 10609 MB)
@   582s  (total 11 workers using 10670 MB)
@   593s  (total 11 workers using 10826 MB)
@   604s  (total 11 workers using 10897 MB)
@   615s  (total 11 workers using 11066 MB)
@   627s  (total 11 workers using 11188 MB)
@   637s  (total 11 workers using 11254 MB)
@   649s  (total 11 workers using 11329 MB)
@   660s  (total 11 workers using 11453 MB)
@   671s  (total 11 workers using 11479 MB)
@   682s  (total 11 workers using 11595 MB)
@   693s  (total 11 workers using 11690 MB)
@   704s  (total 11 workers using 11749 MB)
@   715s  (total 11 workers using 11832 MB)
@   726s  (total 11 workers using 11935 MB)
@   737s  (total 11 workers using 11910 MB)
@   748s  (total 11 workers using 12038 MB)
@   759s  (total 11 workers using 12124 MB)
@   770s  (total 11 workers using 12102 MB)
@   782s  (total 11 workers using 12231 MB)
@   793s  (total 11 workers using 12295 MB)
@   804s  (total 11 workers using 12336 MB)
@   815s  (total 11 workers using 12482 MB)
@   826s  (total 11 workers using 12631 MB)
@   837s  (total 11 workers using 12686 MB)
@   848s  (total 11 workers using 12943 MB)
@   859s  (total 11 workers using 13083 MB)
@   870s  (total 11 workers using 13151 MB)
@   881s  (total 11 workers using 13200 MB)
@   892s  (total 11 workers using 13235 MB)
@   896s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   903s  (total 10 workers using 11200 MB)
@   914s  (total 10 workers using 11237 MB)
@   925s  (total 10 workers using 11379 MB)
@   936s  (total 10 workers using 11345 MB)
@   947s  (total 10 workers using 11564 MB)
@   958s  (total 10 workers using 11722 MB)
@   969s  (total 10 workers using 11723 MB)
@   980s  (total 10 workers using 11831 MB)
@   991s  (total 10 workers using 11921 MB)
@  1002s  (total 10 workers using 11895 MB)
@  1013s  (total 10 workers using 11909 MB)
@  1024s  (total 10 workers using 11903 MB)
@  1035s  (total 10 workers using 12183 MB)
@  1046s  (total 10 workers using 12234 MB)
@  1057s  (total 10 workers using 12266 MB)
@  1068s  (total 10 workers using 12300 MB)
@  1079s  (total 10 workers using 12412 MB)
@  1090s  (total 10 workers using 12527 MB)
@  1101s  (total 10 workers using 12543 MB)
@  1112s  (total 10 workers using 12608 MB)
@  1123s  (total 10 workers using 12576 MB)
@  1134s  (total 10 workers using 12723 MB)
@  1145s  (total 10 workers using 12864 MB)
@  1156s  (total 10 workers using 12885 MB)
@  1167s  (total 10 workers using 12867 MB)
@  1178s  (total 10 workers using 13108 MB)
@  1189s  (total 10 workers using 13114 MB)
@  1200s  (total 10 workers using 13140 MB)
@  1210s  (total 10 workers using 13255 MB)
@  1221s  (total 10 workers using 13284 MB)
@  1232s  (total 10 workers using 13364 MB)
@  1243s  (total 10 workers using 13329 MB)
@  1254s  (total 10 workers using 13617 MB)
@  1265s  (total 10 workers using 13584 MB)
@  1276s  (total 10 workers using 13672 MB)
@  1287s  (total 10 workers using 13793 MB)
@  1298s  (total 10 workers using 13817 MB)
@  1309s  (total 10 workers using 13925 MB)
@  1320s  (total 10 workers using 14017 MB)
@  1331s  (total 10 workers using 14071 MB)
@  1342s  (total 10 workers using 14186 MB)
@  1353s  (total 10 workers using 14218 MB)
@  1364s  (total 10 workers using 14353 MB)
@  1375s  (total 10 workers using 14439 MB)
@  1386s  (total 10 workers using 14492 MB)
@  1397s  (total 10 workers using 14524 MB)
@  1408s  (total 10 workers using 14570 MB)
@  1419s  (total 10 workers using 14724 MB)
@  1430s  (total 10 workers using 14820 MB)
@  1441s  (total 10 workers using 14833 MB)
@  1452s  (total 10 workers using 14999 MB)
@  1463s  (total 10 workers using 15045 MB)
@  1474s  (total 10 workers using 15201 MB)
@  1485s  (total 10 workers using 15264 MB)
@  1495s  (total 10 workers using 15257 MB)
@  1507s  (total 10 workers using 15374 MB)
@  1517s  (total 10 workers using 15710 MB)
@  1528s  (total 10 workers using 15776 MB)
@  1539s  (total 10 workers using 15875 MB)
@  1550s  (total 10 workers using 15929 MB)
@  1561s  (total 10 workers using 15994 MB)
@  1572s  (total 10 workers using 15916 MB)
@  1583s  (total 10 workers using 15950 MB)
@  1594s  (total 10 workers using 16104 MB)
@  1605s  (total 10 workers using 16205 MB)
@  1616s  (total 10 workers using 16376 MB)
@  1627s  (total 10 workers using 16377 MB)
@  1638s  (total 10 workers using 16294 MB)
@  1649s  (total 10 workers using 16485 MB)
@  1660s  (total 10 workers using 16458 MB)
@  1671s  (total 10 workers using 16619 MB)
@  1682s  (total 10 workers using 16678 MB)
@  1693s  (total 10 workers using 16730 MB)
@  1704s  (total 10 workers using 16714 MB)
@  1715s  (total 10 workers using 16747 MB)
@  1726s  (total 10 workers using 16926 MB)
@  1737s  (total 10 workers using 17046 MB)
@  1748s  (total 10 workers using 16857 MB)
@  1759s  (total 10 workers using 17050 MB)
@  1770s  (total 10 workers using 16939 MB)
@  1780s  (total 10 workers using 17081 MB)
@  1792s  (total 10 workers using 17272 MB)
@  1802s  (total 10 workers using 17326 MB)
@  1813s  (total 10 workers using 17491 MB)
@  1824s  (total 10 workers using 17583 MB)
@  1835s  (total 10 workers using 17673 MB)
@  1846s  (total 10 workers using 17603 MB)
@  1857s  (total 10 workers using 17609 MB)
@  1868s  (total 10 workers using 17656 MB)
@  1879s  (total 10 workers using 17693 MB)
@  1890s  (total 10 workers using 17915 MB)
@  1901s  (total 10 workers using 17794 MB)
@  1912s  (total 10 workers using 17882 MB)
@  1923s  (total 10 workers using 17850 MB)
@  1934s  (total 10 workers using 17955 MB)
@  1945s  (total 10 workers using 18082 MB)
@  1956s  (total 10 workers using 18112 MB)
@  1967s  (total 10 workers using 18213 MB)
@  1978s  (total 10 workers using 18350 MB)
@  1989s  (total 10 workers using 18177 MB)
@  2000s  (total 10 workers using 18209 MB)
@  2011s  (total 10 workers using 18331 MB)
@  2021s  (total 10 workers using 18453 MB)
@  2033s  (total 10 workers using 18680 MB)
@  2043s  (total 10 workers using 18840 MB)
@  2055s  (total 10 workers using 18898 MB)
@  2065s  (total 10 workers using 18977 MB)
@  2076s  (total 10 workers using 18787 MB)
@  2087s  (total 10 workers using 18774 MB)
@  2098s  (total 10 workers using 18966 MB)
@  2109s  (total 10 workers using 19038 MB)
@  2120s  (total 10 workers using 19090 MB)
@  2131s  (total 10 workers using 19239 MB)
@  2142s  (total 10 workers using 19281 MB)
@  2153s  (total 10 workers using 19272 MB)
@  2164s  (total 10 workers using 19355 MB)
@  2175s  (total 10 workers using 19352 MB)
@  2186s  (total 10 workers using 19163 MB)
@  2197s  (total 10 workers using 19362 MB)
@  2208s  (total 10 workers using 19599 MB)
@  2219s  (total 10 workers using 19516 MB)
@  2230s  (total 10 workers using 19627 MB)
@  2241s  (total 10 workers using 19703 MB)
@  2252s  (total 10 workers using 19718 MB)
@  2263s  (total 10 workers using 19923 MB)
@  2274s  (total 10 workers using 20056 MB)
@  2285s  (total 10 workers using 20230 MB)
@  2296s  (total 10 workers using 20124 MB)
@  2307s  (total 10 workers using 20198 MB)
@  2318s  (total 10 workers using 20229 MB)
@  2328s  (total 10 workers using 20337 MB)
@  2340s  (total 10 workers using 20388 MB)
@  2350s  (total 10 workers using 20756 MB)
@  2361s  (total 10 workers using 20567 MB)
@  2372s  (total 10 workers using 20379 MB)
@  2383s  (total 10 workers using 20394 MB)
@  2394s  (total 10 workers using 20417 MB)
@  2405s  (total 10 workers using 20577 MB)
@  2416s  (total 10 workers using 20638 MB)
@  2427s  (total 10 workers using 20700 MB)
@  2438s  (total 10 workers using 20900 MB)
@  2449s  (total 10 workers using 20901 MB)
@  2460s  (total 10 workers using 20961 MB)
@  2471s  (total 10 workers using 20831 MB)
@  2482s  (total 10 workers using 20862 MB)
@  2493s  (total 10 workers using 20905 MB)
@  2504s  (total 10 workers using 20785 MB)
@  2515s  (total 10 workers using 21096 MB)
@  2526s  (total 10 workers using 21366 MB)
@  2537s  (total 10 workers using 21457 MB)
@  2548s  (total 10 workers using 21516 MB)
@  2559s  (total 10 workers using 21328 MB)
@  2569s  (total 10 workers using 21392 MB)
@  2581s  (total 10 workers using 21642 MB)
@  2591s  (total 10 workers using 21697 MB)
@  2602s  (total 10 workers using 21669 MB)
@  2613s  (total 10 workers using 21802 MB)
@  2624s  (total 10 workers using 22045 MB)
@  2635s  (total 10 workers using 22175 MB)
@  2646s  (total 10 workers using 21991 MB)
@  2657s  (total 10 workers using 22183 MB)
@  2668s  (total 10 workers using 22076 MB)
@  2679s  (total 10 workers using 22096 MB)
@  2690s  (total 10 workers using 22291 MB)
@  2701s  (total 10 workers using 22313 MB)
@  2712s  (total 10 workers using 22114 MB)
@  2723s  (total 10 workers using 22418 MB)
@  2734s  (total 10 workers using 22286 MB)
@  2745s  (total 10 workers using 22451 MB)
@  2756s  (total 10 workers using 22611 MB)
@  2767s  (total 10 workers using 22620 MB)
@  2778s  (total 10 workers using 22535 MB)
@  2789s  (total 10 workers using 23016 MB)
@  2800s  (total 10 workers using 23213 MB)
@  2811s  (total 10 workers using 23137 MB)
@  2822s  (total 10 workers using 23105 MB)
@  2832s  (total 10 workers using 23205 MB)
@  2843s  (total 10 workers using 23262 MB)
@  2854s  (total 10 workers using 23256 MB)
@  2865s  (total 10 workers using 23184 MB)
@  2876s  (total 10 workers using 23237 MB)
@  2887s  (total 10 workers using 23520 MB)
@  2898s  (total 10 workers using 23488 MB)
@  2909s  (total 10 workers using 23563 MB)
@  2920s  (total 10 workers using 23625 MB)
@  2931s  (total 10 workers using 23778 MB)
@  2942s  (total 10 workers using 23638 MB)
@  2953s  (total 10 workers using 23697 MB)
@  2964s  (total 10 workers using 23845 MB)
@  2975s  (total 10 workers using 23876 MB)
@  2986s  (total 10 workers using 23858 MB)
@  2997s  (total 10 workers using 24037 MB)
@  3008s  (total 10 workers using 23879 MB)
@  3019s  (total 10 workers using 24122 MB)
@  3030s  (total 10 workers using 24097 MB)
@  3041s  (total 10 workers using 24024 MB)
@  3052s  (total 10 workers using 24133 MB)
@  3063s  (total 10 workers using 24221 MB)
@  3073s  (total 10 workers using 24428 MB)
@  3085s  (total 10 workers using 24308 MB)
@  3095s  (total 10 workers using 24357 MB)
@  3106s  (total 10 workers using 24534 MB)
@  3117s  (total 10 workers using 24448 MB)
@  3128s  (total 10 workers using 24566 MB)
@  3139s  (total 10 workers using 24585 MB)
@  3150s  (total 10 workers using 24672 MB)
@  3161s  (total 10 workers using 24612 MB)
@  3172s  (total 10 workers using 24844 MB)
@  3183s  (total 10 workers using 24819 MB)
@  3194s  (total 10 workers using 24896 MB)
@  3205s  (total 10 workers using 25161 MB)
@  3216s  (total 10 workers using 25271 MB)
@  3227s  (total 10 workers using 25191 MB)
@  3238s  (total 10 workers using 25287 MB)
@  3249s  (total 10 workers using 25166 MB)
@  3260s  (total 10 workers using 25453 MB)
@  3271s  (total 10 workers using 25407 MB)
@  3282s  (total 10 workers using 25516 MB)
@  3293s  (total 10 workers using 25648 MB)
@  3304s  (total 10 workers using 25673 MB)
@  3315s  (total 10 workers using 25745 MB)
@  3326s  (total 10 workers using 26018 MB)
@  3336s  (total 10 workers using 25960 MB)
@  3348s  (total 10 workers using 26166 MB)
@  3358s  (total 10 workers using 26054 MB)
@  3369s  (total 10 workers using 26051 MB)
@  3380s  (total 10 workers using 26039 MB)
@  3391s  (total 10 workers using 26096 MB)
@  3402s  (total 10 workers using 26182 MB)
@  3413s  (total 10 workers using 26383 MB)
@  3424s  (total 10 workers using 26341 MB)
@  3435s  (total 10 workers using 26628 MB)
@  3446s  (total 10 workers using 26692 MB)
@  3457s  (total 10 workers using 26406 MB)
@  3468s  (total 10 workers using 27043 MB)
@  3479s  (total 10 workers using 26883 MB)
@  3490s  (total 10 workers using 26902 MB)
@  3501s  (total 10 workers using 26905 MB)
@  3511s  (total 10 workers using 26962 MB)
@  3523s  (total 10 workers using 27057 MB)
@  3533s  (total 10 workers using 27117 MB)
@  3544s  (total 10 workers using 27037 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3555s  (total 4 workers using 17658 MB)
@  3556s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3566s  (total 3 workers using 4604 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 2 finished with result unknown) python3 avr.py
@  3574s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3574s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3574s  (copied results from worker 0 in /tmp//pr_test)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3574.00 seconds)[m
unknown
c done
