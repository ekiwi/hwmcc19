c host: c3n24
c start: Fri Oct 18 19:16:02 CEST 2019
c arrayjobid: 17567256
c jobid: 17567380
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/data-integrity/unsafe/circular_pointer_top_w64_d64_e0.btor2
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567380.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 22991)
@     0s  (started worker 1 with pid 22992)
@     0s  (started worker 2 with pid 22993)
@     0s  (started worker 3 with pid 22994)
@     0s  (started worker 4 with pid 22995)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 23111)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 196 MB)
@     2s  (started worker 6 with pid 23167)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 327 MB)
@     3s  (started worker 7 with pid 23229)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 405 MB)
@     4s  (started worker 8 with pid 23297)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 496 MB)
@     5s  (started worker 9 with pid 23390)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 646 MB)
@     7s  (started worker 10 with pid 23470)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 787 MB)
@    15s  (total 11 workers using 1146 MB)
@    27s  (total 11 workers using 1423 MB)
@    39s  (total 11 workers using 1604 MB)
@    50s  (total 11 workers using 1753 MB)
@    61s  (total 11 workers using 1887 MB)
@    72s  (total 11 workers using 2200 MB)
@    80s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@    83s  (total 10 workers using 1996 MB)
@    94s  (total 10 workers using 2181 MB)
@   105s  (total 10 workers using 2312 MB)
@   116s  (total 10 workers using 2407 MB)
@   127s  (total 10 workers using 2626 MB)
@   138s  (total 10 workers using 2716 MB)
@   149s  (total 10 workers using 2833 MB)
@   160s  (total 10 workers using 2938 MB)
@   171s  (total 10 workers using 3033 MB)
@   182s  (total 10 workers using 3112 MB)
@   193s  (total 10 workers using 3151 MB)
@   204s  (total 10 workers using 3139 MB)
@   215s  (total 10 workers using 3241 MB)
@   226s  (total 10 workers using 3420 MB)
@   236s  (total 10 workers using 3490 MB)
@   247s  (total 10 workers using 3508 MB)
@   258s  (total 10 workers using 3613 MB)
@   269s  (total 10 workers using 3668 MB)
@   280s  (total 10 workers using 3766 MB)
@   291s  (total 10 workers using 3860 MB)
@   302s  (total 10 workers using 3918 MB)
@   313s  (total 10 workers using 3954 MB)
@   324s  (total 10 workers using 3947 MB)
@   335s  (total 10 workers using 3919 MB)
@   346s  (total 10 workers using 3995 MB)
@   357s  (total 10 workers using 4084 MB)
@   367s  (total 10 workers using 4142 MB)
@   378s  (total 10 workers using 4165 MB)
@   389s  (total 10 workers using 4226 MB)
@   400s  (total 10 workers using 4255 MB)
@   411s  (total 10 workers using 4309 MB)
@   422s  (total 10 workers using 4393 MB)
@   433s  (total 10 workers using 4422 MB)
@   444s  (total 10 workers using 4427 MB)
@   455s  (total 10 workers using 4438 MB)
@   466s  (total 10 workers using 4528 MB)
@   477s  (total 10 workers using 4572 MB)
@   488s  (total 10 workers using 4593 MB)
@   498s  (total 10 workers using 4632 MB)
@   509s  (total 10 workers using 4650 MB)
@   520s  (total 10 workers using 4743 MB)
@   531s  (total 10 workers using 4911 MB)
@   542s  (total 10 workers using 5015 MB)
@   553s  (total 10 workers using 5103 MB)
@   564s  (total 10 workers using 5178 MB)
@   575s  (total 10 workers using 5203 MB)
@   586s  (total 10 workers using 5373 MB)
@   597s  (total 10 workers using 5524 MB)
@   608s  (total 10 workers using 5618 MB)
@   619s  (total 10 workers using 5653 MB)
@   629s  (total 10 workers using 5705 MB)
@   640s  (total 10 workers using 5768 MB)
@   651s  (total 10 workers using 5791 MB)
@   662s  (total 10 workers using 5831 MB)
@   673s  (total 10 workers using 5888 MB)
@   684s  (total 10 workers using 5905 MB)
@   695s  (total 10 workers using 6019 MB)
@   706s  (total 10 workers using 6108 MB)
@   717s  (total 10 workers using 6135 MB)
@   728s  (total 10 workers using 6195 MB)
@   739s  (total 10 workers using 6215 MB)
@   750s  (total 10 workers using 6270 MB)
@   760s  (total 10 workers using 6302 MB)
@   771s  (total 10 workers using 6330 MB)
@   782s  (total 10 workers using 6386 MB)
@   793s  (total 10 workers using 6400 MB)
@   804s  (total 10 workers using 6506 MB)
@   815s  (total 10 workers using 6534 MB)
@   826s  (total 10 workers using 6564 MB)
@   837s  (total 10 workers using 6639 MB)
@   848s  (total 10 workers using 6740 MB)
@   859s  (total 10 workers using 6860 MB)
@   870s  (total 10 workers using 6895 MB)
@   881s  (total 10 workers using 6987 MB)
@   892s  (total 10 workers using 7036 MB)
@   903s  (total 10 workers using 7055 MB)
@   913s  (total 10 workers using 7120 MB)
@   925s  (total 10 workers using 7280 MB)
@   935s  (total 10 workers using 7297 MB)
@   946s  (total 10 workers using 7349 MB)
@   957s  (total 10 workers using 7366 MB)
@   968s  (total 10 workers using 7384 MB)
@   979s  (total 10 workers using 7411 MB)
@   990s  (total 10 workers using 7390 MB)
@  1001s  (total 10 workers using 7441 MB)
@  1012s  (total 10 workers using 7491 MB)
@  1023s  (total 10 workers using 7606 MB)
@  1034s  (total 10 workers using 7614 MB)
@  1045s  (total 10 workers using 7646 MB)
@  1056s  (total 10 workers using 7657 MB)
@  1067s  (total 10 workers using 7662 MB)
@  1078s  (total 10 workers using 7644 MB)
@  1088s  (total 10 workers using 7689 MB)
@  1099s  (total 10 workers using 7707 MB)
@  1110s  (total 10 workers using 7684 MB)
@  1121s  (total 10 workers using 7754 MB)
@  1132s  (total 10 workers using 7771 MB)
@  1143s  (total 10 workers using 7805 MB)
@  1154s  (total 10 workers using 7824 MB)
@  1165s  (total 10 workers using 7875 MB)
@  1176s  (total 10 workers using 7942 MB)
@  1187s  (total 10 workers using 7967 MB)
@  1198s  (total 10 workers using 8163 MB)
@  1209s  (total 10 workers using 8244 MB)
@  1219s  (total 10 workers using 8461 MB)
@  1231s  (total 10 workers using 8515 MB)
@  1241s  (total 10 workers using 8530 MB)
@  1252s  (total 10 workers using 8607 MB)
@  1263s  (total 10 workers using 8668 MB)
@  1274s  (total 10 workers using 8795 MB)
@  1285s  (total 10 workers using 8821 MB)
@  1296s  (total 10 workers using 8845 MB)
@  1307s  (total 10 workers using 8881 MB)
@  1318s  (total 10 workers using 8977 MB)
@  1329s  (total 10 workers using 8891 MB)
@  1340s  (total 10 workers using 8922 MB)
@  1350s  (total 10 workers using 9020 MB)
@  1362s  (total 10 workers using 8999 MB)
@  1372s  (total 10 workers using 9002 MB)
@  1383s  (total 10 workers using 9032 MB)
@  1394s  (total 10 workers using 9017 MB)
@  1405s  (total 10 workers using 9057 MB)
@  1416s  (total 10 workers using 9076 MB)
@  1427s  (total 10 workers using 9114 MB)
@  1438s  (total 10 workers using 9173 MB)
@  1449s  (total 10 workers using 9161 MB)
@  1460s  (total 10 workers using 9278 MB)
@  1471s  (total 10 workers using 9307 MB)
@  1481s  (total 10 workers using 9323 MB)
@  1492s  (total 10 workers using 9298 MB)
@  1503s  (total 10 workers using 9311 MB)
@  1514s  (total 10 workers using 9318 MB)
@  1525s  (total 10 workers using 9390 MB)
@  1536s  (total 10 workers using 9402 MB)
@  1547s  (total 10 workers using 9384 MB)
@  1558s  (total 10 workers using 9449 MB)
@  1569s  (total 10 workers using 9449 MB)
@  1580s  (total 10 workers using 9502 MB)
@  1590s  (total 10 workers using 9499 MB)
@  1601s  (total 10 workers using 9564 MB)
@  1612s  (total 10 workers using 9591 MB)
@  1623s  (total 10 workers using 9528 MB)
@  1634s  (total 10 workers using 9564 MB)
@  1645s  (total 10 workers using 9629 MB)
@  1656s  (total 10 workers using 9688 MB)
@  1667s  (total 10 workers using 9780 MB)
@  1678s  (total 10 workers using 10036 MB)
@  1689s  (total 10 workers using 10062 MB)
@  1700s  (total 10 workers using 10103 MB)
@  1711s  (total 10 workers using 10245 MB)
@  1721s  (total 10 workers using 10417 MB)
@  1733s  (total 10 workers using 10487 MB)
@  1743s  (total 10 workers using 10467 MB)
@  1754s  (total 10 workers using 10578 MB)
@  1765s  (total 10 workers using 10642 MB)
@  1776s  (total 10 workers using 10651 MB)
@  1787s  (total 10 workers using 10655 MB)
@  1798s  (total 10 workers using 10778 MB)
@  1809s  (total 10 workers using 10752 MB)
@  1820s  (total 10 workers using 10838 MB)
@  1831s  (total 10 workers using 10893 MB)
@  1842s  (total 10 workers using 10928 MB)
@  1852s  (total 10 workers using 10954 MB)
@  1863s  (total 10 workers using 10966 MB)
@  1874s  (total 10 workers using 10987 MB)
@  1885s  (total 10 workers using 11012 MB)
@  1896s  (total 10 workers using 11037 MB)
@  1907s  (total 10 workers using 11053 MB)
@  1918s  (total 10 workers using 11089 MB)
@  1929s  (total 10 workers using 11095 MB)
@  1940s  (total 10 workers using 11208 MB)
@  1951s  (total 10 workers using 11165 MB)
@  1961s  (total 10 workers using 11218 MB)
@  1972s  (total 10 workers using 11219 MB)
@  1983s  (total 10 workers using 11210 MB)
@  1994s  (total 10 workers using 11226 MB)
@  2005s  (total 10 workers using 11239 MB)
@  2016s  (total 10 workers using 11262 MB)
@  2027s  (total 10 workers using 11264 MB)
@  2038s  (total 10 workers using 11264 MB)
@  2049s  (total 10 workers using 11265 MB)
@  2060s  (total 10 workers using 11265 MB)
@  2071s  (total 10 workers using 11287 MB)
@  2082s  (total 10 workers using 11289 MB)
@  2092s  (total 10 workers using 11377 MB)
@  2103s  (total 10 workers using 11377 MB)
@  2114s  (total 10 workers using 11377 MB)
@  2125s  (total 10 workers using 11377 MB)
@  2136s  (total 10 workers using 11459 MB)
@  2147s  (total 10 workers using 11459 MB)
@  2158s  (total 10 workers using 11459 MB)
@  2169s  (total 10 workers using 11459 MB)
@  2180s  (total 10 workers using 11484 MB)
@  2191s  (total 10 workers using 11484 MB)
@  2201s  (total 10 workers using 11525 MB)
@  2212s  (total 10 workers using 11530 MB)
@  2223s  (total 10 workers using 11527 MB)
@  2234s  (total 10 workers using 11528 MB)
@  2245s  (total 10 workers using 11528 MB)
@  2256s  (total 10 workers using 11572 MB)
@  2267s  (total 10 workers using 11572 MB)
@  2278s  (total 10 workers using 11526 MB)
@  2289s  (total 10 workers using 11526 MB)
@  2300s  (total 10 workers using 11525 MB)
@  2311s  (total 10 workers using 11449 MB)
@  2322s  (total 10 workers using 11486 MB)
@  2332s  (total 10 workers using 11486 MB)
@  2343s  (total 10 workers using 11480 MB)
@  2354s  (total 10 workers using 11480 MB)
@  2365s  (total 10 workers using 11563 MB)
@  2376s  (total 10 workers using 11638 MB)
@  2387s  (total 10 workers using 11644 MB)
@  2398s  (total 10 workers using 11653 MB)
@  2409s  (total 10 workers using 11713 MB)
@  2420s  (total 10 workers using 11761 MB)
@  2431s  (total 10 workers using 11786 MB)
@  2441s  (total 10 workers using 11786 MB)
@  2453s  (total 10 workers using 11786 MB)
@  2463s  (total 10 workers using 11786 MB)
@  2474s  (total 10 workers using 11754 MB)
@  2485s  (total 10 workers using 11700 MB)
@  2496s  (total 10 workers using 11744 MB)
@  2507s  (total 10 workers using 11700 MB)
@  2518s  (total 10 workers using 11701 MB)
@  2529s  (total 10 workers using 11701 MB)
@  2540s  (total 10 workers using 11738 MB)
@  2551s  (total 10 workers using 11738 MB)
@  2562s  (total 10 workers using 11650 MB)
@  2572s  (total 10 workers using 11656 MB)
@  2583s  (total 10 workers using 11656 MB)
@  2594s  (total 10 workers using 11658 MB)
@  2605s  (total 10 workers using 11665 MB)
@  2616s  (total 10 workers using 11840 MB)
@  2627s  (total 10 workers using 11863 MB)
@  2638s  (total 10 workers using 11867 MB)
@  2649s  (total 10 workers using 11881 MB)
@  2660s  (total 10 workers using 11855 MB)
@  2671s  (total 10 workers using 11872 MB)
@  2681s  (total 10 workers using 11878 MB)
@  2692s  (total 10 workers using 11880 MB)
@  2703s  (total 10 workers using 11880 MB)
@  2714s  (total 10 workers using 11885 MB)
@  2725s  (total 10 workers using 11884 MB)
@  2736s  (total 10 workers using 11885 MB)
@  2747s  (total 10 workers using 11885 MB)
@  2758s  (total 10 workers using 11873 MB)
@  2769s  (total 10 workers using 11858 MB)
@  2780s  (total 10 workers using 11858 MB)
@  2790s  (total 10 workers using 11894 MB)
@  2802s  (total 10 workers using 11975 MB)
@  2812s  (total 10 workers using 11977 MB)
@  2823s  (total 10 workers using 11977 MB)
@  2834s  (total 10 workers using 11987 MB)
@  2845s  (total 10 workers using 11987 MB)
@  2856s  (total 10 workers using 11980 MB)
@  2867s  (total 10 workers using 11979 MB)
@  2878s  (total 10 workers using 11979 MB)
@  2889s  (total 10 workers using 11979 MB)
@  2899s  (total 10 workers using 11988 MB)
@  2910s  (total 10 workers using 11988 MB)
@  2921s  (total 10 workers using 11988 MB)
@  2932s  (total 10 workers using 11934 MB)
@  2943s  (total 10 workers using 11936 MB)
@  2954s  (total 10 workers using 11938 MB)
@  2965s  (total 10 workers using 11938 MB)
@  2976s  (total 10 workers using 11941 MB)
@  2986s  (total 10 workers using 11942 MB)
@  2998s  (total 10 workers using 11954 MB)
@  3008s  (total 10 workers using 11967 MB)
@  3019s  (total 10 workers using 11992 MB)
@  3030s  (total 10 workers using 11991 MB)
@  3041s  (total 10 workers using 11991 MB)
@  3052s  (total 10 workers using 11991 MB)
@  3063s  (total 10 workers using 12036 MB)
@  3074s  (total 10 workers using 12036 MB)
@  3085s  (total 10 workers using 12057 MB)
@  3095s  (total 10 workers using 12060 MB)
@  3106s  (total 10 workers using 12060 MB)
@  3117s  (total 10 workers using 12085 MB)
@  3128s  (total 10 workers using 12097 MB)
@  3139s  (total 10 workers using 12205 MB)
@  3150s  (total 10 workers using 12198 MB)
@  3160s  (total 10 workers using 12199 MB)
@  3171s  (total 10 workers using 12208 MB)
@  3182s  (total 10 workers using 12258 MB)
@  3193s  (total 10 workers using 12296 MB)
@  3204s  (total 10 workers using 12296 MB)
@  3215s  (total 10 workers using 12296 MB)
@  3226s  (total 10 workers using 12300 MB)
@  3237s  (total 10 workers using 12266 MB)
@  3247s  (total 10 workers using 12266 MB)
@  3258s  (total 10 workers using 12270 MB)
@  3269s  (total 10 workers using 12274 MB)
@  3280s  (total 10 workers using 12274 MB)
@  3291s  (total 10 workers using 12274 MB)
@  3302s  (total 10 workers using 12282 MB)
@  3313s  (total 10 workers using 12308 MB)
@  3324s  (total 10 workers using 12308 MB)
@  3335s  (total 10 workers using 12312 MB)
@  3346s  (total 10 workers using 12313 MB)
@  3356s  (total 10 workers using 12313 MB)
@  3367s  (total 10 workers using 12251 MB)
@  3378s  (total 10 workers using 12251 MB)
@  3389s  (total 10 workers using 12251 MB)
@  3400s  (total 10 workers using 12251 MB)
@  3411s  (total 10 workers using 12286 MB)
@  3422s  (total 10 workers using 12286 MB)
@  3433s  (total 10 workers using 12287 MB)
@  3443s  (total 10 workers using 12287 MB)
@  3454s  (total 10 workers using 12291 MB)
@  3465s  (total 10 workers using 12291 MB)
@  3476s  (total 10 workers using 12294 MB)
@  3487s  (total 10 workers using 12299 MB)
@  3498s  (total 10 workers using 12299 MB)
@  3509s  (total 10 workers using 12299 MB)
@  3520s  (total 10 workers using 12304 MB)
@  3531s  (total 10 workers using 12263 MB)
@  3542s  (total 10 workers using 12263 MB)
@  3552s  (total 10 workers using 12263 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3563s  (total 6 workers using 9659 MB)
@  3573s  (total 6 workers using 9659 MB)
@  3576s  (stopping all workers)
@  3576s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3576s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3576s  (copied results from worker 0 in /tmp//pr_test)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3575.95 seconds)[m
unknown
c done
