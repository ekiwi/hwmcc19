c host: c3n29
c start: Fri Oct 18 19:12:04 CEST 2019
c arrayjobid: 17567256
c jobid: 17567379
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/data-integrity/unsafe/circular_pointer_top_w8_d64_e0.btor2
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567379.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 12471)
@     0s  (started worker 1 with pid 12472)
@     0s  (started worker 2 with pid 12473)
@     0s  (started worker 3 with pid 12474)
@     0s  (started worker 4 with pid 12475)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 12591)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 155 MB)
@     2s  (started worker 6 with pid 12647)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 223 MB)
@     3s  (started worker 7 with pid 12709)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 282 MB)
@     4s  (started worker 8 with pid 12777)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 340 MB)
@     5s  (started worker 9 with pid 12869)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 412 MB)
@     6s  (started worker 10 with pid 12950)
@     6s  (spawned 1 workers)
@     6s  (total 11 workers using 495 MB)
@    15s  (total 11 workers using 720 MB)
@    25s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@    27s  (total 10 workers using 812 MB)
@    38s  (total 10 workers using 972 MB)
@    49s  (total 10 workers using 1088 MB)
@    60s  (total 10 workers using 1240 MB)
@    71s  (total 10 workers using 1356 MB)
@    82s  (total 10 workers using 1547 MB)
@    93s  (total 10 workers using 1706 MB)
@   104s  (total 10 workers using 1836 MB)
@   115s  (total 10 workers using 1919 MB)
@   126s  (total 10 workers using 1985 MB)
@   137s  (total 10 workers using 2114 MB)
@   148s  (total 10 workers using 2198 MB)
@   159s  (total 10 workers using 2237 MB)
@   170s  (total 10 workers using 2299 MB)
@   181s  (total 10 workers using 2355 MB)
@   192s  (total 10 workers using 2491 MB)
@   203s  (total 10 workers using 2575 MB)
@   213s  (total 10 workers using 2721 MB)
@   224s  (total 10 workers using 2776 MB)
@   235s  (total 10 workers using 2774 MB)
@   246s  (total 10 workers using 2827 MB)
@   257s  (total 10 workers using 2845 MB)
@   268s  (total 10 workers using 2883 MB)
@   279s  (total 10 workers using 2972 MB)
@   290s  (total 10 workers using 2997 MB)
@   301s  (total 10 workers using 3181 MB)
@   312s  (total 10 workers using 3303 MB)
@   323s  (total 10 workers using 3319 MB)
@   334s  (total 10 workers using 3330 MB)
@   344s  (total 10 workers using 3368 MB)
@   356s  (total 10 workers using 3412 MB)
@   366s  (total 10 workers using 3503 MB)
@   377s  (total 10 workers using 3538 MB)
@   388s  (total 10 workers using 3566 MB)
@   399s  (total 10 workers using 3643 MB)
@   410s  (total 10 workers using 3670 MB)
@   421s  (total 10 workers using 3713 MB)
@   432s  (total 10 workers using 3728 MB)
@   443s  (total 10 workers using 3778 MB)
@   454s  (total 10 workers using 3903 MB)
@   465s  (total 10 workers using 3993 MB)
@   476s  (total 10 workers using 4079 MB)
@   487s  (total 10 workers using 4091 MB)
@   498s  (total 10 workers using 4139 MB)
@   509s  (total 10 workers using 4163 MB)
@   519s  (total 10 workers using 4182 MB)
@   531s  (total 10 workers using 4329 MB)
@   541s  (total 10 workers using 4401 MB)
@   552s  (total 10 workers using 4376 MB)
@   563s  (total 10 workers using 4412 MB)
@   574s  (total 10 workers using 4500 MB)
@   585s  (total 10 workers using 4660 MB)
@   596s  (total 10 workers using 4706 MB)
@   607s  (total 10 workers using 4730 MB)
@   618s  (total 10 workers using 4889 MB)
@   629s  (total 10 workers using 4986 MB)
@   640s  (total 10 workers using 5002 MB)
@   651s  (total 10 workers using 5012 MB)
@   662s  (total 10 workers using 5040 MB)
@   673s  (total 10 workers using 5122 MB)
@   684s  (total 10 workers using 5151 MB)
@   695s  (total 10 workers using 5186 MB)
@   706s  (total 10 workers using 5171 MB)
@   716s  (total 10 workers using 5207 MB)
@   728s  (total 10 workers using 5274 MB)
@   738s  (total 10 workers using 5335 MB)
@   749s  (total 10 workers using 5373 MB)
@   760s  (total 10 workers using 5412 MB)
@   771s  (total 10 workers using 5431 MB)
@   782s  (total 10 workers using 5554 MB)
@   793s  (total 10 workers using 5609 MB)
@   804s  (total 10 workers using 5795 MB)
@   815s  (total 10 workers using 5817 MB)
@   826s  (total 10 workers using 5847 MB)
@   837s  (total 10 workers using 5907 MB)
@   848s  (total 10 workers using 5932 MB)
@   859s  (total 10 workers using 6019 MB)
@   869s  (total 10 workers using 6044 MB)
@   880s  (total 10 workers using 6004 MB)
@   891s  (total 10 workers using 6021 MB)
@   902s  (total 10 workers using 6037 MB)
@   913s  (total 10 workers using 6046 MB)
@   924s  (total 10 workers using 6096 MB)
@   935s  (total 10 workers using 6160 MB)
@   946s  (total 10 workers using 6312 MB)
@   957s  (total 10 workers using 6315 MB)
@   968s  (total 10 workers using 6490 MB)
@   979s  (total 10 workers using 6596 MB)
@   990s  (total 10 workers using 6624 MB)
@  1000s  (total 10 workers using 6702 MB)
@  1011s  (total 10 workers using 6734 MB)
@  1022s  (total 10 workers using 6802 MB)
@  1033s  (total 10 workers using 6824 MB)
@  1044s  (total 10 workers using 6862 MB)
@  1055s  (total 10 workers using 6905 MB)
@  1066s  (total 10 workers using 6943 MB)
@  1077s  (total 10 workers using 6915 MB)
@  1088s  (total 10 workers using 6956 MB)
@  1099s  (total 10 workers using 7017 MB)
@  1109s  (total 10 workers using 7035 MB)
@  1121s  (total 10 workers using 7024 MB)
@  1131s  (total 10 workers using 7067 MB)
@  1142s  (total 10 workers using 7088 MB)
@  1153s  (total 10 workers using 7132 MB)
@  1164s  (total 10 workers using 7142 MB)
@  1175s  (total 10 workers using 7126 MB)
@  1186s  (total 10 workers using 7179 MB)
@  1197s  (total 10 workers using 7270 MB)
@  1208s  (total 10 workers using 7400 MB)
@  1219s  (total 10 workers using 7400 MB)
@  1230s  (total 10 workers using 7503 MB)
@  1240s  (total 10 workers using 7498 MB)
@  1251s  (total 10 workers using 7538 MB)
@  1262s  (total 10 workers using 7535 MB)
@  1273s  (total 10 workers using 7527 MB)
@  1284s  (total 10 workers using 7545 MB)
@  1295s  (total 10 workers using 7652 MB)
@  1306s  (total 10 workers using 7731 MB)
@  1317s  (total 10 workers using 7917 MB)
@  1327s  (total 10 workers using 7947 MB)
@  1338s  (total 10 workers using 7966 MB)
@  1349s  (total 10 workers using 7978 MB)
@  1360s  (total 10 workers using 7922 MB)
@  1371s  (total 10 workers using 7938 MB)
@  1382s  (total 10 workers using 8029 MB)
@  1393s  (total 10 workers using 8028 MB)
@  1404s  (total 10 workers using 8152 MB)
@  1415s  (total 10 workers using 8177 MB)
@  1426s  (total 10 workers using 8229 MB)
@  1436s  (total 10 workers using 8147 MB)
@  1447s  (total 10 workers using 8181 MB)
@  1458s  (total 10 workers using 8314 MB)
@  1469s  (total 10 workers using 8298 MB)
@  1480s  (total 10 workers using 8348 MB)
@  1491s  (total 10 workers using 8352 MB)
@  1502s  (total 10 workers using 8381 MB)
@  1513s  (total 10 workers using 8406 MB)
@  1524s  (total 10 workers using 8424 MB)
@  1535s  (total 10 workers using 8443 MB)
@  1545s  (total 10 workers using 8461 MB)
@  1556s  (total 10 workers using 8468 MB)
@  1567s  (total 10 workers using 8488 MB)
@  1578s  (total 10 workers using 8529 MB)
@  1589s  (total 10 workers using 8577 MB)
@  1600s  (total 10 workers using 8591 MB)
@  1611s  (total 10 workers using 8687 MB)
@  1622s  (total 10 workers using 8656 MB)
@  1633s  (total 10 workers using 8679 MB)
@  1644s  (total 10 workers using 8698 MB)
@  1654s  (total 10 workers using 8701 MB)
@  1665s  (total 10 workers using 8750 MB)
@  1676s  (total 10 workers using 8759 MB)
@  1687s  (total 10 workers using 8746 MB)
@  1698s  (total 10 workers using 8761 MB)
@  1709s  (total 10 workers using 8800 MB)
@  1720s  (total 10 workers using 8860 MB)
@  1731s  (total 10 workers using 8887 MB)
@  1742s  (total 10 workers using 8900 MB)
@  1753s  (total 10 workers using 8883 MB)
@  1763s  (total 10 workers using 8943 MB)
@  1774s  (total 10 workers using 9116 MB)
@  1785s  (total 10 workers using 9131 MB)
@  1796s  (total 10 workers using 9131 MB)
@  1807s  (total 10 workers using 9140 MB)
@  1818s  (total 10 workers using 9140 MB)
@  1829s  (total 10 workers using 9138 MB)
@  1840s  (total 10 workers using 9147 MB)
@  1850s  (total 10 workers using 9165 MB)
@  1861s  (total 10 workers using 9166 MB)
@  1872s  (total 10 workers using 9140 MB)
@  1883s  (total 10 workers using 9136 MB)
@  1894s  (total 10 workers using 9158 MB)
@  1905s  (total 10 workers using 9160 MB)
@  1916s  (total 10 workers using 9160 MB)
@  1927s  (total 10 workers using 9160 MB)
@  1937s  (total 10 workers using 9160 MB)
@  1948s  (total 10 workers using 9155 MB)
@  1959s  (total 10 workers using 9155 MB)
@  1970s  (total 10 workers using 9155 MB)
@  1981s  (total 10 workers using 9160 MB)
@  1992s  (total 10 workers using 9172 MB)
@  2003s  (total 10 workers using 9173 MB)
@  2014s  (total 10 workers using 9174 MB)
@  2024s  (total 10 workers using 9185 MB)
@  2035s  (total 10 workers using 9185 MB)
@  2046s  (total 10 workers using 9185 MB)
@  2057s  (total 10 workers using 9194 MB)
@  2068s  (total 10 workers using 9206 MB)
@  2079s  (total 10 workers using 9333 MB)
@  2090s  (total 10 workers using 9334 MB)
@  2101s  (total 10 workers using 9335 MB)
@  2111s  (total 10 workers using 9340 MB)
@  2122s  (total 10 workers using 9368 MB)
@  2133s  (total 10 workers using 9369 MB)
@  2144s  (total 10 workers using 9370 MB)
@  2155s  (total 10 workers using 9474 MB)
@  2166s  (total 10 workers using 9519 MB)
@  2177s  (total 10 workers using 9520 MB)
@  2188s  (total 10 workers using 9520 MB)
@  2198s  (total 10 workers using 9521 MB)
@  2209s  (total 10 workers using 9528 MB)
@  2220s  (total 10 workers using 9535 MB)
@  2231s  (total 10 workers using 9536 MB)
@  2242s  (total 10 workers using 9536 MB)
@  2253s  (total 10 workers using 9621 MB)
@  2264s  (total 10 workers using 9639 MB)
@  2275s  (total 10 workers using 9640 MB)
@  2286s  (total 10 workers using 9616 MB)
@  2297s  (total 10 workers using 9617 MB)
@  2307s  (total 10 workers using 9622 MB)
@  2318s  (total 10 workers using 9622 MB)
@  2329s  (total 10 workers using 9622 MB)
@  2340s  (total 10 workers using 9637 MB)
@  2351s  (total 10 workers using 9645 MB)
@  2362s  (total 10 workers using 9697 MB)
@  2372s  (total 10 workers using 9697 MB)
@  2383s  (total 10 workers using 9697 MB)
@  2394s  (total 10 workers using 9698 MB)
@  2405s  (total 10 workers using 9700 MB)
@  2416s  (total 10 workers using 9749 MB)
@  2427s  (total 10 workers using 9751 MB)
@  2438s  (total 10 workers using 9751 MB)
@  2449s  (total 10 workers using 9789 MB)
@  2459s  (total 10 workers using 9789 MB)
@  2470s  (total 10 workers using 9789 MB)
@  2481s  (total 10 workers using 9789 MB)
@  2492s  (total 10 workers using 9789 MB)
@  2503s  (total 10 workers using 9808 MB)
@  2514s  (total 10 workers using 9808 MB)
@  2525s  (total 10 workers using 9808 MB)
@  2536s  (total 10 workers using 9808 MB)
@  2546s  (total 10 workers using 9808 MB)
@  2557s  (total 10 workers using 9814 MB)
@  2568s  (total 10 workers using 9814 MB)
@  2579s  (total 10 workers using 9814 MB)
@  2590s  (total 10 workers using 9771 MB)
@  2601s  (total 10 workers using 9771 MB)
@  2612s  (total 10 workers using 9771 MB)
@  2623s  (total 10 workers using 9773 MB)
@  2633s  (total 10 workers using 9773 MB)
@  2644s  (total 10 workers using 9773 MB)
@  2655s  (total 10 workers using 9773 MB)
@  2666s  (total 10 workers using 9781 MB)
@  2677s  (total 10 workers using 9797 MB)
@  2688s  (total 10 workers using 9826 MB)
@  2699s  (total 10 workers using 9826 MB)
@  2710s  (total 10 workers using 9826 MB)
@  2720s  (total 10 workers using 9826 MB)
@  2731s  (total 10 workers using 9830 MB)
@  2742s  (total 10 workers using 9830 MB)
@  2753s  (total 10 workers using 9830 MB)
@  2764s  (total 10 workers using 9831 MB)
@  2775s  (total 10 workers using 9832 MB)
@  2786s  (total 10 workers using 9832 MB)
@  2797s  (total 10 workers using 9834 MB)
@  2808s  (total 10 workers using 9834 MB)
@  2819s  (total 10 workers using 9838 MB)
@  2829s  (total 10 workers using 9838 MB)
@  2840s  (total 10 workers using 9838 MB)
@  2851s  (total 10 workers using 9854 MB)
@  2862s  (total 10 workers using 9854 MB)
@  2873s  (total 10 workers using 9801 MB)
@  2884s  (total 10 workers using 9801 MB)
@  2895s  (total 10 workers using 9823 MB)
@  2906s  (total 10 workers using 9823 MB)
@  2916s  (total 10 workers using 9823 MB)
@  2927s  (total 10 workers using 9842 MB)
@  2938s  (total 10 workers using 9849 MB)
@  2949s  (total 10 workers using 9849 MB)
@  2960s  (total 10 workers using 9851 MB)
@  2971s  (total 10 workers using 9811 MB)
@  2982s  (total 10 workers using 9810 MB)
@  2993s  (total 10 workers using 9811 MB)
@  3003s  (total 10 workers using 9811 MB)
@  3014s  (total 10 workers using 9811 MB)
@  3025s  (total 10 workers using 9811 MB)
@  3036s  (total 10 workers using 9811 MB)
@  3047s  (total 10 workers using 9811 MB)
@  3058s  (total 10 workers using 9811 MB)
@  3069s  (total 10 workers using 9827 MB)
@  3080s  (total 10 workers using 9827 MB)
@  3091s  (total 10 workers using 9827 MB)
@  3102s  (total 10 workers using 9859 MB)
@  3112s  (total 10 workers using 9859 MB)
@  3123s  (total 10 workers using 9859 MB)
@  3134s  (total 10 workers using 9859 MB)
@  3145s  (total 10 workers using 9827 MB)
@  3156s  (total 10 workers using 9827 MB)
@  3167s  (total 10 workers using 9827 MB)
@  3178s  (total 10 workers using 9861 MB)
@  3189s  (total 10 workers using 9828 MB)
@  3199s  (total 10 workers using 9828 MB)
@  3210s  (total 10 workers using 9828 MB)
@  3221s  (total 10 workers using 9828 MB)
@  3232s  (total 10 workers using 9828 MB)
@  3243s  (total 10 workers using 9828 MB)
@  3254s  (total 10 workers using 9833 MB)
@  3265s  (total 10 workers using 9833 MB)
@  3276s  (total 10 workers using 9841 MB)
@  3287s  (total 10 workers using 9841 MB)
@  3298s  (total 10 workers using 9841 MB)
@  3308s  (total 10 workers using 9843 MB)
@  3319s  (total 10 workers using 9843 MB)
@  3330s  (total 10 workers using 9843 MB)
@  3341s  (total 10 workers using 9843 MB)
@  3352s  (total 10 workers using 9843 MB)
@  3363s  (total 10 workers using 9847 MB)
@  3374s  (total 10 workers using 9847 MB)
@  3385s  (total 10 workers using 9847 MB)
@  3396s  (total 10 workers using 9847 MB)
@  3407s  (total 10 workers using 9847 MB)
@  3417s  (total 10 workers using 9844 MB)
@  3428s  (total 10 workers using 9844 MB)
@  3439s  (total 10 workers using 9844 MB)
@  3450s  (total 10 workers using 9847 MB)
@  3461s  (total 10 workers using 9847 MB)
@  3472s  (total 10 workers using 9847 MB)
@  3483s  (total 10 workers using 9847 MB)
@  3494s  (total 10 workers using 9847 MB)
@  3504s  (total 10 workers using 9847 MB)
@  3515s  (total 10 workers using 9847 MB)
@  3526s  (total 10 workers using 9847 MB)
@  3537s  (total 10 workers using 9847 MB)
@  3548s  (total 10 workers using 9847 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3559s  (total 7 workers using 9330 MB)
@  3569s  (total 7 workers using 9330 MB)
@  3576s  (stopping all workers)
@  3576s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3576s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3576s  (copied results from worker 0 in /tmp//pr_test)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3575.99 seconds)[m
unknown
c done
