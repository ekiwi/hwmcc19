c host: c3n17
c start: Fri Oct 18 20:52:03 CEST 2019
c arrayjobid: 17567256
c jobid: 17567562
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/vgasim_imgfifo-p111.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567562.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 13706)
@     0s  (started worker 1 with pid 13707)
@     0s  (started worker 2 with pid 13708)
@     0s  (started worker 3 with pid 13709)
@     0s  (started worker 4 with pid 13710)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 13826)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 272 MB)
@     2s  (started worker 6 with pid 13880)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 472 MB)
@     3s  (started worker 7 with pid 13942)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 615 MB)
@     4s  (started worker 8 with pid 14011)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 739 MB)
@     5s  (started worker 9 with pid 14103)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 832 MB)
@     7s  (started worker 10 with pid 14183)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 939 MB)
@    15s  (total 11 workers using 1443 MB)
@    27s  (total 11 workers using 1841 MB)
@    39s  (total 11 workers using 2074 MB)
@    50s  (total 11 workers using 2456 MB)
@    61s  (total 11 workers using 2634 MB)
@    73s  (total 11 workers using 2888 MB)
@    84s  (total 11 workers using 3150 MB)
@    95s  (total 11 workers using 3473 MB)
@   106s  (total 11 workers using 3658 MB)
@   117s  (total 11 workers using 3833 MB)
@   128s  (total 11 workers using 4054 MB)
@   139s  (total 11 workers using 4303 MB)
@   150s  (total 11 workers using 4489 MB)
@   161s  (total 11 workers using 4601 MB)
@   172s  (total 11 workers using 4782 MB)
@   183s  (total 11 workers using 5050 MB)
@   194s  (total 11 workers using 5195 MB)
@   205s  (total 11 workers using 5516 MB)
@   216s  (total 11 workers using 5649 MB)
@   228s  (total 11 workers using 5796 MB)
@   238s  (total 11 workers using 6039 MB)
@   244s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@   250s  (total 10 workers using 5755 MB)
@   260s  (total 10 workers using 5851 MB)
@   272s  (total 10 workers using 5980 MB)
@   282s  (total 10 workers using 6089 MB)
@   293s  (total 10 workers using 6237 MB)
@   304s  (total 10 workers using 6389 MB)
@   315s  (total 10 workers using 6564 MB)
@   326s  (total 10 workers using 6679 MB)
@   337s  (total 10 workers using 6854 MB)
@   348s  (total 10 workers using 6997 MB)
@   359s  (total 10 workers using 7034 MB)
@   370s  (total 10 workers using 7296 MB)
@   381s  (total 10 workers using 7410 MB)
@   392s  (total 10 workers using 7557 MB)
@   403s  (total 10 workers using 7719 MB)
@   414s  (total 10 workers using 7899 MB)
@   425s  (total 10 workers using 8009 MB)
@   436s  (total 10 workers using 8175 MB)
@   447s  (total 10 workers using 8341 MB)
@   457s  (total 10 workers using 8545 MB)
@   469s  (total 10 workers using 8617 MB)
@   479s  (total 10 workers using 8636 MB)
@   490s  (total 10 workers using 8789 MB)
@   501s  (total 10 workers using 8963 MB)
@   512s  (total 10 workers using 9069 MB)
@   523s  (total 10 workers using 9151 MB)
@   534s  (total 10 workers using 9233 MB)
@   545s  (total 10 workers using 9373 MB)
@   556s  (total 10 workers using 9509 MB)
@   567s  (total 10 workers using 9643 MB)
@   578s  (total 10 workers using 9787 MB)
@   589s  (total 10 workers using 9819 MB)
@   600s  (total 10 workers using 9913 MB)
@   611s  (total 10 workers using 9995 MB)
@   622s  (total 10 workers using 10113 MB)
@   632s  (total 10 workers using 10240 MB)
@   643s  (total 10 workers using 10342 MB)
@   654s  (total 10 workers using 10456 MB)
@   665s  (total 10 workers using 10510 MB)
@   676s  (total 10 workers using 10541 MB)
@   687s  (total 10 workers using 10714 MB)
@   698s  (total 10 workers using 11002 MB)
@   709s  (total 10 workers using 10974 MB)
@   720s  (total 10 workers using 11032 MB)
@   731s  (total 10 workers using 11153 MB)
@   742s  (total 10 workers using 11277 MB)
@   753s  (total 10 workers using 11314 MB)
@   764s  (total 10 workers using 11400 MB)
@   775s  (total 10 workers using 11608 MB)
@   785s  (total 10 workers using 11687 MB)
@   796s  (total 10 workers using 11814 MB)
@   807s  (total 10 workers using 11919 MB)
@   818s  (total 10 workers using 11982 MB)
@   829s  (total 10 workers using 12100 MB)
@   840s  (total 10 workers using 12201 MB)
@   851s  (total 10 workers using 12349 MB)
@   862s  (total 10 workers using 12500 MB)
@   873s  (total 10 workers using 12540 MB)
@   884s  (total 10 workers using 12667 MB)
@   895s  (total 10 workers using 12677 MB)
@   906s  (total 10 workers using 12717 MB)
@   917s  (total 10 workers using 12825 MB)
@   928s  (total 10 workers using 12903 MB)
@   938s  (total 10 workers using 12988 MB)
@   950s  (total 10 workers using 13010 MB)
@   960s  (total 10 workers using 12971 MB)
@   971s  (total 10 workers using 13126 MB)
@   982s  (total 10 workers using 13226 MB)
@   993s  (total 10 workers using 13255 MB)
@  1004s  (total 10 workers using 13319 MB)
@  1015s  (total 10 workers using 13337 MB)
@  1026s  (total 10 workers using 13374 MB)
@  1037s  (total 10 workers using 13382 MB)
@  1048s  (total 10 workers using 13410 MB)
@  1059s  (total 10 workers using 13453 MB)
@  1070s  (total 10 workers using 13506 MB)
@  1081s  (total 10 workers using 13520 MB)
@  1091s  (total 10 workers using 13653 MB)
@  1103s  (total 10 workers using 13649 MB)
@  1113s  (total 10 workers using 13730 MB)
@  1124s  (total 10 workers using 13672 MB)
@  1135s  (total 10 workers using 13715 MB)
@  1146s  (total 10 workers using 13683 MB)
@  1157s  (total 10 workers using 13756 MB)
@  1168s  (total 10 workers using 13776 MB)
@  1179s  (total 10 workers using 13827 MB)
@  1190s  (total 10 workers using 13854 MB)
@  1201s  (total 10 workers using 13850 MB)
@  1212s  (total 10 workers using 13797 MB)
@  1223s  (total 10 workers using 13809 MB)
@  1234s  (total 10 workers using 13933 MB)
@  1244s  (total 10 workers using 13981 MB)
@  1255s  (total 10 workers using 14013 MB)
@  1266s  (total 10 workers using 14018 MB)
@  1277s  (total 10 workers using 14064 MB)
@  1288s  (total 10 workers using 14067 MB)
@  1299s  (total 10 workers using 14024 MB)
@  1310s  (total 10 workers using 14213 MB)
@  1321s  (total 10 workers using 14127 MB)
@  1332s  (total 10 workers using 14170 MB)
@  1343s  (total 10 workers using 14200 MB)
@  1354s  (total 10 workers using 14359 MB)
@  1365s  (total 10 workers using 14244 MB)
@  1376s  (total 10 workers using 14229 MB)
@  1387s  (total 10 workers using 14463 MB)
@  1397s  (total 10 workers using 14455 MB)
@  1408s  (total 10 workers using 14486 MB)
@  1419s  (total 10 workers using 14562 MB)
@  1430s  (total 10 workers using 14583 MB)
@  1441s  (total 10 workers using 14582 MB)
@  1452s  (total 10 workers using 14613 MB)
@  1463s  (total 10 workers using 14686 MB)
@  1474s  (total 10 workers using 14694 MB)
@  1485s  (total 10 workers using 14798 MB)
@  1496s  (total 10 workers using 14814 MB)
@  1507s  (total 10 workers using 14676 MB)
@  1518s  (total 10 workers using 14601 MB)
@  1529s  (total 10 workers using 14708 MB)
@  1540s  (total 10 workers using 14785 MB)
@  1550s  (total 10 workers using 14722 MB)
@  1561s  (total 10 workers using 14742 MB)
@  1572s  (total 10 workers using 14830 MB)
@  1583s  (total 10 workers using 14830 MB)
@  1594s  (total 10 workers using 14900 MB)
@  1605s  (total 10 workers using 14852 MB)
@  1616s  (total 10 workers using 14867 MB)
@  1627s  (total 10 workers using 14879 MB)
@  1638s  (total 10 workers using 14896 MB)
@  1649s  (total 10 workers using 14918 MB)
@  1660s  (total 10 workers using 14935 MB)
@  1671s  (total 10 workers using 15018 MB)
@  1682s  (total 10 workers using 15013 MB)
@  1693s  (total 10 workers using 15054 MB)
@  1703s  (total 10 workers using 14959 MB)
@  1714s  (total 10 workers using 14975 MB)
@  1725s  (total 10 workers using 14989 MB)
@  1736s  (total 10 workers using 15045 MB)
@  1747s  (total 10 workers using 15314 MB)
@  1758s  (total 10 workers using 15173 MB)
@  1769s  (total 10 workers using 15026 MB)
@  1780s  (total 10 workers using 15100 MB)
@  1791s  (total 10 workers using 15110 MB)
@  1802s  (total 10 workers using 15164 MB)
@  1813s  (total 10 workers using 15288 MB)
@  1824s  (total 10 workers using 15267 MB)
@  1835s  (total 10 workers using 15223 MB)
@  1846s  (total 10 workers using 15257 MB)
@  1856s  (total 10 workers using 15222 MB)
@  1867s  (total 10 workers using 15229 MB)
@  1878s  (total 10 workers using 15282 MB)
@  1889s  (total 10 workers using 15354 MB)
@  1900s  (total 10 workers using 15371 MB)
@  1911s  (total 10 workers using 15326 MB)
@  1922s  (total 10 workers using 15333 MB)
@  1933s  (total 10 workers using 15273 MB)
@  1944s  (total 10 workers using 15282 MB)
@  1955s  (total 10 workers using 15327 MB)
@  1966s  (total 10 workers using 15319 MB)
@  1977s  (total 10 workers using 15163 MB)
@  1988s  (total 10 workers using 15337 MB)
@  1999s  (total 10 workers using 15305 MB)
@  2009s  (total 10 workers using 15262 MB)
@  2020s  (total 10 workers using 15350 MB)
@  2031s  (total 10 workers using 15388 MB)
@  2042s  (total 10 workers using 15517 MB)
@  2053s  (total 10 workers using 15454 MB)
@  2064s  (total 10 workers using 15473 MB)
@  2075s  (total 10 workers using 15477 MB)
@  2086s  (total 10 workers using 15526 MB)
@  2097s  (total 10 workers using 15531 MB)
@  2108s  (total 10 workers using 15548 MB)
@  2119s  (total 10 workers using 15516 MB)
@  2130s  (total 10 workers using 15552 MB)
@  2141s  (total 10 workers using 15701 MB)
@  2152s  (total 10 workers using 15589 MB)
@  2162s  (total 10 workers using 15650 MB)
@  2173s  (total 10 workers using 15560 MB)
@  2184s  (total 10 workers using 15661 MB)
@  2195s  (total 10 workers using 15837 MB)
@  2206s  (total 10 workers using 15641 MB)
@  2217s  (total 10 workers using 15688 MB)
@  2228s  (total 10 workers using 15687 MB)
@  2239s  (total 10 workers using 15690 MB)
@  2250s  (total 10 workers using 15486 MB)
@  2261s  (total 10 workers using 15621 MB)
@  2272s  (total 10 workers using 15688 MB)
@  2283s  (total 10 workers using 15656 MB)
@  2293s  (total 10 workers using 15656 MB)
@  2305s  (total 10 workers using 15666 MB)
@  2315s  (total 10 workers using 15737 MB)
@  2326s  (total 10 workers using 15738 MB)
@  2337s  (total 10 workers using 15973 MB)
@  2348s  (total 10 workers using 15793 MB)
@  2359s  (total 10 workers using 15811 MB)
@  2370s  (total 10 workers using 15813 MB)
@  2381s  (total 10 workers using 15822 MB)
@  2392s  (total 10 workers using 15825 MB)
@  2403s  (total 10 workers using 15823 MB)
@  2414s  (total 10 workers using 15826 MB)
@  2425s  (total 10 workers using 15804 MB)
@  2436s  (total 10 workers using 15886 MB)
@  2446s  (total 10 workers using 15881 MB)
@  2457s  (total 10 workers using 15972 MB)
@  2468s  (total 10 workers using 15893 MB)
@  2479s  (total 10 workers using 15892 MB)
@  2490s  (total 10 workers using 15969 MB)
@  2501s  (total 10 workers using 15996 MB)
@  2512s  (total 10 workers using 15954 MB)
@  2523s  (total 10 workers using 15987 MB)
@  2534s  (total 10 workers using 16004 MB)
@  2545s  (total 10 workers using 15911 MB)
@  2556s  (total 10 workers using 15897 MB)
@  2567s  (total 10 workers using 15969 MB)
@  2578s  (total 10 workers using 16129 MB)
@  2589s  (total 10 workers using 16078 MB)
@  2599s  (total 10 workers using 16069 MB)
@  2610s  (total 10 workers using 16115 MB)
@  2621s  (total 10 workers using 16144 MB)
@  2632s  (total 10 workers using 16137 MB)
@  2643s  (total 10 workers using 16165 MB)
@  2654s  (total 10 workers using 15962 MB)
@  2665s  (total 10 workers using 16099 MB)
@  2676s  (total 10 workers using 16084 MB)
@  2687s  (total 10 workers using 16165 MB)
@  2698s  (total 10 workers using 16181 MB)
@  2709s  (total 10 workers using 16181 MB)
@  2720s  (total 10 workers using 16194 MB)
@  2731s  (total 10 workers using 16157 MB)
@  2742s  (total 10 workers using 16160 MB)
@  2752s  (total 10 workers using 16313 MB)
@  2763s  (total 10 workers using 16282 MB)
@  2774s  (total 10 workers using 16165 MB)
@  2785s  (total 10 workers using 16256 MB)
@  2796s  (total 10 workers using 16298 MB)
@  2807s  (total 10 workers using 16185 MB)
@  2818s  (total 10 workers using 16236 MB)
@  2829s  (total 10 workers using 16250 MB)
@  2840s  (total 10 workers using 16283 MB)
@  2851s  (total 10 workers using 16246 MB)
@  2862s  (total 10 workers using 16280 MB)
@  2873s  (total 10 workers using 16311 MB)
@  2883s  (total 10 workers using 16320 MB)
@  2895s  (total 10 workers using 16353 MB)
@  2905s  (total 10 workers using 16372 MB)
@  2916s  (total 10 workers using 16390 MB)
@  2927s  (total 10 workers using 16365 MB)
@  2938s  (total 10 workers using 16393 MB)
@  2949s  (total 10 workers using 16373 MB)
@  2960s  (total 10 workers using 16413 MB)
@  2971s  (total 10 workers using 16381 MB)
@  2982s  (total 10 workers using 16451 MB)
@  2993s  (total 10 workers using 16475 MB)
@  3004s  (total 10 workers using 16692 MB)
@  3015s  (total 10 workers using 16496 MB)
@  3026s  (total 10 workers using 16447 MB)
@  3036s  (total 10 workers using 16503 MB)
@  3048s  (total 10 workers using 16561 MB)
@  3058s  (total 10 workers using 16537 MB)
@  3069s  (total 10 workers using 16517 MB)
@  3080s  (total 10 workers using 16547 MB)
@  3091s  (total 10 workers using 16538 MB)
@  3102s  (total 10 workers using 16556 MB)
@  3113s  (total 10 workers using 16547 MB)
@  3124s  (total 10 workers using 16553 MB)
@  3135s  (total 10 workers using 16594 MB)
@  3146s  (total 10 workers using 16490 MB)
@  3157s  (total 10 workers using 16663 MB)
@  3168s  (total 10 workers using 16594 MB)
@  3179s  (total 10 workers using 16640 MB)
@  3189s  (total 10 workers using 16614 MB)
@  3200s  (total 10 workers using 16544 MB)
@  3211s  (total 10 workers using 16497 MB)
@  3222s  (total 10 workers using 16642 MB)
@  3233s  (total 10 workers using 16571 MB)
@  3244s  (total 10 workers using 16665 MB)
@  3255s  (total 10 workers using 16709 MB)
@  3266s  (total 10 workers using 16735 MB)
@  3277s  (total 10 workers using 16656 MB)
@  3288s  (total 10 workers using 16751 MB)
@  3299s  (total 10 workers using 16688 MB)
@  3310s  (total 10 workers using 16670 MB)
@  3321s  (total 10 workers using 16706 MB)
@  3332s  (total 10 workers using 16700 MB)
@  3342s  (total 10 workers using 16687 MB)
@  3353s  (total 10 workers using 16672 MB)
@  3364s  (total 10 workers using 16715 MB)
@  3375s  (total 10 workers using 16835 MB)
@  3386s  (total 10 workers using 16831 MB)
@  3397s  (total 10 workers using 16806 MB)
@  3408s  (total 10 workers using 16854 MB)
@  3419s  (total 10 workers using 16823 MB)
@  3430s  (total 10 workers using 16855 MB)
@  3441s  (total 10 workers using 16851 MB)
@  3452s  (total 10 workers using 16856 MB)
@  3463s  (total 10 workers using 16853 MB)
@  3474s  (total 10 workers using 16861 MB)
@  3485s  (total 10 workers using 16912 MB)
@  3495s  (total 10 workers using 16903 MB)
@  3506s  (total 10 workers using 16895 MB)
@  3517s  (total 10 workers using 16751 MB)
@  3528s  (total 10 workers using 16873 MB)
@  3539s  (total 10 workers using 17163 MB)
@  3550s  (total 10 workers using 17202 MB)
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3561s  (total 6 workers using 8445 MB)
@  3571s  (total 6 workers using 8445 MB)
@  3575s  (stopping all workers)
@  3576s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3576s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (copied results from worker 0 in /tmp//pr_test)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3575.90 seconds)[m
unknown
c done
