c host: c3n18
c start: Fri Oct 18 20:49:41 CEST 2019
c arrayjobid: 17567256
c jobid: 17567558
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/vgasim_imgfifo-p093.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567558.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 588)
@     0s  (started worker 1 with pid 589)
@     0s  (started worker 2 with pid 590)
@     0s  (started worker 3 with pid 591)
@     0s  (started worker 4 with pid 592)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 745)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 290 MB)
@     2s  (started worker 6 with pid 801)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 503 MB)
@     3s  (started worker 7 with pid 873)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 694 MB)
@     4s  (started worker 8 with pid 954)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 843 MB)
@     5s  (started worker 9 with pid 1046)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1010 MB)
@     7s  (started worker 10 with pid 1130)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1035 MB)
@    15s  (total 11 workers using 1593 MB)
@    27s  (total 11 workers using 2204 MB)
@    39s  (total 11 workers using 2695 MB)
@    50s  (total 11 workers using 3316 MB)
@    61s  (total 11 workers using 3646 MB)
@    72s  (total 11 workers using 4169 MB)
@    83s  (total 11 workers using 4515 MB)
@    95s  (total 11 workers using 5067 MB)
@   105s  (total 11 workers using 5368 MB)
@   117s  (total 11 workers using 5729 MB)
@   127s  (total 11 workers using 5992 MB)
@   139s  (total 11 workers using 6333 MB)
@   150s  (total 11 workers using 6601 MB)
@   161s  (total 11 workers using 6921 MB)
@   172s  (total 11 workers using 7219 MB)
@   183s  (total 11 workers using 7370 MB)
@   194s  (total 11 workers using 7780 MB)
@   205s  (total 11 workers using 7781 MB)
@   216s  (total 11 workers using 8251 MB)
@   227s  (total 11 workers using 8550 MB)
@   238s  (total 11 workers using 8818 MB)
@   249s  (total 11 workers using 8995 MB)
@   260s  (total 11 workers using 9562 MB)
@   271s  (total 11 workers using 9522 MB)
@   282s  (total 11 workers using 9716 MB)
@   293s  (total 11 workers using 10060 MB)
@   304s  (total 11 workers using 10184 MB)
@   315s  (total 11 workers using 10479 MB)
@   326s  (total 11 workers using 10854 MB)
@   337s  (total 11 workers using 11425 MB)
@   348s  (total 11 workers using 11482 MB)
@   360s  (total 11 workers using 11645 MB)
@   370s  (total 11 workers using 11875 MB)
@   382s  (total 11 workers using 11916 MB)
@   393s  (total 11 workers using 12086 MB)
@   404s  (total 11 workers using 12235 MB)
@   415s  (total 11 workers using 12461 MB)
@   426s  (total 11 workers using 12854 MB)
@   437s  (total 11 workers using 12985 MB)
@   448s  (total 11 workers using 12985 MB)
@   459s  (total 11 workers using 13429 MB)
@   470s  (total 11 workers using 13490 MB)
@   481s  (total 11 workers using 13845 MB)
@   492s  (total 11 workers using 14003 MB)
@   503s  (total 11 workers using 14174 MB)
@   514s  (total 11 workers using 14113 MB)
@   525s  (total 11 workers using 14432 MB)
@   536s  (total 11 workers using 14603 MB)
@   547s  (total 11 workers using 14540 MB)
@   558s  (total 11 workers using 14691 MB)
@   569s  (total 11 workers using 14720 MB)
@   580s  (total 11 workers using 14974 MB)
@   589s  (worker 10 finished with result unknown) python3 avr.py --bmc
@   591s  (total 10 workers using 10582 MB)
@   602s  (total 10 workers using 10939 MB)
@   613s  (total 10 workers using 10828 MB)
@   624s  (total 10 workers using 10973 MB)
@   635s  (total 10 workers using 11077 MB)
@   646s  (total 10 workers using 11043 MB)
@   657s  (total 10 workers using 11262 MB)
@   668s  (total 10 workers using 11361 MB)
@   679s  (total 10 workers using 11562 MB)
@   690s  (total 10 workers using 11946 MB)
@   701s  (total 10 workers using 12102 MB)
@   712s  (total 10 workers using 12019 MB)
@   723s  (total 10 workers using 12266 MB)
@   734s  (total 10 workers using 12377 MB)
@   744s  (total 10 workers using 12531 MB)
@   756s  (total 10 workers using 12635 MB)
@   766s  (total 10 workers using 12736 MB)
@   777s  (total 10 workers using 12964 MB)
@   788s  (total 10 workers using 13113 MB)
@   799s  (total 10 workers using 13170 MB)
@   810s  (total 10 workers using 13275 MB)
@   821s  (total 10 workers using 13476 MB)
@   832s  (total 10 workers using 13600 MB)
@   843s  (total 10 workers using 13803 MB)
@   854s  (total 10 workers using 13910 MB)
@   865s  (total 10 workers using 13966 MB)
@   876s  (total 10 workers using 14200 MB)
@   887s  (total 10 workers using 14227 MB)
@   898s  (total 10 workers using 14307 MB)
@   909s  (total 10 workers using 14550 MB)
@   919s  (total 10 workers using 14413 MB)
@   930s  (total 10 workers using 14609 MB)
@   941s  (total 10 workers using 14851 MB)
@   952s  (total 10 workers using 14962 MB)
@   963s  (total 10 workers using 15019 MB)
@   974s  (total 10 workers using 15078 MB)
@   985s  (total 10 workers using 15174 MB)
@   996s  (total 10 workers using 15313 MB)
@  1007s  (total 10 workers using 15379 MB)
@  1018s  (total 10 workers using 15663 MB)
@  1029s  (total 10 workers using 15644 MB)
@  1040s  (total 10 workers using 15721 MB)
@  1051s  (total 10 workers using 15792 MB)
@  1062s  (total 10 workers using 15934 MB)
@  1072s  (total 10 workers using 16203 MB)
@  1084s  (total 10 workers using 16268 MB)
@  1094s  (total 10 workers using 16685 MB)
@  1105s  (total 10 workers using 16501 MB)
@  1116s  (total 10 workers using 16719 MB)
@  1127s  (total 10 workers using 16764 MB)
@  1138s  (total 10 workers using 16950 MB)
@  1149s  (total 10 workers using 17085 MB)
@  1160s  (total 10 workers using 17164 MB)
@  1171s  (total 10 workers using 17351 MB)
@  1182s  (total 10 workers using 17422 MB)
@  1193s  (total 10 workers using 17527 MB)
@  1204s  (total 10 workers using 17662 MB)
@  1215s  (total 10 workers using 17674 MB)
@  1225s  (total 10 workers using 17685 MB)
@  1236s  (total 10 workers using 17783 MB)
@  1247s  (total 10 workers using 17800 MB)
@  1258s  (total 10 workers using 17840 MB)
@  1269s  (total 10 workers using 17926 MB)
@  1280s  (total 10 workers using 17964 MB)
@  1291s  (total 10 workers using 18100 MB)
@  1302s  (total 10 workers using 18214 MB)
@  1313s  (total 10 workers using 18353 MB)
@  1324s  (total 10 workers using 18461 MB)
@  1335s  (total 10 workers using 18560 MB)
@  1346s  (total 10 workers using 18621 MB)
@  1356s  (total 10 workers using 18690 MB)
@  1367s  (total 10 workers using 19231 MB)
@  1378s  (total 10 workers using 19184 MB)
@  1389s  (total 10 workers using 19371 MB)
@  1400s  (total 10 workers using 19288 MB)
@  1411s  (total 10 workers using 19430 MB)
@  1422s  (total 10 workers using 19592 MB)
@  1433s  (total 10 workers using 19518 MB)
@  1444s  (total 10 workers using 19637 MB)
@  1455s  (total 10 workers using 19847 MB)
@  1465s  (total 10 workers using 19920 MB)
@  1477s  (total 10 workers using 19978 MB)
@  1487s  (total 10 workers using 20102 MB)
@  1498s  (total 10 workers using 20238 MB)
@  1509s  (total 10 workers using 20274 MB)
@  1520s  (total 10 workers using 20382 MB)
@  1531s  (total 10 workers using 20422 MB)
@  1542s  (total 10 workers using 20503 MB)
@  1553s  (total 10 workers using 20535 MB)
@  1564s  (total 10 workers using 20595 MB)
@  1575s  (total 10 workers using 20708 MB)
@  1586s  (total 10 workers using 20750 MB)
@  1596s  (total 10 workers using 20858 MB)
@  1608s  (total 10 workers using 20920 MB)
@  1618s  (total 10 workers using 20906 MB)
@  1629s  (total 10 workers using 20949 MB)
@  1640s  (total 10 workers using 21024 MB)
@  1651s  (total 10 workers using 21420 MB)
@  1662s  (total 10 workers using 21310 MB)
@  1673s  (total 10 workers using 21329 MB)
@  1684s  (total 10 workers using 21267 MB)
@  1695s  (total 10 workers using 21307 MB)
@  1706s  (total 10 workers using 21528 MB)
@  1717s  (total 10 workers using 21556 MB)
@  1728s  (total 10 workers using 21847 MB)
@  1739s  (total 10 workers using 21548 MB)
@  1749s  (total 10 workers using 22195 MB)
@  1760s  (total 10 workers using 22229 MB)
@  1771s  (total 10 workers using 22283 MB)
@  1782s  (total 10 workers using 22339 MB)
@  1793s  (total 10 workers using 22475 MB)
@  1804s  (total 10 workers using 22613 MB)
@  1815s  (total 10 workers using 22641 MB)
@  1826s  (total 10 workers using 22717 MB)
@  1837s  (total 10 workers using 22768 MB)
@  1848s  (total 10 workers using 22865 MB)
@  1859s  (total 10 workers using 22934 MB)
@  1870s  (total 10 workers using 22946 MB)
@  1880s  (total 10 workers using 23003 MB)
@  1891s  (total 10 workers using 23068 MB)
@  1902s  (total 10 workers using 23140 MB)
@  1913s  (total 10 workers using 23247 MB)
@  1924s  (total 10 workers using 23305 MB)
@  1935s  (total 10 workers using 23356 MB)
@  1946s  (total 10 workers using 23471 MB)
@  1957s  (total 10 workers using 23518 MB)
@  1968s  (total 10 workers using 23558 MB)
@  1979s  (total 10 workers using 23596 MB)
@  1990s  (total 10 workers using 23602 MB)
@  2001s  (total 10 workers using 24096 MB)
@  2011s  (total 10 workers using 23902 MB)
@  2023s  (total 10 workers using 23901 MB)
@  2033s  (total 10 workers using 23786 MB)
@  2044s  (total 10 workers using 23818 MB)
@  2055s  (total 10 workers using 23928 MB)
@  2066s  (total 10 workers using 23882 MB)
@  2077s  (total 10 workers using 24096 MB)
@  2088s  (total 10 workers using 24518 MB)
@  2099s  (total 10 workers using 24009 MB)
@  2110s  (total 10 workers using 24582 MB)
@  2121s  (total 10 workers using 24648 MB)
@  2132s  (total 10 workers using 24675 MB)
@  2142s  (total 10 workers using 24715 MB)
@  2153s  (total 10 workers using 24765 MB)
@  2164s  (total 10 workers using 24762 MB)
@  2175s  (total 10 workers using 24864 MB)
@  2186s  (total 10 workers using 24904 MB)
@  2197s  (total 10 workers using 24959 MB)
@  2208s  (total 10 workers using 25030 MB)
@  2219s  (total 10 workers using 25108 MB)
@  2230s  (total 10 workers using 25193 MB)
@  2241s  (total 10 workers using 25268 MB)
@  2252s  (total 10 workers using 25385 MB)
@  2263s  (total 10 workers using 25440 MB)
@  2273s  (total 10 workers using 25483 MB)
@  2284s  (total 10 workers using 25546 MB)
@  2295s  (total 10 workers using 25746 MB)
@  2306s  (total 10 workers using 25819 MB)
@  2317s  (total 10 workers using 25922 MB)
@  2328s  (total 10 workers using 25984 MB)
@  2339s  (total 10 workers using 26031 MB)
@  2350s  (total 10 workers using 26020 MB)
@  2361s  (total 10 workers using 26134 MB)
@  2372s  (total 10 workers using 26206 MB)
@  2383s  (total 10 workers using 26851 MB)
@  2394s  (total 10 workers using 26472 MB)
@  2404s  (total 10 workers using 26574 MB)
@  2415s  (total 10 workers using 26949 MB)
@  2426s  (total 10 workers using 26978 MB)
@  2437s  (total 10 workers using 27002 MB)
@  2448s  (total 10 workers using 26888 MB)
@  2459s  (total 10 workers using 26975 MB)
@  2470s  (total 10 workers using 27096 MB)
@  2481s  (total 10 workers using 27497 MB)
@  2492s  (total 10 workers using 27331 MB)
@  2503s  (total 10 workers using 27834 MB)
@  2514s  (total 10 workers using 27411 MB)
@  2525s  (total 10 workers using 27461 MB)
@  2535s  (total 10 workers using 27611 MB)
@  2546s  (total 10 workers using 27855 MB)
@  2557s  (total 10 workers using 27953 MB)
@  2568s  (total 10 workers using 28126 MB)
@  2579s  (total 10 workers using 28128 MB)
@  2590s  (total 10 workers using 28224 MB)
@  2601s  (total 10 workers using 28259 MB)
@  2612s  (total 10 workers using 28389 MB)
@  2623s  (total 10 workers using 28484 MB)
@  2634s  (total 10 workers using 28532 MB)
@  2645s  (total 10 workers using 28583 MB)
@  2656s  (total 10 workers using 28677 MB)
@  2666s  (total 10 workers using 28711 MB)
@  2677s  (total 10 workers using 28777 MB)
@  2688s  (total 10 workers using 28801 MB)
@  2699s  (total 10 workers using 28898 MB)
@  2710s  (total 10 workers using 28916 MB)
@  2721s  (total 10 workers using 28971 MB)
@  2732s  (total 10 workers using 29008 MB)
@  2743s  (total 10 workers using 29071 MB)
@  2754s  (total 10 workers using 29220 MB)
@  2765s  (total 10 workers using 29229 MB)
@  2776s  (total 10 workers using 29296 MB)
@  2787s  (total 10 workers using 29291 MB)
@  2797s  (total 10 workers using 29398 MB)
@  2809s  (total 10 workers using 29486 MB)
@  2819s  (total 10 workers using 29804 MB)
@  2830s  (total 10 workers using 29789 MB)
@  2841s  (total 10 workers using 29857 MB)
@  2852s  (total 10 workers using 29719 MB)
@  2863s  (total 10 workers using 29831 MB)
@  2874s  (total 10 workers using 29967 MB)
@  2885s  (total 10 workers using 30356 MB)
@  2896s  (total 10 workers using 29792 MB)
@  2907s  (total 10 workers using 30691 MB)
@  2918s  (total 10 workers using 30120 MB)
@  2929s  (total 10 workers using 30284 MB)
@  2940s  (total 10 workers using 30357 MB)
@  2950s  (total 10 workers using 30531 MB)
@  2961s  (total 10 workers using 30710 MB)
@  2972s  (total 10 workers using 30737 MB)
@  2983s  (total 10 workers using 30767 MB)
@  2994s  (total 10 workers using 30881 MB)
@  3005s  (total 10 workers using 30913 MB)
@  3016s  (total 10 workers using 30988 MB)
@  3027s  (total 10 workers using 31146 MB)
@  3038s  (total 10 workers using 31250 MB)
@  3049s  (total 10 workers using 31324 MB)
@  3060s  (total 10 workers using 31374 MB)
@  3071s  (total 10 workers using 31382 MB)
@  3081s  (total 10 workers using 31522 MB)
@  3092s  (total 10 workers using 31537 MB)
@  3103s  (total 10 workers using 31628 MB)
@  3114s  (total 10 workers using 31720 MB)
@  3125s  (total 10 workers using 32212 MB)
@  3136s  (total 10 workers using 32488 MB)
@  3147s  (total 10 workers using 32568 MB)
@  3158s  (total 10 workers using 32648 MB)
@  3169s  (total 10 workers using 32693 MB)
@  3180s  (total 10 workers using 32613 MB)
@  3191s  (total 10 workers using 32797 MB)
@  3202s  (total 10 workers using 32786 MB)
@  3212s  (total 10 workers using 32826 MB)
@  3223s  (total 10 workers using 32926 MB)
@  3234s  (total 10 workers using 32939 MB)
@  3245s  (total 10 workers using 33632 MB)
@  3256s  (total 10 workers using 33104 MB)
@  3267s  (total 10 workers using 33292 MB)
@  3278s  (total 10 workers using 33453 MB)
@  3289s  (total 10 workers using 33497 MB)
@  3300s  (total 10 workers using 33576 MB)
@  3311s  (total 10 workers using 33700 MB)
@  3322s  (total 10 workers using 33864 MB)
@  3333s  (total 10 workers using 33883 MB)
@  3344s  (total 10 workers using 33920 MB)
@  3355s  (total 10 workers using 34241 MB)
@  3366s  (total 10 workers using 34351 MB)
@  3377s  (total 10 workers using 34311 MB)
@  3387s  (total 10 workers using 34355 MB)
@  3399s  (total 10 workers using 34334 MB)
@  3409s  (total 10 workers using 34313 MB)
@  3421s  (total 10 workers using 34426 MB)
@  3431s  (total 10 workers using 34589 MB)
@  3442s  (total 10 workers using 34760 MB)
@  3453s  (total 10 workers using 34685 MB)
@  3464s  (total 10 workers using 34864 MB)
@  3475s  (total 10 workers using 35411 MB)
@  3486s  (total 10 workers using 34729 MB)
@  3497s  (total 10 workers using 34899 MB)
@  3508s  (total 10 workers using 35709 MB)
@  3519s  (total 10 workers using 35302 MB)
@  3530s  (total 10 workers using 35422 MB)
@  3541s  (total 10 workers using 35407 MB)
@  3552s  (total 10 workers using 35488 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3562s  (total 2 workers using 4843 MB)
@  3572s  (stopping all workers)
@  3572s  (total 2 workers using 0 MB)
@  3572s  (worker 2 finished with result unknown) python3 avr.py
@  3573s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3573s  (copied results from worker 0 in /tmp//pr_test)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3572.66 seconds)[m
unknown
c done
