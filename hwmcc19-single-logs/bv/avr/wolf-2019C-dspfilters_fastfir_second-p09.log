c host: c3n02
c start: Fri Oct 18 20:40:07 CEST 2019
c arrayjobid: 17567256
c jobid: 17567468
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dspfilters_fastfir_second-p09.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567468.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 24218)
@     0s  (started worker 1 with pid 24219)
@     0s  (started worker 2 with pid 24220)
@     0s  (started worker 3 with pid 24221)
@     0s  (started worker 4 with pid 24222)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 24338)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 515 MB)
@     2s  (started worker 6 with pid 24394)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 654 MB)
@     3s  (started worker 7 with pid 24456)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 803 MB)
@     4s  (started worker 8 with pid 24524)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 947 MB)
@     5s  (started worker 9 with pid 24616)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1065 MB)
@     6s  (started worker 10 with pid 24696)
@     6s  (spawned 1 workers)
@     6s  (total 11 workers using 1212 MB)
@    15s  (total 11 workers using 1705 MB)
@    27s  (total 11 workers using 1940 MB)
@    38s  (total 11 workers using 2078 MB)
@    50s  (total 11 workers using 2237 MB)
@    61s  (total 11 workers using 2395 MB)
@    72s  (total 11 workers using 2516 MB)
@    83s  (total 11 workers using 2728 MB)
@    94s  (total 11 workers using 2909 MB)
@   105s  (total 11 workers using 2992 MB)
@   116s  (total 11 workers using 3161 MB)
@   118s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   127s  (total 10 workers using 3045 MB)
@   138s  (total 10 workers using 3218 MB)
@   149s  (total 10 workers using 3438 MB)
@   160s  (total 10 workers using 3592 MB)
@   171s  (total 10 workers using 3722 MB)
@   182s  (total 10 workers using 3861 MB)
@   193s  (total 10 workers using 4170 MB)
@   204s  (total 10 workers using 4268 MB)
@   214s  (total 10 workers using 4393 MB)
@   225s  (total 10 workers using 4588 MB)
@   236s  (total 10 workers using 4789 MB)
@   247s  (total 10 workers using 4928 MB)
@   258s  (total 10 workers using 5043 MB)
@   269s  (total 10 workers using 5161 MB)
@   280s  (total 10 workers using 5310 MB)
@   291s  (total 10 workers using 5444 MB)
@   302s  (total 10 workers using 5669 MB)
@   313s  (total 10 workers using 5865 MB)
@   324s  (total 10 workers using 6171 MB)
@   335s  (total 10 workers using 6149 MB)
@   345s  (total 10 workers using 6335 MB)
@   356s  (total 10 workers using 6416 MB)
@   367s  (total 10 workers using 6574 MB)
@   378s  (total 10 workers using 6664 MB)
@   389s  (total 10 workers using 6767 MB)
@   400s  (total 10 workers using 6964 MB)
@   411s  (total 10 workers using 6997 MB)
@   422s  (total 10 workers using 7086 MB)
@   433s  (total 10 workers using 7229 MB)
@   444s  (total 10 workers using 7407 MB)
@   455s  (total 10 workers using 7491 MB)
@   466s  (total 10 workers using 7620 MB)
@   476s  (total 10 workers using 7795 MB)
@   488s  (total 10 workers using 7901 MB)
@   498s  (total 10 workers using 8008 MB)
@   509s  (total 10 workers using 8159 MB)
@   520s  (total 10 workers using 8198 MB)
@   531s  (total 10 workers using 8402 MB)
@   542s  (total 10 workers using 8492 MB)
@   553s  (total 10 workers using 8623 MB)
@   564s  (total 10 workers using 8826 MB)
@   575s  (total 10 workers using 8700 MB)
@   586s  (total 10 workers using 8738 MB)
@   597s  (total 10 workers using 9006 MB)
@   608s  (total 10 workers using 9117 MB)
@   619s  (total 10 workers using 9332 MB)
@   629s  (total 10 workers using 9504 MB)
@   641s  (total 10 workers using 9467 MB)
@   651s  (total 10 workers using 9701 MB)
@   662s  (total 10 workers using 9794 MB)
@   673s  (total 10 workers using 9799 MB)
@   684s  (total 10 workers using 9913 MB)
@   695s  (total 10 workers using 10022 MB)
@   706s  (total 10 workers using 10261 MB)
@   717s  (total 10 workers using 10288 MB)
@   728s  (total 10 workers using 10442 MB)
@   739s  (total 10 workers using 10479 MB)
@   750s  (total 10 workers using 10574 MB)
@   761s  (total 10 workers using 10507 MB)
@   772s  (total 10 workers using 10819 MB)
@   782s  (total 10 workers using 10856 MB)
@   793s  (total 10 workers using 10954 MB)
@   804s  (total 10 workers using 11090 MB)
@   815s  (total 10 workers using 11319 MB)
@   826s  (total 10 workers using 11378 MB)
@   837s  (total 10 workers using 11499 MB)
@   848s  (total 10 workers using 11737 MB)
@   859s  (total 10 workers using 11850 MB)
@   870s  (total 10 workers using 11972 MB)
@   881s  (total 10 workers using 12072 MB)
@   892s  (total 10 workers using 12267 MB)
@   903s  (total 10 workers using 12329 MB)
@   913s  (total 10 workers using 12457 MB)
@   924s  (total 10 workers using 12454 MB)
@   935s  (total 10 workers using 12686 MB)
@   946s  (total 10 workers using 12901 MB)
@   957s  (total 10 workers using 12922 MB)
@   968s  (total 10 workers using 13176 MB)
@   979s  (total 10 workers using 13258 MB)
@   990s  (total 10 workers using 13426 MB)
@  1001s  (total 10 workers using 13665 MB)
@  1012s  (total 10 workers using 13719 MB)
@  1023s  (total 10 workers using 13892 MB)
@  1034s  (total 10 workers using 14081 MB)
@  1044s  (total 10 workers using 14424 MB)
@  1056s  (total 10 workers using 14397 MB)
@  1066s  (total 10 workers using 14565 MB)
@  1077s  (total 10 workers using 14511 MB)
@  1088s  (total 10 workers using 14549 MB)
@  1099s  (total 10 workers using 14730 MB)
@  1110s  (total 10 workers using 14699 MB)
@  1121s  (total 10 workers using 14782 MB)
@  1132s  (total 10 workers using 14913 MB)
@  1143s  (total 10 workers using 14978 MB)
@  1154s  (total 10 workers using 15097 MB)
@  1165s  (total 10 workers using 15188 MB)
@  1176s  (total 10 workers using 15214 MB)
@  1187s  (total 10 workers using 15360 MB)
@  1197s  (total 10 workers using 15396 MB)
@  1208s  (total 10 workers using 15516 MB)
@  1219s  (total 10 workers using 15692 MB)
@  1230s  (total 10 workers using 15787 MB)
@  1241s  (total 10 workers using 15798 MB)
@  1252s  (total 10 workers using 16040 MB)
@  1263s  (total 10 workers using 16146 MB)
@  1274s  (total 10 workers using 16273 MB)
@  1285s  (total 10 workers using 16395 MB)
@  1296s  (total 10 workers using 16435 MB)
@  1307s  (total 10 workers using 16498 MB)
@  1318s  (total 10 workers using 16630 MB)
@  1328s  (total 10 workers using 16714 MB)
@  1339s  (total 10 workers using 16672 MB)
@  1350s  (total 10 workers using 17015 MB)
@  1361s  (total 10 workers using 17136 MB)
@  1372s  (total 10 workers using 17202 MB)
@  1383s  (total 10 workers using 17326 MB)
@  1394s  (total 10 workers using 17452 MB)
@  1405s  (total 10 workers using 17690 MB)
@  1416s  (total 10 workers using 17790 MB)
@  1427s  (total 10 workers using 17833 MB)
@  1438s  (total 10 workers using 17806 MB)
@  1449s  (total 10 workers using 17928 MB)
@  1459s  (total 10 workers using 17979 MB)
@  1470s  (total 10 workers using 18115 MB)
@  1481s  (total 10 workers using 18224 MB)
@  1492s  (total 10 workers using 18280 MB)
@  1503s  (total 10 workers using 18519 MB)
@  1514s  (total 10 workers using 18529 MB)
@  1525s  (total 10 workers using 18717 MB)
@  1536s  (total 10 workers using 18695 MB)
@  1547s  (total 10 workers using 18840 MB)
@  1558s  (total 10 workers using 19071 MB)
@  1569s  (total 10 workers using 19220 MB)
@  1580s  (total 10 workers using 19216 MB)
@  1590s  (total 10 workers using 19158 MB)
@  1601s  (total 10 workers using 19303 MB)
@  1612s  (total 10 workers using 19441 MB)
@  1623s  (total 10 workers using 19467 MB)
@  1634s  (total 10 workers using 19495 MB)
@  1645s  (total 10 workers using 19529 MB)
@  1656s  (total 10 workers using 19721 MB)
@  1667s  (total 10 workers using 19794 MB)
@  1678s  (total 10 workers using 19797 MB)
@  1689s  (total 10 workers using 19847 MB)
@  1700s  (total 10 workers using 20143 MB)
@  1711s  (total 10 workers using 20168 MB)
@  1721s  (total 10 workers using 20246 MB)
@  1733s  (total 10 workers using 20243 MB)
@  1743s  (total 10 workers using 20393 MB)
@  1754s  (total 10 workers using 20465 MB)
@  1765s  (total 10 workers using 20480 MB)
@  1776s  (total 10 workers using 20534 MB)
@  1787s  (total 10 workers using 20665 MB)
@  1798s  (total 10 workers using 20727 MB)
@  1809s  (total 10 workers using 20908 MB)
@  1820s  (total 10 workers using 21002 MB)
@  1831s  (total 10 workers using 21087 MB)
@  1842s  (total 10 workers using 21136 MB)
@  1853s  (total 10 workers using 21055 MB)
@  1864s  (total 10 workers using 21362 MB)
@  1874s  (total 10 workers using 21372 MB)
@  1885s  (total 10 workers using 21461 MB)
@  1896s  (total 10 workers using 21405 MB)
@  1907s  (total 10 workers using 21538 MB)
@  1918s  (total 10 workers using 21609 MB)
@  1929s  (total 10 workers using 21389 MB)
@  1940s  (total 10 workers using 21702 MB)
@  1951s  (total 10 workers using 21744 MB)
@  1962s  (total 10 workers using 21906 MB)
@  1973s  (total 10 workers using 21879 MB)
@  1984s  (total 10 workers using 22074 MB)
@  1995s  (total 10 workers using 22196 MB)
@  2005s  (total 10 workers using 22285 MB)
@  2017s  (total 10 workers using 22208 MB)
@  2027s  (total 10 workers using 22354 MB)
@  2038s  (total 10 workers using 22638 MB)
@  2049s  (total 10 workers using 22736 MB)
@  2060s  (total 10 workers using 22926 MB)
@  2071s  (total 10 workers using 23104 MB)
@  2082s  (total 10 workers using 23192 MB)
@  2093s  (total 10 workers using 23308 MB)
@  2104s  (total 10 workers using 23197 MB)
@  2115s  (total 10 workers using 23379 MB)
@  2126s  (total 10 workers using 23362 MB)
@  2137s  (total 10 workers using 23537 MB)
@  2148s  (total 10 workers using 23794 MB)
@  2158s  (total 10 workers using 23616 MB)
@  2169s  (total 10 workers using 23963 MB)
@  2180s  (total 10 workers using 23895 MB)
@  2191s  (total 10 workers using 23975 MB)
@  2202s  (total 10 workers using 24167 MB)
@  2213s  (total 10 workers using 24140 MB)
@  2224s  (total 10 workers using 24169 MB)
@  2235s  (total 10 workers using 24164 MB)
@  2246s  (total 10 workers using 24290 MB)
@  2257s  (total 10 workers using 24319 MB)
@  2268s  (total 10 workers using 24440 MB)
@  2279s  (total 10 workers using 24711 MB)
@  2290s  (total 10 workers using 24340 MB)
@  2301s  (total 10 workers using 24729 MB)
@  2311s  (total 10 workers using 24985 MB)
@  2322s  (total 10 workers using 25006 MB)
@  2333s  (total 10 workers using 25296 MB)
@  2344s  (total 10 workers using 25258 MB)
@  2355s  (total 10 workers using 25414 MB)
@  2366s  (total 10 workers using 25799 MB)
@  2377s  (total 10 workers using 25289 MB)
@  2388s  (total 10 workers using 25498 MB)
@  2399s  (total 10 workers using 25301 MB)
@  2410s  (total 10 workers using 25559 MB)
@  2421s  (total 10 workers using 25647 MB)
@  2432s  (total 10 workers using 25892 MB)
@  2442s  (total 10 workers using 25884 MB)
@  2454s  (total 10 workers using 26015 MB)
@  2464s  (total 10 workers using 26066 MB)
@  2475s  (total 10 workers using 26345 MB)
@  2486s  (total 10 workers using 26389 MB)
@  2497s  (total 10 workers using 26539 MB)
@  2508s  (total 10 workers using 26537 MB)
@  2519s  (total 10 workers using 26626 MB)
@  2530s  (total 10 workers using 26773 MB)
@  2541s  (total 10 workers using 26826 MB)
@  2552s  (total 10 workers using 26753 MB)
@  2563s  (total 10 workers using 26711 MB)
@  2574s  (total 10 workers using 26911 MB)
@  2585s  (total 10 workers using 27124 MB)
@  2595s  (total 10 workers using 27374 MB)
@  2606s  (total 10 workers using 27393 MB)
@  2617s  (total 10 workers using 27134 MB)
@  2628s  (total 10 workers using 27630 MB)
@  2639s  (total 10 workers using 27633 MB)
@  2650s  (total 10 workers using 27790 MB)
@  2661s  (total 10 workers using 27551 MB)
@  2672s  (total 10 workers using 27948 MB)
@  2683s  (total 10 workers using 27462 MB)
@  2694s  (total 10 workers using 27792 MB)
@  2705s  (total 10 workers using 27818 MB)
@  2716s  (total 10 workers using 27859 MB)
@  2726s  (total 10 workers using 27879 MB)
@  2738s  (total 10 workers using 28125 MB)
@  2748s  (total 10 workers using 28269 MB)
@  2759s  (total 10 workers using 28142 MB)
@  2770s  (total 10 workers using 28799 MB)
@  2781s  (total 10 workers using 28678 MB)
@  2792s  (total 10 workers using 28674 MB)
@  2803s  (total 10 workers using 28806 MB)
@  2814s  (total 10 workers using 28651 MB)
@  2825s  (total 10 workers using 28668 MB)
@  2836s  (total 10 workers using 28731 MB)
@  2847s  (total 10 workers using 28808 MB)
@  2858s  (total 10 workers using 28942 MB)
@  2869s  (total 10 workers using 28873 MB)
@  2879s  (total 10 workers using 29498 MB)
@  2890s  (total 10 workers using 29389 MB)
@  2901s  (total 10 workers using 29558 MB)
@  2912s  (total 10 workers using 29467 MB)
@  2923s  (total 10 workers using 29614 MB)
@  2934s  (total 10 workers using 30053 MB)
@  2945s  (total 10 workers using 30255 MB)
@  2956s  (total 10 workers using 29962 MB)
@  2967s  (total 10 workers using 29964 MB)
@  2978s  (total 10 workers using 30004 MB)
@  2989s  (total 10 workers using 30132 MB)
@  3000s  (total 10 workers using 30190 MB)
@  3010s  (total 10 workers using 30385 MB)
@  3021s  (total 10 workers using 30594 MB)
@  3032s  (total 10 workers using 30566 MB)
@  3043s  (total 10 workers using 30957 MB)
@  3054s  (total 10 workers using 30867 MB)
@  3065s  (total 10 workers using 30448 MB)
@  3076s  (total 10 workers using 30743 MB)
@  3087s  (total 10 workers using 30602 MB)
@  3098s  (total 10 workers using 30855 MB)
@  3109s  (total 10 workers using 30862 MB)
@  3120s  (total 10 workers using 30519 MB)
@  3131s  (total 10 workers using 30783 MB)
@  3141s  (total 10 workers using 31067 MB)
@  3152s  (total 10 workers using 30624 MB)
@  3163s  (total 10 workers using 30875 MB)
@  3174s  (total 10 workers using 31037 MB)
@  3185s  (total 10 workers using 31042 MB)
@  3196s  (total 10 workers using 31116 MB)
@  3207s  (total 10 workers using 31152 MB)
@  3218s  (total 10 workers using 31702 MB)
@  3229s  (total 10 workers using 31742 MB)
@  3240s  (total 10 workers using 31845 MB)
@  3251s  (total 10 workers using 31756 MB)
@  3262s  (total 10 workers using 31923 MB)
@  3272s  (total 10 workers using 31940 MB)
@  3283s  (total 10 workers using 32031 MB)
@  3294s  (total 10 workers using 32080 MB)
@  3305s  (total 10 workers using 32139 MB)
@  3316s  (total 10 workers using 32031 MB)
@  3327s  (total 10 workers using 32153 MB)
@  3338s  (total 10 workers using 32123 MB)
@  3349s  (total 10 workers using 32183 MB)
@  3360s  (total 10 workers using 32220 MB)
@  3371s  (total 10 workers using 32284 MB)
@  3382s  (total 10 workers using 32273 MB)
@  3393s  (total 10 workers using 32345 MB)
@  3404s  (total 10 workers using 32350 MB)
@  3415s  (total 10 workers using 32390 MB)
@  3425s  (total 10 workers using 32681 MB)
@  3436s  (total 10 workers using 32561 MB)
@  3447s  (total 10 workers using 32682 MB)
@  3458s  (total 10 workers using 32612 MB)
@  3469s  (total 10 workers using 32799 MB)
@  3480s  (total 10 workers using 32799 MB)
@  3491s  (total 10 workers using 32777 MB)
@  3502s  (total 10 workers using 32806 MB)
@  3513s  (total 10 workers using 33045 MB)
@  3524s  (total 10 workers using 32949 MB)
@  3535s  (total 10 workers using 33051 MB)
@  3546s  (total 10 workers using 33420 MB)
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3555s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3555s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3556s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3556s  (total 3 workers using 4757 MB)
@  3557s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3567s  (total 2 workers using 4757 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.08 seconds)[m
unknown
c done
