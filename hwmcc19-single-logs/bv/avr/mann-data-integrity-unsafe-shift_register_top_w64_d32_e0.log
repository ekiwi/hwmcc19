c host: c3n20
c start: Fri Oct 18 19:23:25 CEST 2019
c arrayjobid: 17567256
c jobid: 17567382
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/data-integrity/unsafe/shift_register_top_w64_d32_e0.btor2
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567382.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 16973)
@     0s  (started worker 1 with pid 16974)
@     0s  (started worker 2 with pid 16975)
@     0s  (started worker 3 with pid 16976)
@     0s  (started worker 4 with pid 16977)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 17093)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 168 MB)
@     2s  (started worker 6 with pid 17149)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 241 MB)
@     3s  (started worker 7 with pid 17211)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 339 MB)
@     4s  (started worker 8 with pid 17279)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 418 MB)
@     5s  (started worker 9 with pid 17371)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 525 MB)
@     7s  (started worker 10 with pid 17451)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 651 MB)
@    15s  (total 11 workers using 943 MB)
@    27s  (total 11 workers using 1224 MB)
@    39s  (total 11 workers using 1438 MB)
@    50s  (total 11 workers using 1688 MB)
@    61s  (total 11 workers using 1949 MB)
@    73s  (total 11 workers using 2133 MB)
@    84s  (total 11 workers using 2281 MB)
@    95s  (total 11 workers using 2536 MB)
@   106s  (total 11 workers using 2737 MB)
@   117s  (total 11 workers using 2794 MB)
@   128s  (total 11 workers using 2916 MB)
@   139s  (total 11 workers using 3180 MB)
@   150s  (total 11 workers using 3343 MB)
@   161s  (total 11 workers using 3448 MB)
@   172s  (total 11 workers using 3571 MB)
@   183s  (total 11 workers using 3707 MB)
@   194s  (total 11 workers using 3876 MB)
@   205s  (total 11 workers using 4012 MB)
@   216s  (total 11 workers using 4197 MB)
@   228s  (total 11 workers using 4280 MB)
@   239s  (total 11 workers using 4392 MB)
@   250s  (total 11 workers using 4534 MB)
@   261s  (total 11 workers using 4756 MB)
@   272s  (total 11 workers using 4803 MB)
@   283s  (total 11 workers using 4988 MB)
@   294s  (total 11 workers using 5268 MB)
@   305s  (total 11 workers using 5325 MB)
@   316s  (total 11 workers using 5487 MB)
@   327s  (total 11 workers using 5580 MB)
@   338s  (total 11 workers using 5791 MB)
@   349s  (total 11 workers using 5865 MB)
@   360s  (total 11 workers using 5987 MB)
@   371s  (total 11 workers using 6234 MB)
@   382s  (total 11 workers using 6479 MB)
@   393s  (total 11 workers using 6750 MB)
@   405s  (total 11 workers using 6854 MB)
@   415s  (total 11 workers using 6916 MB)
@   427s  (total 11 workers using 6939 MB)
@   438s  (total 11 workers using 7002 MB)
@   449s  (total 11 workers using 7074 MB)
@   460s  (total 11 workers using 7264 MB)
@   471s  (total 11 workers using 7362 MB)
@   482s  (total 11 workers using 7476 MB)
@   493s  (total 11 workers using 7612 MB)
@   504s  (total 11 workers using 7839 MB)
@   516s  (total 11 workers using 8140 MB)
@   526s  (total 11 workers using 8181 MB)
@   538s  (total 11 workers using 8333 MB)
@   549s  (total 11 workers using 8382 MB)
@   560s  (total 11 workers using 8480 MB)
@   571s  (total 11 workers using 8524 MB)
@   582s  (total 11 workers using 8566 MB)
@   593s  (total 11 workers using 8949 MB)
@   604s  (total 11 workers using 9072 MB)
@   615s  (total 11 workers using 9220 MB)
@   626s  (total 11 workers using 9251 MB)
@   637s  (total 11 workers using 9349 MB)
@   649s  (total 11 workers using 9418 MB)
@   660s  (total 11 workers using 9480 MB)
@   671s  (total 11 workers using 9552 MB)
@   682s  (total 11 workers using 9636 MB)
@   693s  (total 11 workers using 9705 MB)
@   704s  (total 11 workers using 9753 MB)
@   715s  (total 11 workers using 10188 MB)
@   726s  (total 11 workers using 10478 MB)
@   737s  (total 11 workers using 10603 MB)
@   748s  (total 11 workers using 10645 MB)
@   760s  (total 11 workers using 10677 MB)
@   771s  (total 11 workers using 10734 MB)
@   782s  (total 11 workers using 10776 MB)
@   793s  (total 11 workers using 10762 MB)
@   804s  (total 11 workers using 10809 MB)
@   815s  (total 11 workers using 10864 MB)
@   826s  (total 11 workers using 10944 MB)
@   837s  (total 11 workers using 11236 MB)
@   849s  (total 11 workers using 11330 MB)
@   860s  (total 11 workers using 11423 MB)
@   871s  (total 11 workers using 11524 MB)
@   882s  (total 11 workers using 11640 MB)
@   893s  (total 11 workers using 11796 MB)
@   904s  (total 11 workers using 11907 MB)
@   915s  (total 11 workers using 12111 MB)
@   926s  (total 11 workers using 12415 MB)
@   938s  (total 11 workers using 12535 MB)
@   949s  (total 11 workers using 12723 MB)
@   960s  (total 11 workers using 12748 MB)
@   971s  (total 11 workers using 12819 MB)
@   982s  (total 11 workers using 12915 MB)
@   993s  (total 11 workers using 13064 MB)
@  1004s  (total 11 workers using 13129 MB)
@  1015s  (total 11 workers using 13249 MB)
@  1027s  (total 11 workers using 13559 MB)
@  1037s  (total 11 workers using 13706 MB)
@  1049s  (total 11 workers using 13774 MB)
@  1060s  (total 11 workers using 13791 MB)
@  1071s  (total 11 workers using 13833 MB)
@  1082s  (total 11 workers using 13879 MB)
@  1093s  (total 11 workers using 13921 MB)
@  1104s  (total 11 workers using 14223 MB)
@  1116s  (total 11 workers using 14248 MB)
@  1126s  (total 11 workers using 14283 MB)
@  1138s  (total 11 workers using 14401 MB)
@  1149s  (total 11 workers using 14474 MB)
@  1160s  (total 11 workers using 14645 MB)
@  1170s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  1171s  (total 10 workers using 9215 MB)
@  1182s  (total 10 workers using 9273 MB)
@  1193s  (total 10 workers using 9300 MB)
@  1204s  (total 10 workers using 9323 MB)
@  1215s  (total 10 workers using 9335 MB)
@  1226s  (total 10 workers using 9377 MB)
@  1237s  (total 10 workers using 9434 MB)
@  1248s  (total 10 workers using 9496 MB)
@  1259s  (total 10 workers using 9558 MB)
@  1270s  (total 10 workers using 9624 MB)
@  1281s  (total 10 workers using 9713 MB)
@  1292s  (total 10 workers using 9800 MB)
@  1302s  (total 10 workers using 9868 MB)
@  1313s  (total 10 workers using 9930 MB)
@  1324s  (total 10 workers using 10003 MB)
@  1335s  (total 10 workers using 10040 MB)
@  1346s  (total 10 workers using 10121 MB)
@  1357s  (total 10 workers using 10158 MB)
@  1368s  (total 10 workers using 10196 MB)
@  1379s  (total 10 workers using 10152 MB)
@  1390s  (total 10 workers using 10257 MB)
@  1401s  (total 10 workers using 10281 MB)
@  1412s  (total 10 workers using 10368 MB)
@  1423s  (total 10 workers using 10434 MB)
@  1434s  (total 10 workers using 10435 MB)
@  1445s  (total 10 workers using 10500 MB)
@  1455s  (total 10 workers using 10578 MB)
@  1466s  (total 10 workers using 10648 MB)
@  1477s  (total 10 workers using 10693 MB)
@  1488s  (total 10 workers using 10824 MB)
@  1499s  (total 10 workers using 10891 MB)
@  1510s  (total 10 workers using 11009 MB)
@  1521s  (total 10 workers using 11129 MB)
@  1532s  (total 10 workers using 11148 MB)
@  1543s  (total 10 workers using 11240 MB)
@  1554s  (total 10 workers using 11363 MB)
@  1565s  (total 10 workers using 11445 MB)
@  1576s  (total 10 workers using 11514 MB)
@  1587s  (total 10 workers using 11568 MB)
@  1598s  (total 10 workers using 11675 MB)
@  1609s  (total 10 workers using 11761 MB)
@  1620s  (total 10 workers using 11832 MB)
@  1630s  (total 10 workers using 11897 MB)
@  1642s  (total 10 workers using 11961 MB)
@  1652s  (total 10 workers using 12021 MB)
@  1663s  (total 10 workers using 12055 MB)
@  1674s  (total 10 workers using 12110 MB)
@  1685s  (total 10 workers using 12141 MB)
@  1696s  (total 10 workers using 12181 MB)
@  1707s  (total 10 workers using 12193 MB)
@  1718s  (total 10 workers using 12259 MB)
@  1729s  (total 10 workers using 12288 MB)
@  1740s  (total 10 workers using 12317 MB)
@  1751s  (total 10 workers using 12352 MB)
@  1762s  (total 10 workers using 12445 MB)
@  1773s  (total 10 workers using 12520 MB)
@  1784s  (total 10 workers using 12636 MB)
@  1795s  (total 10 workers using 12678 MB)
@  1805s  (total 10 workers using 12717 MB)
@  1816s  (total 10 workers using 12797 MB)
@  1827s  (total 10 workers using 12831 MB)
@  1838s  (total 10 workers using 12878 MB)
@  1849s  (total 10 workers using 12903 MB)
@  1860s  (total 10 workers using 12977 MB)
@  1871s  (total 10 workers using 13030 MB)
@  1882s  (total 10 workers using 13074 MB)
@  1893s  (total 10 workers using 13105 MB)
@  1904s  (total 10 workers using 13128 MB)
@  1915s  (total 10 workers using 13193 MB)
@  1926s  (total 10 workers using 13163 MB)
@  1937s  (total 10 workers using 13207 MB)
@  1948s  (total 10 workers using 13319 MB)
@  1959s  (total 10 workers using 13357 MB)
@  1970s  (total 10 workers using 13404 MB)
@  1980s  (total 10 workers using 13457 MB)
@  1991s  (total 10 workers using 13492 MB)
@  2002s  (total 10 workers using 13532 MB)
@  2013s  (total 10 workers using 13467 MB)
@  2024s  (total 10 workers using 13564 MB)
@  2035s  (total 10 workers using 13565 MB)
@  2046s  (total 10 workers using 13588 MB)
@  2057s  (total 10 workers using 13616 MB)
@  2068s  (total 10 workers using 13616 MB)
@  2079s  (total 10 workers using 13616 MB)
@  2090s  (total 10 workers using 13632 MB)
@  2101s  (total 10 workers using 13661 MB)
@  2111s  (total 10 workers using 13590 MB)
@  2122s  (total 10 workers using 13605 MB)
@  2133s  (total 10 workers using 13670 MB)
@  2144s  (total 10 workers using 13772 MB)
@  2155s  (total 10 workers using 13741 MB)
@  2166s  (total 10 workers using 13750 MB)
@  2177s  (total 10 workers using 13783 MB)
@  2188s  (total 10 workers using 13793 MB)
@  2199s  (total 10 workers using 13817 MB)
@  2210s  (total 10 workers using 13824 MB)
@  2221s  (total 10 workers using 13827 MB)
@  2232s  (total 10 workers using 13828 MB)
@  2242s  (total 10 workers using 13851 MB)
@  2253s  (total 10 workers using 13856 MB)
@  2264s  (total 10 workers using 13819 MB)
@  2275s  (total 10 workers using 13983 MB)
@  2286s  (total 10 workers using 14107 MB)
@  2297s  (total 10 workers using 14145 MB)
@  2308s  (total 10 workers using 14156 MB)
@  2319s  (total 10 workers using 14126 MB)
@  2330s  (total 10 workers using 14158 MB)
@  2341s  (total 10 workers using 14177 MB)
@  2352s  (total 10 workers using 14174 MB)
@  2363s  (total 10 workers using 14175 MB)
@  2373s  (total 10 workers using 14175 MB)
@  2385s  (total 10 workers using 14175 MB)
@  2395s  (total 10 workers using 14180 MB)
@  2406s  (total 10 workers using 14192 MB)
@  2417s  (total 10 workers using 14214 MB)
@  2428s  (total 10 workers using 14235 MB)
@  2439s  (total 10 workers using 14242 MB)
@  2450s  (total 10 workers using 14246 MB)
@  2461s  (total 10 workers using 14249 MB)
@  2472s  (total 10 workers using 14290 MB)
@  2483s  (total 10 workers using 14294 MB)
@  2494s  (total 10 workers using 14305 MB)
@  2505s  (total 10 workers using 14368 MB)
@  2516s  (total 10 workers using 14388 MB)
@  2526s  (total 10 workers using 14388 MB)
@  2537s  (total 10 workers using 14401 MB)
@  2548s  (total 10 workers using 14401 MB)
@  2559s  (total 10 workers using 14401 MB)
@  2570s  (total 10 workers using 14401 MB)
@  2581s  (total 10 workers using 14407 MB)
@  2592s  (total 10 workers using 14457 MB)
@  2603s  (total 10 workers using 14491 MB)
@  2614s  (total 10 workers using 14544 MB)
@  2625s  (total 10 workers using 14618 MB)
@  2636s  (total 10 workers using 14637 MB)
@  2647s  (total 10 workers using 14663 MB)
@  2657s  (total 10 workers using 14687 MB)
@  2669s  (total 10 workers using 14716 MB)
@  2679s  (total 10 workers using 14748 MB)
@  2690s  (total 10 workers using 14700 MB)
@  2701s  (total 10 workers using 14763 MB)
@  2712s  (total 10 workers using 14789 MB)
@  2723s  (total 10 workers using 14808 MB)
@  2734s  (total 10 workers using 14863 MB)
@  2745s  (total 10 workers using 14898 MB)
@  2756s  (total 10 workers using 14921 MB)
@  2767s  (total 10 workers using 14985 MB)
@  2778s  (total 10 workers using 14966 MB)
@  2789s  (total 10 workers using 15017 MB)
@  2800s  (total 10 workers using 15045 MB)
@  2810s  (total 10 workers using 15083 MB)
@  2821s  (total 10 workers using 15133 MB)
@  2832s  (total 10 workers using 15119 MB)
@  2843s  (total 10 workers using 15237 MB)
@  2854s  (total 10 workers using 15240 MB)
@  2865s  (total 10 workers using 15253 MB)
@  2876s  (total 10 workers using 15264 MB)
@  2887s  (total 10 workers using 15287 MB)
@  2898s  (total 10 workers using 15287 MB)
@  2909s  (total 10 workers using 15339 MB)
@  2920s  (total 10 workers using 15363 MB)
@  2931s  (total 10 workers using 15363 MB)
@  2941s  (total 10 workers using 15365 MB)
@  2952s  (total 10 workers using 15392 MB)
@  2963s  (total 10 workers using 15390 MB)
@  2974s  (total 10 workers using 15391 MB)
@  2985s  (total 10 workers using 15392 MB)
@  2996s  (total 10 workers using 15429 MB)
@  3007s  (total 10 workers using 15430 MB)
@  3018s  (total 10 workers using 15436 MB)
@  3029s  (total 10 workers using 15480 MB)
@  3040s  (total 10 workers using 15511 MB)
@  3051s  (total 10 workers using 15505 MB)
@  3062s  (total 10 workers using 15549 MB)
@  3072s  (total 10 workers using 15589 MB)
@  3083s  (total 10 workers using 15604 MB)
@  3094s  (total 10 workers using 15643 MB)
@  3105s  (total 10 workers using 15650 MB)
@  3116s  (total 10 workers using 15692 MB)
@  3127s  (total 10 workers using 15715 MB)
@  3138s  (total 10 workers using 15715 MB)
@  3149s  (total 10 workers using 15715 MB)
@  3160s  (total 10 workers using 15631 MB)
@  3171s  (total 10 workers using 15661 MB)
@  3182s  (total 10 workers using 15687 MB)
@  3193s  (total 10 workers using 15714 MB)
@  3203s  (total 10 workers using 15715 MB)
@  3215s  (total 10 workers using 15773 MB)
@  3225s  (total 10 workers using 15804 MB)
@  3236s  (total 10 workers using 15804 MB)
@  3247s  (total 10 workers using 15810 MB)
@  3258s  (total 10 workers using 15820 MB)
@  3269s  (total 10 workers using 15868 MB)
@  3280s  (total 10 workers using 15863 MB)
@  3291s  (total 10 workers using 15921 MB)
@  3302s  (total 10 workers using 15921 MB)
@  3313s  (total 10 workers using 15921 MB)
@  3324s  (total 10 workers using 15944 MB)
@  3335s  (total 10 workers using 15944 MB)
@  3346s  (total 10 workers using 15947 MB)
@  3356s  (total 10 workers using 15974 MB)
@  3367s  (total 10 workers using 16002 MB)
@  3378s  (total 10 workers using 16009 MB)
@  3389s  (total 10 workers using 16017 MB)
@  3400s  (total 10 workers using 16020 MB)
@  3411s  (total 10 workers using 16040 MB)
@  3422s  (total 10 workers using 15977 MB)
@  3433s  (total 10 workers using 16049 MB)
@  3444s  (total 10 workers using 16086 MB)
@  3455s  (total 10 workers using 16086 MB)
@  3466s  (total 10 workers using 16113 MB)
@  3477s  (total 10 workers using 16116 MB)
@  3487s  (total 10 workers using 16116 MB)
@  3498s  (total 10 workers using 16135 MB)
@  3509s  (total 10 workers using 16136 MB)
@  3520s  (total 10 workers using 16146 MB)
@  3531s  (total 10 workers using 16098 MB)
@  3542s  (total 10 workers using 16095 MB)
@  3553s  (total 10 workers using 16070 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3563s  (total 4 workers using 9940 MB)
@  3574s  (total 4 workers using 9940 MB)
@  3576s  (stopping all workers)
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3576s  (copied results from worker 0 in /tmp//pr_test)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3576.26 seconds)[m
unknown
c done
