c host: c3n32
c start: Fri Oct 18 20:42:41 CEST 2019
c arrayjobid: 17567256
c jobid: 17567553
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/vgasim_imgfifo-p058.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567553.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 28151)
@     0s  (started worker 1 with pid 28152)
@     0s  (started worker 2 with pid 28153)
@     0s  (started worker 3 with pid 28154)
@     0s  (started worker 4 with pid 28155)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 28271)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 287 MB)
@     2s  (started worker 6 with pid 28325)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 507 MB)
@     3s  (started worker 7 with pid 28387)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 661 MB)
@     4s  (started worker 8 with pid 28455)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 805 MB)
@     5s  (started worker 9 with pid 28547)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 907 MB)
@     6s  (started worker 10 with pid 28627)
@     6s  (spawned 1 workers)
@     6s  (total 11 workers using 1027 MB)
@    15s  (total 11 workers using 1446 MB)
@    27s  (total 11 workers using 2096 MB)
@    39s  (total 11 workers using 2946 MB)
@    50s  (total 11 workers using 3350 MB)
@    61s  (total 11 workers using 3803 MB)
@    72s  (total 11 workers using 4255 MB)
@    83s  (total 11 workers using 4420 MB)
@    94s  (total 11 workers using 4963 MB)
@   105s  (total 11 workers using 5279 MB)
@   117s  (total 11 workers using 5336 MB)
@   127s  (total 11 workers using 5674 MB)
@   139s  (total 11 workers using 5940 MB)
@   150s  (total 11 workers using 6342 MB)
@   161s  (total 11 workers using 6663 MB)
@   172s  (total 11 workers using 7024 MB)
@   183s  (total 11 workers using 7174 MB)
@   194s  (total 11 workers using 7327 MB)
@   205s  (total 11 workers using 7730 MB)
@   216s  (total 11 workers using 7893 MB)
@   227s  (total 11 workers using 8158 MB)
@   238s  (total 11 workers using 8445 MB)
@   249s  (total 11 workers using 8601 MB)
@   260s  (total 11 workers using 9156 MB)
@   271s  (total 11 workers using 9325 MB)
@   282s  (total 11 workers using 9654 MB)
@   293s  (total 11 workers using 9551 MB)
@   304s  (total 11 workers using 9767 MB)
@   315s  (total 11 workers using 10003 MB)
@   326s  (total 11 workers using 10229 MB)
@   337s  (total 11 workers using 10506 MB)
@   348s  (total 11 workers using 10869 MB)
@   359s  (total 11 workers using 10971 MB)
@   370s  (total 11 workers using 11276 MB)
@   381s  (total 11 workers using 11566 MB)
@   392s  (total 11 workers using 11812 MB)
@   403s  (total 11 workers using 12024 MB)
@   414s  (total 11 workers using 12394 MB)
@   426s  (total 11 workers using 12571 MB)
@   436s  (total 11 workers using 12509 MB)
@   448s  (total 11 workers using 13085 MB)
@   459s  (total 11 workers using 13039 MB)
@   470s  (total 11 workers using 13379 MB)
@   481s  (total 11 workers using 13566 MB)
@   492s  (total 11 workers using 13753 MB)
@   503s  (total 11 workers using 14030 MB)
@   514s  (total 11 workers using 13896 MB)
@   525s  (total 11 workers using 14514 MB)
@   536s  (total 11 workers using 13482 MB)
@   538s  (worker 10 finished with result unknown) python3 avr.py --bmc
@   547s  (total 10 workers using 10236 MB)
@   558s  (total 10 workers using 10490 MB)
@   569s  (total 10 workers using 10620 MB)
@   580s  (total 10 workers using 10803 MB)
@   591s  (total 10 workers using 11152 MB)
@   602s  (total 10 workers using 11074 MB)
@   613s  (total 10 workers using 11224 MB)
@   624s  (total 10 workers using 11365 MB)
@   634s  (total 10 workers using 11473 MB)
@   646s  (total 10 workers using 11632 MB)
@   656s  (total 10 workers using 11819 MB)
@   667s  (total 10 workers using 11878 MB)
@   678s  (total 10 workers using 12188 MB)
@   689s  (total 10 workers using 12252 MB)
@   700s  (total 10 workers using 12320 MB)
@   711s  (total 10 workers using 12697 MB)
@   722s  (total 10 workers using 12763 MB)
@   733s  (total 10 workers using 12846 MB)
@   744s  (total 10 workers using 12927 MB)
@   755s  (total 10 workers using 13002 MB)
@   766s  (total 10 workers using 13126 MB)
@   777s  (total 10 workers using 13209 MB)
@   787s  (total 10 workers using 13421 MB)
@   798s  (total 10 workers using 13491 MB)
@   809s  (total 10 workers using 13576 MB)
@   820s  (total 10 workers using 13729 MB)
@   831s  (total 10 workers using 13927 MB)
@   842s  (total 10 workers using 13837 MB)
@   853s  (total 10 workers using 14092 MB)
@   864s  (total 10 workers using 14392 MB)
@   875s  (total 10 workers using 14558 MB)
@   886s  (total 10 workers using 14408 MB)
@   896s  (total 10 workers using 14592 MB)
@   908s  (total 10 workers using 14693 MB)
@   918s  (total 10 workers using 14771 MB)
@   929s  (total 10 workers using 14880 MB)
@   940s  (total 10 workers using 14946 MB)
@   951s  (total 10 workers using 15031 MB)
@   962s  (total 10 workers using 15182 MB)
@   973s  (total 10 workers using 15263 MB)
@   984s  (total 10 workers using 15344 MB)
@   995s  (total 10 workers using 15435 MB)
@  1006s  (total 10 workers using 15531 MB)
@  1017s  (total 10 workers using 15671 MB)
@  1027s  (total 10 workers using 15759 MB)
@  1038s  (total 10 workers using 15865 MB)
@  1049s  (total 10 workers using 15933 MB)
@  1060s  (total 10 workers using 16070 MB)
@  1071s  (total 10 workers using 16141 MB)
@  1082s  (total 10 workers using 16253 MB)
@  1093s  (total 10 workers using 16500 MB)
@  1104s  (total 10 workers using 16634 MB)
@  1115s  (total 10 workers using 16811 MB)
@  1126s  (total 10 workers using 17009 MB)
@  1137s  (total 10 workers using 17024 MB)
@  1148s  (total 10 workers using 17559 MB)
@  1158s  (total 10 workers using 17462 MB)
@  1169s  (total 10 workers using 17845 MB)
@  1180s  (total 10 workers using 17672 MB)
@  1191s  (total 10 workers using 17832 MB)
@  1202s  (total 10 workers using 17930 MB)
@  1213s  (total 10 workers using 18068 MB)
@  1224s  (total 10 workers using 18118 MB)
@  1235s  (total 10 workers using 18207 MB)
@  1246s  (total 10 workers using 18633 MB)
@  1257s  (total 10 workers using 18393 MB)
@  1267s  (total 10 workers using 18408 MB)
@  1278s  (total 10 workers using 18451 MB)
@  1289s  (total 10 workers using 18573 MB)
@  1300s  (total 10 workers using 18634 MB)
@  1311s  (total 10 workers using 18682 MB)
@  1322s  (total 10 workers using 18834 MB)
@  1333s  (total 10 workers using 18876 MB)
@  1344s  (total 10 workers using 19062 MB)
@  1355s  (total 10 workers using 19107 MB)
@  1366s  (total 10 workers using 19521 MB)
@  1376s  (total 10 workers using 19394 MB)
@  1388s  (total 10 workers using 19559 MB)
@  1398s  (total 10 workers using 19574 MB)
@  1409s  (total 10 workers using 19726 MB)
@  1420s  (total 10 workers using 19928 MB)
@  1431s  (total 10 workers using 19704 MB)
@  1442s  (total 10 workers using 19820 MB)
@  1453s  (total 10 workers using 19873 MB)
@  1464s  (total 10 workers using 20000 MB)
@  1475s  (total 10 workers using 20109 MB)
@  1486s  (total 10 workers using 20321 MB)
@  1497s  (total 10 workers using 20384 MB)
@  1507s  (total 10 workers using 20465 MB)
@  1518s  (total 10 workers using 20631 MB)
@  1529s  (total 10 workers using 20681 MB)
@  1540s  (total 10 workers using 21097 MB)
@  1551s  (total 10 workers using 20792 MB)
@  1562s  (total 10 workers using 20795 MB)
@  1573s  (total 10 workers using 20859 MB)
@  1584s  (total 10 workers using 20908 MB)
@  1595s  (total 10 workers using 20939 MB)
@  1606s  (total 10 workers using 20912 MB)
@  1616s  (total 10 workers using 20973 MB)
@  1627s  (total 10 workers using 21039 MB)
@  1638s  (total 10 workers using 21084 MB)
@  1649s  (total 10 workers using 21088 MB)
@  1660s  (total 10 workers using 21115 MB)
@  1671s  (total 10 workers using 21357 MB)
@  1682s  (total 10 workers using 21367 MB)
@  1693s  (total 10 workers using 21414 MB)
@  1704s  (total 10 workers using 21474 MB)
@  1715s  (total 10 workers using 22025 MB)
@  1726s  (total 10 workers using 21559 MB)
@  1737s  (total 10 workers using 21605 MB)
@  1747s  (total 10 workers using 22132 MB)
@  1758s  (total 10 workers using 22037 MB)
@  1769s  (total 10 workers using 22047 MB)
@  1780s  (total 10 workers using 21966 MB)
@  1791s  (total 10 workers using 22038 MB)
@  1802s  (total 10 workers using 22196 MB)
@  1813s  (total 10 workers using 22315 MB)
@  1824s  (total 10 workers using 22381 MB)
@  1835s  (total 10 workers using 22810 MB)
@  1846s  (total 10 workers using 22574 MB)
@  1856s  (total 10 workers using 22866 MB)
@  1868s  (total 10 workers using 23009 MB)
@  1878s  (total 10 workers using 23065 MB)
@  1889s  (total 10 workers using 23126 MB)
@  1900s  (total 10 workers using 23191 MB)
@  1911s  (total 10 workers using 23288 MB)
@  1922s  (total 10 workers using 23325 MB)
@  1933s  (total 10 workers using 23428 MB)
@  1944s  (total 10 workers using 23503 MB)
@  1955s  (total 10 workers using 23602 MB)
@  1966s  (total 10 workers using 23661 MB)
@  1977s  (total 10 workers using 23705 MB)
@  1987s  (total 10 workers using 23753 MB)
@  1998s  (total 10 workers using 23813 MB)
@  2009s  (total 10 workers using 23815 MB)
@  2020s  (total 10 workers using 23822 MB)
@  2031s  (total 10 workers using 23834 MB)
@  2042s  (total 10 workers using 23857 MB)
@  2053s  (total 10 workers using 23896 MB)
@  2064s  (total 10 workers using 23969 MB)
@  2075s  (total 10 workers using 24055 MB)
@  2086s  (total 10 workers using 24591 MB)
@  2097s  (total 10 workers using 24296 MB)
@  2108s  (total 10 workers using 24320 MB)
@  2118s  (total 10 workers using 24469 MB)
@  2129s  (total 10 workers using 24607 MB)
@  2140s  (total 10 workers using 24625 MB)
@  2151s  (total 10 workers using 24707 MB)
@  2162s  (total 10 workers using 24970 MB)
@  2173s  (total 10 workers using 24959 MB)
@  2184s  (total 10 workers using 24997 MB)
@  2195s  (total 10 workers using 24863 MB)
@  2206s  (total 10 workers using 24942 MB)
@  2217s  (total 10 workers using 25030 MB)
@  2227s  (total 10 workers using 25134 MB)
@  2239s  (total 10 workers using 25199 MB)
@  2249s  (total 10 workers using 25601 MB)
@  2260s  (total 10 workers using 25187 MB)
@  2271s  (total 10 workers using 25488 MB)
@  2282s  (total 10 workers using 25512 MB)
@  2293s  (total 10 workers using 25561 MB)
@  2304s  (total 10 workers using 25609 MB)
@  2315s  (total 10 workers using 25620 MB)
@  2326s  (total 10 workers using 25673 MB)
@  2337s  (total 10 workers using 25758 MB)
@  2348s  (total 10 workers using 25796 MB)
@  2358s  (total 10 workers using 25860 MB)
@  2369s  (total 10 workers using 25873 MB)
@  2380s  (total 10 workers using 25945 MB)
@  2391s  (total 10 workers using 25986 MB)
@  2402s  (total 10 workers using 26090 MB)
@  2413s  (total 10 workers using 26158 MB)
@  2424s  (total 10 workers using 26188 MB)
@  2435s  (total 10 workers using 26263 MB)
@  2446s  (total 10 workers using 26283 MB)
@  2457s  (total 10 workers using 26327 MB)
@  2467s  (total 10 workers using 26929 MB)
@  2479s  (total 10 workers using 26500 MB)
@  2489s  (total 10 workers using 26546 MB)
@  2500s  (total 10 workers using 27056 MB)
@  2511s  (total 10 workers using 27314 MB)
@  2522s  (total 10 workers using 27623 MB)
@  2533s  (total 10 workers using 27940 MB)
@  2544s  (total 10 workers using 28155 MB)
@  2555s  (total 10 workers using 28638 MB)
@  2566s  (total 10 workers using 28899 MB)
@  2577s  (total 10 workers using 28941 MB)
@  2588s  (total 10 workers using 28956 MB)
@  2598s  (total 10 workers using 29015 MB)
@  2609s  (total 10 workers using 29073 MB)
@  2620s  (total 10 workers using 29166 MB)
@  2631s  (total 10 workers using 29461 MB)
@  2642s  (total 10 workers using 29273 MB)
@  2653s  (total 10 workers using 29574 MB)
@  2664s  (total 10 workers using 29640 MB)
@  2675s  (total 10 workers using 29764 MB)
@  2686s  (total 10 workers using 29646 MB)
@  2697s  (total 10 workers using 29647 MB)
@  2707s  (total 10 workers using 29834 MB)
@  2718s  (total 10 workers using 29897 MB)
@  2729s  (total 10 workers using 29805 MB)
@  2740s  (total 10 workers using 29887 MB)
@  2751s  (total 10 workers using 29782 MB)
@  2762s  (total 10 workers using 29807 MB)
@  2773s  (total 10 workers using 30053 MB)
@  2784s  (total 10 workers using 30374 MB)
@  2795s  (total 10 workers using 30397 MB)
@  2806s  (total 10 workers using 30416 MB)
@  2817s  (total 10 workers using 30430 MB)
@  2828s  (total 10 workers using 30435 MB)
@  2838s  (total 10 workers using 31061 MB)
@  2849s  (total 10 workers using 30493 MB)
@  2860s  (total 10 workers using 30490 MB)
@  2871s  (total 10 workers using 30520 MB)
@  2882s  (total 10 workers using 30539 MB)
@  2893s  (total 10 workers using 30635 MB)
@  2904s  (total 10 workers using 30614 MB)
@  2915s  (total 10 workers using 30742 MB)
@  2926s  (total 10 workers using 30813 MB)
@  2937s  (total 10 workers using 30873 MB)
@  2947s  (total 10 workers using 31002 MB)
@  2959s  (total 10 workers using 31177 MB)
@  2969s  (total 10 workers using 31915 MB)
@  2980s  (total 10 workers using 31519 MB)
@  2991s  (total 10 workers using 31612 MB)
@  3002s  (total 10 workers using 31652 MB)
@  3013s  (total 10 workers using 31755 MB)
@  3024s  (total 10 workers using 31735 MB)
@  3035s  (total 10 workers using 31769 MB)
@  3046s  (total 10 workers using 32045 MB)
@  3057s  (total 10 workers using 32173 MB)
@  3068s  (total 10 workers using 32143 MB)
@  3078s  (total 10 workers using 32267 MB)
@  3089s  (total 10 workers using 32256 MB)
@  3100s  (total 10 workers using 32472 MB)
@  3111s  (total 10 workers using 32546 MB)
@  3122s  (total 10 workers using 32595 MB)
@  3133s  (total 10 workers using 32663 MB)
@  3144s  (total 10 workers using 32722 MB)
@  3155s  (total 10 workers using 32822 MB)
@  3166s  (total 10 workers using 32716 MB)
@  3177s  (total 10 workers using 33220 MB)
@  3188s  (total 10 workers using 33318 MB)
@  3199s  (total 10 workers using 33286 MB)
@  3209s  (total 10 workers using 33330 MB)
@  3220s  (total 10 workers using 33233 MB)
@  3231s  (total 10 workers using 33156 MB)
@  3242s  (total 10 workers using 33118 MB)
@  3253s  (total 10 workers using 33463 MB)
@  3264s  (total 10 workers using 33590 MB)
@  3275s  (total 10 workers using 33645 MB)
@  3286s  (total 10 workers using 33615 MB)
@  3297s  (total 10 workers using 34428 MB)
@  3308s  (total 10 workers using 33800 MB)
@  3318s  (total 10 workers using 33906 MB)
@  3330s  (total 10 workers using 33946 MB)
@  3340s  (total 10 workers using 33972 MB)
@  3351s  (total 10 workers using 34417 MB)
@  3362s  (total 10 workers using 34487 MB)
@  3373s  (total 10 workers using 34547 MB)
@  3384s  (total 10 workers using 34568 MB)
@  3395s  (total 10 workers using 34808 MB)
@  3406s  (total 10 workers using 34910 MB)
@  3417s  (total 10 workers using 34961 MB)
@  3428s  (total 10 workers using 35221 MB)
@  3439s  (total 10 workers using 35334 MB)
@  3449s  (total 10 workers using 35408 MB)
@  3460s  (total 10 workers using 35481 MB)
@  3471s  (total 10 workers using 35586 MB)
@  3482s  (total 10 workers using 35637 MB)
@  3493s  (total 10 workers using 35689 MB)
@  3504s  (total 10 workers using 35789 MB)
@  3515s  (total 10 workers using 35793 MB)
@  3526s  (total 10 workers using 35914 MB)
@  3537s  (total 10 workers using 35723 MB)
@  3548s  (total 10 workers using 36061 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3556s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3558s  (total 5 workers using 24951 MB)
@  3569s  (total 5 workers using 24951 MB)
@  3573s  (stopping all workers)
@  3573s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3573s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3573s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3573s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3573s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3573s  (copied results from worker 0 in /tmp//pr_test)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3573.38 seconds)[m
unknown
c done
