c host: c3n16
c start: Fri Oct 18 20:51:12 CEST 2019
c arrayjobid: 17567256
c jobid: 17567560
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/vgasim_imgfifo-p066.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567560.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 27200)
@     0s  (started worker 1 with pid 27201)
@     0s  (started worker 2 with pid 27202)
@     0s  (started worker 3 with pid 27203)
@     0s  (started worker 4 with pid 27204)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 27320)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 290 MB)
@     2s  (started worker 6 with pid 27376)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 501 MB)
@     3s  (started worker 7 with pid 27438)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 666 MB)
@     4s  (started worker 8 with pid 27506)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 814 MB)
@     5s  (started worker 9 with pid 27598)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 926 MB)
@     7s  (started worker 10 with pid 27678)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1017 MB)
@    15s  (total 11 workers using 1492 MB)
@    27s  (total 11 workers using 2211 MB)
@    39s  (total 11 workers using 2924 MB)
@    50s  (total 11 workers using 3361 MB)
@    61s  (total 11 workers using 3712 MB)
@    72s  (total 11 workers using 4317 MB)
@    83s  (total 11 workers using 4728 MB)
@    94s  (total 11 workers using 4919 MB)
@   105s  (total 11 workers using 5453 MB)
@   116s  (total 11 workers using 6023 MB)
@   127s  (total 11 workers using 6129 MB)
@   139s  (total 11 workers using 6313 MB)
@   149s  (total 11 workers using 6717 MB)
@   161s  (total 11 workers using 7170 MB)
@   171s  (total 11 workers using 7607 MB)
@   183s  (total 11 workers using 7886 MB)
@   194s  (total 11 workers using 8199 MB)
@   205s  (total 11 workers using 8631 MB)
@   216s  (total 11 workers using 8946 MB)
@   227s  (total 11 workers using 9217 MB)
@   238s  (total 11 workers using 9369 MB)
@   249s  (total 11 workers using 9693 MB)
@   260s  (total 11 workers using 9788 MB)
@   271s  (total 11 workers using 10147 MB)
@   282s  (total 11 workers using 10494 MB)
@   293s  (total 11 workers using 10512 MB)
@   304s  (total 11 workers using 10926 MB)
@   315s  (total 11 workers using 11327 MB)
@   326s  (total 11 workers using 11682 MB)
@   337s  (total 11 workers using 11960 MB)
@   348s  (total 11 workers using 12093 MB)
@   359s  (total 11 workers using 12533 MB)
@   370s  (total 11 workers using 12446 MB)
@   381s  (total 11 workers using 12656 MB)
@   392s  (total 11 workers using 13129 MB)
@   404s  (total 11 workers using 13116 MB)
@   415s  (total 11 workers using 13259 MB)
@   426s  (total 11 workers using 13812 MB)
@   437s  (total 11 workers using 13970 MB)
@   448s  (total 11 workers using 14032 MB)
@   459s  (total 11 workers using 14351 MB)
@   470s  (total 11 workers using 14566 MB)
@   480s  (worker 10 finished with result unknown) python3 avr.py --bmc
@   481s  (total 10 workers using 10277 MB)
@   492s  (total 10 workers using 10601 MB)
@   503s  (total 10 workers using 10789 MB)
@   514s  (total 10 workers using 10893 MB)
@   525s  (total 10 workers using 10968 MB)
@   536s  (total 10 workers using 11151 MB)
@   547s  (total 10 workers using 11415 MB)
@   558s  (total 10 workers using 11680 MB)
@   569s  (total 10 workers using 11649 MB)
@   580s  (total 10 workers using 11857 MB)
@   590s  (total 10 workers using 11812 MB)
@   602s  (total 10 workers using 12457 MB)
@   612s  (total 10 workers using 12103 MB)
@   623s  (total 10 workers using 12201 MB)
@   634s  (total 10 workers using 12307 MB)
@   645s  (total 10 workers using 12397 MB)
@   656s  (total 10 workers using 12629 MB)
@   667s  (total 10 workers using 12754 MB)
@   678s  (total 10 workers using 12862 MB)
@   689s  (total 10 workers using 12944 MB)
@   700s  (total 10 workers using 13098 MB)
@   711s  (total 10 workers using 13219 MB)
@   722s  (total 10 workers using 13403 MB)
@   733s  (total 10 workers using 13874 MB)
@   744s  (total 10 workers using 13747 MB)
@   755s  (total 10 workers using 13871 MB)
@   766s  (total 10 workers using 14064 MB)
@   777s  (total 10 workers using 14067 MB)
@   787s  (total 10 workers using 14096 MB)
@   799s  (total 10 workers using 14189 MB)
@   809s  (total 10 workers using 14245 MB)
@   820s  (total 10 workers using 14145 MB)
@   831s  (total 10 workers using 14424 MB)
@   842s  (total 10 workers using 14510 MB)
@   853s  (total 10 workers using 14611 MB)
@   864s  (total 10 workers using 14738 MB)
@   875s  (total 10 workers using 14857 MB)
@   886s  (total 10 workers using 14949 MB)
@   897s  (total 10 workers using 15101 MB)
@   908s  (total 10 workers using 15435 MB)
@   919s  (total 10 workers using 15447 MB)
@   930s  (total 10 workers using 15533 MB)
@   940s  (total 10 workers using 15588 MB)
@   952s  (total 10 workers using 15924 MB)
@   962s  (total 10 workers using 16333 MB)
@   973s  (total 10 workers using 16202 MB)
@   984s  (total 10 workers using 16320 MB)
@   995s  (total 10 workers using 16219 MB)
@  1006s  (total 10 workers using 16497 MB)
@  1017s  (total 10 workers using 16624 MB)
@  1028s  (total 10 workers using 16659 MB)
@  1039s  (total 10 workers using 16697 MB)
@  1050s  (total 10 workers using 16811 MB)
@  1061s  (total 10 workers using 17012 MB)
@  1072s  (total 10 workers using 17054 MB)
@  1083s  (total 10 workers using 17035 MB)
@  1094s  (total 10 workers using 17323 MB)
@  1105s  (total 10 workers using 17486 MB)
@  1115s  (total 10 workers using 17519 MB)
@  1126s  (total 10 workers using 17443 MB)
@  1137s  (total 10 workers using 17630 MB)
@  1148s  (total 10 workers using 17670 MB)
@  1159s  (total 10 workers using 18431 MB)
@  1170s  (total 10 workers using 18233 MB)
@  1181s  (total 10 workers using 18308 MB)
@  1192s  (total 10 workers using 18385 MB)
@  1203s  (total 10 workers using 18474 MB)
@  1214s  (total 10 workers using 18719 MB)
@  1225s  (total 10 workers using 18910 MB)
@  1236s  (total 10 workers using 18978 MB)
@  1247s  (total 10 workers using 19054 MB)
@  1258s  (total 10 workers using 19176 MB)
@  1268s  (total 10 workers using 19316 MB)
@  1280s  (total 10 workers using 19445 MB)
@  1290s  (total 10 workers using 19563 MB)
@  1301s  (total 10 workers using 19598 MB)
@  1312s  (total 10 workers using 19720 MB)
@  1323s  (total 10 workers using 20181 MB)
@  1334s  (total 10 workers using 20140 MB)
@  1345s  (total 10 workers using 20251 MB)
@  1356s  (total 10 workers using 20166 MB)
@  1367s  (total 10 workers using 20374 MB)
@  1378s  (total 10 workers using 20334 MB)
@  1389s  (total 10 workers using 20406 MB)
@  1400s  (total 10 workers using 20375 MB)
@  1411s  (total 10 workers using 20483 MB)
@  1421s  (total 10 workers using 20671 MB)
@  1433s  (total 10 workers using 20715 MB)
@  1443s  (total 10 workers using 20830 MB)
@  1454s  (total 10 workers using 20855 MB)
@  1465s  (total 10 workers using 21011 MB)
@  1476s  (total 10 workers using 21622 MB)
@  1487s  (total 10 workers using 21289 MB)
@  1498s  (total 10 workers using 21382 MB)
@  1509s  (total 10 workers using 21473 MB)
@  1520s  (total 10 workers using 21550 MB)
@  1531s  (total 10 workers using 21782 MB)
@  1542s  (total 10 workers using 21928 MB)
@  1553s  (total 10 workers using 22108 MB)
@  1564s  (total 10 workers using 22226 MB)
@  1574s  (total 10 workers using 22226 MB)
@  1585s  (total 10 workers using 22311 MB)
@  1596s  (total 10 workers using 22471 MB)
@  1607s  (total 10 workers using 22637 MB)
@  1618s  (total 10 workers using 22732 MB)
@  1629s  (total 10 workers using 22995 MB)
@  1640s  (total 10 workers using 23186 MB)
@  1651s  (total 10 workers using 23275 MB)
@  1662s  (total 10 workers using 23323 MB)
@  1673s  (total 10 workers using 23317 MB)
@  1684s  (total 10 workers using 23527 MB)
@  1695s  (total 10 workers using 23640 MB)
@  1706s  (total 10 workers using 23940 MB)
@  1717s  (total 10 workers using 23984 MB)
@  1727s  (total 10 workers using 24027 MB)
@  1739s  (total 10 workers using 24077 MB)
@  1749s  (total 10 workers using 24269 MB)
@  1760s  (total 10 workers using 24544 MB)
@  1771s  (total 10 workers using 24648 MB)
@  1782s  (total 10 workers using 24643 MB)
@  1793s  (total 10 workers using 24883 MB)
@  1804s  (total 10 workers using 24882 MB)
@  1815s  (total 10 workers using 25249 MB)
@  1826s  (total 10 workers using 25188 MB)
@  1837s  (total 10 workers using 25305 MB)
@  1848s  (total 10 workers using 25439 MB)
@  1859s  (total 10 workers using 25504 MB)
@  1870s  (total 10 workers using 25603 MB)
@  1881s  (total 10 workers using 25660 MB)
@  1892s  (total 10 workers using 25794 MB)
@  1902s  (total 10 workers using 26328 MB)
@  1913s  (total 10 workers using 25992 MB)
@  1924s  (total 10 workers using 26084 MB)
@  1935s  (total 10 workers using 26468 MB)
@  1946s  (total 10 workers using 26588 MB)
@  1957s  (total 10 workers using 26682 MB)
@  1968s  (total 10 workers using 26751 MB)
@  1979s  (total 10 workers using 26800 MB)
@  1990s  (total 10 workers using 26909 MB)
@  2001s  (total 10 workers using 26976 MB)
@  2012s  (total 10 workers using 27082 MB)
@  2023s  (total 10 workers using 27082 MB)
@  2034s  (total 10 workers using 27168 MB)
@  2045s  (total 10 workers using 27217 MB)
@  2055s  (total 10 workers using 27268 MB)
@  2066s  (total 10 workers using 27341 MB)
@  2077s  (total 10 workers using 27426 MB)
@  2088s  (total 10 workers using 27482 MB)
@  2099s  (total 10 workers using 27538 MB)
@  2110s  (total 10 workers using 27915 MB)
@  2121s  (total 10 workers using 27913 MB)
@  2132s  (total 10 workers using 27744 MB)
@  2143s  (total 10 workers using 27803 MB)
@  2154s  (total 10 workers using 27949 MB)
@  2165s  (total 10 workers using 28026 MB)
@  2176s  (total 10 workers using 28116 MB)
@  2187s  (total 10 workers using 28147 MB)
@  2198s  (total 10 workers using 28038 MB)
@  2208s  (total 10 workers using 28912 MB)
@  2220s  (total 10 workers using 28568 MB)
@  2230s  (total 10 workers using 28672 MB)
@  2241s  (total 10 workers using 28769 MB)
@  2252s  (total 10 workers using 28870 MB)
@  2263s  (total 10 workers using 29011 MB)
@  2274s  (total 10 workers using 29129 MB)
@  2285s  (total 10 workers using 29222 MB)
@  2296s  (total 10 workers using 29330 MB)
@  2307s  (total 10 workers using 29430 MB)
@  2318s  (total 10 workers using 29540 MB)
@  2329s  (total 10 workers using 29622 MB)
@  2340s  (total 10 workers using 29789 MB)
@  2351s  (total 10 workers using 29969 MB)
@  2361s  (total 10 workers using 30086 MB)
@  2372s  (total 10 workers using 30205 MB)
@  2383s  (total 10 workers using 30167 MB)
@  2394s  (total 10 workers using 30580 MB)
@  2405s  (total 10 workers using 31351 MB)
@  2416s  (total 10 workers using 30845 MB)
@  2427s  (total 10 workers using 30972 MB)
@  2438s  (total 10 workers using 31325 MB)
@  2449s  (total 10 workers using 31570 MB)
@  2460s  (total 10 workers using 31445 MB)
@  2471s  (total 10 workers using 31624 MB)
@  2482s  (total 10 workers using 31890 MB)
@  2493s  (total 10 workers using 31843 MB)
@  2504s  (total 10 workers using 31916 MB)
@  2515s  (total 10 workers using 32064 MB)
@  2526s  (total 10 workers using 32191 MB)
@  2536s  (total 10 workers using 32395 MB)
@  2547s  (total 10 workers using 32464 MB)
@  2558s  (total 10 workers using 32521 MB)
@  2569s  (total 10 workers using 32527 MB)
@  2580s  (total 10 workers using 32597 MB)
@  2591s  (total 10 workers using 32664 MB)
@  2602s  (total 10 workers using 32738 MB)
@  2613s  (total 10 workers using 32784 MB)
@  2624s  (total 10 workers using 32845 MB)
@  2635s  (total 10 workers using 32888 MB)
@  2646s  (total 10 workers using 33083 MB)
@  2657s  (total 10 workers using 33144 MB)
@  2668s  (total 10 workers using 33183 MB)
@  2679s  (total 10 workers using 33309 MB)
@  2690s  (total 10 workers using 33371 MB)
@  2701s  (total 10 workers using 33464 MB)
@  2711s  (total 10 workers using 33535 MB)
@  2723s  (total 10 workers using 33605 MB)
@  2733s  (total 10 workers using 33714 MB)
@  2744s  (total 10 workers using 33802 MB)
@  2755s  (total 10 workers using 33979 MB)
@  2766s  (total 10 workers using 34081 MB)
@  2777s  (total 10 workers using 34668 MB)
@  2788s  (total 10 workers using 34196 MB)
@  2799s  (total 10 workers using 34337 MB)
@  2810s  (total 10 workers using 34432 MB)
@  2821s  (total 10 workers using 34545 MB)
@  2832s  (total 10 workers using 34668 MB)
@  2843s  (total 10 workers using 34988 MB)
@  2854s  (total 10 workers using 34946 MB)
@  2865s  (total 10 workers using 35013 MB)
@  2876s  (total 10 workers using 35055 MB)
@  2887s  (total 10 workers using 35055 MB)
@  2898s  (total 10 workers using 35237 MB)
@  2908s  (total 10 workers using 35391 MB)
@  2920s  (total 10 workers using 35443 MB)
@  2930s  (total 10 workers using 35771 MB)
@  2941s  (total 10 workers using 35572 MB)
@  2952s  (total 10 workers using 35894 MB)
@  2963s  (total 10 workers using 35998 MB)
@  2974s  (total 10 workers using 36360 MB)
@  2985s  (total 10 workers using 36983 MB)
@  2996s  (total 10 workers using 36609 MB)
@  3007s  (total 10 workers using 36709 MB)
@  3018s  (total 10 workers using 36729 MB)
@  3029s  (total 10 workers using 36850 MB)
@  3040s  (total 10 workers using 36938 MB)
@  3051s  (total 10 workers using 37116 MB)
@  3062s  (total 10 workers using 37224 MB)
@  3073s  (total 10 workers using 37348 MB)
@  3084s  (total 10 workers using 37487 MB)
@  3095s  (total 10 workers using 37625 MB)
@  3105s  (total 10 workers using 37736 MB)
@  3117s  (total 10 workers using 37827 MB)
@  3127s  (total 10 workers using 37943 MB)
@  3138s  (total 10 workers using 38078 MB)
@  3149s  (total 10 workers using 38152 MB)
@  3160s  (total 10 workers using 38230 MB)
@  3171s  (total 10 workers using 38286 MB)
@  3182s  (total 10 workers using 38563 MB)
@  3193s  (total 10 workers using 38846 MB)
@  3204s  (total 10 workers using 38956 MB)
@  3215s  (total 10 workers using 39186 MB)
@  3226s  (total 10 workers using 39222 MB)
@  3237s  (total 10 workers using 39452 MB)
@  3248s  (total 10 workers using 39575 MB)
@  3259s  (total 10 workers using 39729 MB)
@  3270s  (total 10 workers using 40437 MB)
@  3281s  (total 10 workers using 40504 MB)
@  3292s  (total 10 workers using 40696 MB)
@  3302s  (total 10 workers using 40722 MB)
@  3314s  (total 10 workers using 41085 MB)
@  3324s  (total 10 workers using 41483 MB)
@  3335s  (total 10 workers using 41534 MB)
@  3346s  (total 10 workers using 41563 MB)
@  3357s  (total 10 workers using 41867 MB)
@  3368s  (total 10 workers using 41677 MB)
@  3379s  (total 10 workers using 41815 MB)
@  3390s  (total 10 workers using 41863 MB)
@  3401s  (total 10 workers using 42165 MB)
@  3412s  (total 10 workers using 42522 MB)
@  3423s  (total 10 workers using 42359 MB)
@  3434s  (total 10 workers using 42941 MB)
@  3445s  (total 10 workers using 42692 MB)
@  3456s  (total 10 workers using 42623 MB)
@  3467s  (total 10 workers using 42647 MB)
@  3477s  (total 10 workers using 43494 MB)
@  3489s  (total 10 workers using 43110 MB)
@  3499s  (total 10 workers using 43314 MB)
@  3510s  (total 10 workers using 43413 MB)
@  3521s  (total 10 workers using 43543 MB)
@  3532s  (total 10 workers using 43636 MB)
@  3543s  (total 10 workers using 43839 MB)
@  3554s  (total 10 workers using 35962 MB)
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3556s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3564s  (total 1 workers using 3189 MB)
@  3575s  (stopping all workers)
@  3575s  (total 1 workers using 0 MB)
@  3575s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3574.66 seconds)[m
unknown
c done
