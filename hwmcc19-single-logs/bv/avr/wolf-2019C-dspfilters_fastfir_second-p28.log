c host: c3n29
c start: Fri Oct 18 20:33:50 CEST 2019
c arrayjobid: 17567256
c jobid: 17567467
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/wolf/2019C/dspfilters_fastfir_second-p28.btor
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567467.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 12647)
@     0s  (started worker 1 with pid 12648)
@     0s  (started worker 2 with pid 12649)
@     0s  (started worker 3 with pid 12650)
@     0s  (started worker 4 with pid 12651)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 12767)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 432 MB)
@     2s  (started worker 6 with pid 12823)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 590 MB)
@     3s  (started worker 7 with pid 12885)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 734 MB)
@     4s  (started worker 8 with pid 12954)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 927 MB)
@     5s  (started worker 9 with pid 13047)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1080 MB)
@     7s  (started worker 10 with pid 13127)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1242 MB)
@    15s  (total 11 workers using 1794 MB)
@    27s  (total 11 workers using 2156 MB)
@    39s  (total 11 workers using 2312 MB)
@    50s  (total 11 workers using 2497 MB)
@    61s  (total 11 workers using 2571 MB)
@    73s  (total 11 workers using 2678 MB)
@    84s  (total 11 workers using 2793 MB)
@    95s  (total 11 workers using 2827 MB)
@   106s  (total 11 workers using 2871 MB)
@   117s  (total 11 workers using 3007 MB)
@   128s  (total 11 workers using 3039 MB)
@   139s  (total 11 workers using 3155 MB)
@   150s  (total 11 workers using 3211 MB)
@   161s  (total 11 workers using 3309 MB)
@   172s  (total 11 workers using 3325 MB)
@   183s  (total 11 workers using 3451 MB)
@   194s  (total 11 workers using 3641 MB)
@   206s  (total 11 workers using 3725 MB)
@   217s  (total 11 workers using 3928 MB)
@   228s  (total 11 workers using 4069 MB)
@   239s  (total 11 workers using 4139 MB)
@   250s  (total 11 workers using 4342 MB)
@   261s  (total 11 workers using 4406 MB)
@   272s  (total 11 workers using 4463 MB)
@   283s  (total 11 workers using 4487 MB)
@   294s  (total 11 workers using 4499 MB)
@   305s  (total 11 workers using 4707 MB)
@   316s  (total 11 workers using 4708 MB)
@   327s  (total 11 workers using 4911 MB)
@   339s  (total 11 workers using 4931 MB)
@   350s  (total 11 workers using 5027 MB)
@   361s  (total 11 workers using 5146 MB)
@   372s  (total 11 workers using 5126 MB)
@   383s  (total 11 workers using 5205 MB)
@   394s  (total 11 workers using 5277 MB)
@   405s  (total 11 workers using 5387 MB)
@   416s  (total 11 workers using 5413 MB)
@   427s  (total 11 workers using 5463 MB)
@   438s  (total 11 workers using 5538 MB)
@   449s  (total 11 workers using 5632 MB)
@   460s  (total 11 workers using 5679 MB)
@   471s  (total 11 workers using 5743 MB)
@   482s  (total 11 workers using 5781 MB)
@   493s  (total 11 workers using 5944 MB)
@   504s  (total 11 workers using 6011 MB)
@   516s  (total 11 workers using 5968 MB)
@   526s  (total 11 workers using 6009 MB)
@   538s  (total 11 workers using 6058 MB)
@   549s  (total 11 workers using 6130 MB)
@   560s  (total 11 workers using 6218 MB)
@   571s  (total 11 workers using 6272 MB)
@   582s  (total 11 workers using 6330 MB)
@   593s  (total 11 workers using 6366 MB)
@   604s  (total 11 workers using 6410 MB)
@   615s  (total 11 workers using 6437 MB)
@   626s  (total 11 workers using 6433 MB)
@   637s  (total 11 workers using 6558 MB)
@   648s  (total 11 workers using 6785 MB)
@   659s  (total 11 workers using 6901 MB)
@   670s  (total 11 workers using 6904 MB)
@   681s  (total 11 workers using 6950 MB)
@   692s  (total 11 workers using 7028 MB)
@   703s  (total 11 workers using 7130 MB)
@   714s  (total 11 workers using 7141 MB)
@   725s  (total 11 workers using 7163 MB)
@   736s  (total 11 workers using 7202 MB)
@   747s  (total 11 workers using 7218 MB)
@   759s  (total 11 workers using 7285 MB)
@   769s  (total 11 workers using 7299 MB)
@   781s  (total 11 workers using 7322 MB)
@   792s  (total 11 workers using 7532 MB)
@   803s  (total 11 workers using 7670 MB)
@   814s  (total 11 workers using 7810 MB)
@   825s  (total 11 workers using 7861 MB)
@   836s  (total 11 workers using 7862 MB)
@   847s  (total 11 workers using 8005 MB)
@   858s  (total 11 workers using 8158 MB)
@   869s  (total 11 workers using 8187 MB)
@   880s  (total 11 workers using 8241 MB)
@   891s  (total 11 workers using 8294 MB)
@   902s  (total 11 workers using 8388 MB)
@   913s  (total 11 workers using 8296 MB)
@   924s  (total 11 workers using 8336 MB)
@   935s  (total 11 workers using 8466 MB)
@   946s  (total 11 workers using 8524 MB)
@   958s  (total 11 workers using 8466 MB)
@   969s  (total 11 workers using 8562 MB)
@   980s  (total 11 workers using 8586 MB)
@   991s  (total 11 workers using 8670 MB)
@  1002s  (total 11 workers using 8931 MB)
@  1013s  (total 11 workers using 9034 MB)
@  1024s  (total 11 workers using 9030 MB)
@  1035s  (total 11 workers using 9060 MB)
@  1046s  (total 11 workers using 9127 MB)
@  1057s  (total 11 workers using 9153 MB)
@  1068s  (total 11 workers using 9259 MB)
@  1079s  (total 11 workers using 9330 MB)
@  1091s  (total 11 workers using 9462 MB)
@  1101s  (total 11 workers using 9598 MB)
@  1113s  (total 11 workers using 9735 MB)
@  1124s  (total 11 workers using 9755 MB)
@  1135s  (total 11 workers using 9793 MB)
@  1146s  (total 11 workers using 9900 MB)
@  1157s  (total 11 workers using 9968 MB)
@  1168s  (total 11 workers using 10080 MB)
@  1179s  (total 11 workers using 10175 MB)
@  1190s  (total 11 workers using 10148 MB)
@  1201s  (total 11 workers using 10454 MB)
@  1212s  (total 11 workers using 10505 MB)
@  1223s  (total 11 workers using 10457 MB)
@  1234s  (total 11 workers using 10487 MB)
@  1245s  (total 11 workers using 10407 MB)
@  1256s  (total 11 workers using 10499 MB)
@  1268s  (total 11 workers using 10477 MB)
@  1279s  (total 11 workers using 10610 MB)
@  1290s  (total 11 workers using 10687 MB)
@  1301s  (total 11 workers using 10711 MB)
@  1312s  (total 11 workers using 10639 MB)
@  1323s  (total 11 workers using 10646 MB)
@  1334s  (total 11 workers using 10749 MB)
@  1345s  (total 11 workers using 10759 MB)
@  1356s  (total 11 workers using 10787 MB)
@  1367s  (total 11 workers using 10798 MB)
@  1378s  (total 11 workers using 10834 MB)
@  1389s  (total 11 workers using 10858 MB)
@  1400s  (total 11 workers using 10871 MB)
@  1411s  (total 11 workers using 10944 MB)
@  1422s  (total 11 workers using 11065 MB)
@  1433s  (total 11 workers using 11074 MB)
@  1444s  (total 11 workers using 11134 MB)
@  1455s  (total 11 workers using 11142 MB)
@  1467s  (total 11 workers using 11174 MB)
@  1477s  (total 11 workers using 11158 MB)
@  1489s  (total 11 workers using 11233 MB)
@  1499s  (total 11 workers using 11244 MB)
@  1511s  (total 11 workers using 11282 MB)
@  1522s  (total 11 workers using 11288 MB)
@  1533s  (total 11 workers using 11344 MB)
@  1544s  (total 11 workers using 11335 MB)
@  1555s  (total 11 workers using 11496 MB)
@  1566s  (total 11 workers using 11445 MB)
@  1577s  (total 11 workers using 11505 MB)
@  1588s  (total 11 workers using 11476 MB)
@  1599s  (total 11 workers using 11648 MB)
@  1610s  (total 11 workers using 11682 MB)
@  1621s  (total 11 workers using 11599 MB)
@  1632s  (total 11 workers using 11662 MB)
@  1643s  (total 11 workers using 11725 MB)
@  1654s  (total 11 workers using 11893 MB)
@  1665s  (total 11 workers using 12079 MB)
@  1676s  (total 11 workers using 12161 MB)
@  1687s  (total 11 workers using 12223 MB)
@  1698s  (total 11 workers using 12268 MB)
@  1710s  (total 11 workers using 12280 MB)
@  1720s  (total 11 workers using 12358 MB)
@  1732s  (total 11 workers using 12430 MB)
@  1743s  (total 11 workers using 12508 MB)
@  1754s  (total 11 workers using 12520 MB)
@  1765s  (total 11 workers using 12549 MB)
@  1776s  (total 11 workers using 12604 MB)
@  1787s  (total 11 workers using 12689 MB)
@  1798s  (total 11 workers using 12685 MB)
@  1809s  (total 11 workers using 12738 MB)
@  1820s  (total 11 workers using 12779 MB)
@  1831s  (total 11 workers using 12855 MB)
@  1842s  (total 11 workers using 12936 MB)
@  1853s  (total 11 workers using 13003 MB)
@  1864s  (total 11 workers using 13137 MB)
@  1875s  (total 11 workers using 13246 MB)
@  1886s  (total 11 workers using 13326 MB)
@  1897s  (total 11 workers using 13422 MB)
@  1908s  (total 11 workers using 13389 MB)
@  1919s  (total 11 workers using 13405 MB)
@  1930s  (total 11 workers using 13534 MB)
@  1941s  (total 11 workers using 13533 MB)
@  1953s  (total 11 workers using 13642 MB)
@  1963s  (total 11 workers using 13703 MB)
@  1975s  (total 11 workers using 13813 MB)
@  1986s  (total 11 workers using 13824 MB)
@  1992s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  1997s  (total 10 workers using 12444 MB)
@  2007s  (total 10 workers using 12377 MB)
@  2018s  (total 10 workers using 12435 MB)
@  2029s  (total 10 workers using 12468 MB)
@  2040s  (total 10 workers using 12578 MB)
@  2051s  (total 10 workers using 12605 MB)
@  2062s  (total 10 workers using 12768 MB)
@  2073s  (total 10 workers using 12824 MB)
@  2084s  (total 10 workers using 12860 MB)
@  2095s  (total 10 workers using 12900 MB)
@  2106s  (total 10 workers using 12927 MB)
@  2117s  (total 10 workers using 13015 MB)
@  2128s  (total 10 workers using 13052 MB)
@  2138s  (total 10 workers using 13031 MB)
@  2150s  (total 10 workers using 13031 MB)
@  2160s  (total 10 workers using 13055 MB)
@  2171s  (total 10 workers using 13106 MB)
@  2182s  (total 10 workers using 13328 MB)
@  2193s  (total 10 workers using 13331 MB)
@  2204s  (total 10 workers using 13320 MB)
@  2215s  (total 10 workers using 13283 MB)
@  2226s  (total 10 workers using 13294 MB)
@  2237s  (total 10 workers using 13295 MB)
@  2248s  (total 10 workers using 13568 MB)
@  2259s  (total 10 workers using 13674 MB)
@  2269s  (total 10 workers using 13812 MB)
@  2281s  (total 10 workers using 13837 MB)
@  2291s  (total 10 workers using 13890 MB)
@  2302s  (total 10 workers using 13908 MB)
@  2313s  (total 10 workers using 14106 MB)
@  2324s  (total 10 workers using 14100 MB)
@  2335s  (total 10 workers using 14160 MB)
@  2346s  (total 10 workers using 14296 MB)
@  2357s  (total 10 workers using 14334 MB)
@  2368s  (total 10 workers using 14358 MB)
@  2379s  (total 10 workers using 14400 MB)
@  2390s  (total 10 workers using 14514 MB)
@  2401s  (total 10 workers using 14528 MB)
@  2412s  (total 10 workers using 14624 MB)
@  2422s  (total 10 workers using 14715 MB)
@  2433s  (total 10 workers using 14719 MB)
@  2444s  (total 10 workers using 14738 MB)
@  2455s  (total 10 workers using 14767 MB)
@  2466s  (total 10 workers using 14789 MB)
@  2477s  (total 10 workers using 14898 MB)
@  2488s  (total 10 workers using 14968 MB)
@  2499s  (total 10 workers using 14909 MB)
@  2510s  (total 10 workers using 15025 MB)
@  2521s  (total 10 workers using 15060 MB)
@  2532s  (total 10 workers using 15118 MB)
@  2543s  (total 10 workers using 15142 MB)
@  2553s  (total 10 workers using 15191 MB)
@  2564s  (total 10 workers using 15180 MB)
@  2575s  (total 10 workers using 15252 MB)
@  2586s  (total 10 workers using 15249 MB)
@  2597s  (total 10 workers using 15295 MB)
@  2608s  (total 10 workers using 15313 MB)
@  2619s  (total 10 workers using 15349 MB)
@  2630s  (total 10 workers using 15319 MB)
@  2641s  (total 10 workers using 15395 MB)
@  2652s  (total 10 workers using 15484 MB)
@  2663s  (total 10 workers using 15536 MB)
@  2674s  (total 10 workers using 15587 MB)
@  2684s  (total 10 workers using 15572 MB)
@  2695s  (total 10 workers using 15706 MB)
@  2706s  (total 10 workers using 15848 MB)
@  2717s  (total 10 workers using 15876 MB)
@  2728s  (total 10 workers using 15869 MB)
@  2739s  (total 10 workers using 15903 MB)
@  2750s  (total 10 workers using 15946 MB)
@  2761s  (total 10 workers using 16019 MB)
@  2772s  (total 10 workers using 16052 MB)
@  2783s  (total 10 workers using 16080 MB)
@  2794s  (total 10 workers using 16208 MB)
@  2805s  (total 10 workers using 16335 MB)
@  2816s  (total 10 workers using 16464 MB)
@  2827s  (total 10 workers using 16375 MB)
@  2837s  (total 10 workers using 16327 MB)
@  2848s  (total 10 workers using 16379 MB)
@  2859s  (total 10 workers using 16460 MB)
@  2870s  (total 10 workers using 16484 MB)
@  2881s  (total 10 workers using 16515 MB)
@  2892s  (total 10 workers using 16552 MB)
@  2903s  (total 10 workers using 16576 MB)
@  2914s  (total 10 workers using 16700 MB)
@  2925s  (total 10 workers using 16700 MB)
@  2936s  (total 10 workers using 16748 MB)
@  2947s  (total 10 workers using 16727 MB)
@  2958s  (total 10 workers using 16802 MB)
@  2968s  (total 10 workers using 16796 MB)
@  2980s  (total 10 workers using 16780 MB)
@  2990s  (total 10 workers using 16844 MB)
@  3001s  (total 10 workers using 16823 MB)
@  3012s  (total 10 workers using 16886 MB)
@  3023s  (total 10 workers using 16988 MB)
@  3034s  (total 10 workers using 17016 MB)
@  3045s  (total 10 workers using 16998 MB)
@  3056s  (total 10 workers using 17069 MB)
@  3067s  (total 10 workers using 17071 MB)
@  3078s  (total 10 workers using 17078 MB)
@  3089s  (total 10 workers using 17143 MB)
@  3100s  (total 10 workers using 17275 MB)
@  3111s  (total 10 workers using 17331 MB)
@  3121s  (total 10 workers using 17347 MB)
@  3133s  (total 10 workers using 17444 MB)
@  3143s  (total 10 workers using 17425 MB)
@  3154s  (total 10 workers using 17538 MB)
@  3165s  (total 10 workers using 17588 MB)
@  3176s  (total 10 workers using 17589 MB)
@  3187s  (total 10 workers using 17629 MB)
@  3198s  (total 10 workers using 17631 MB)
@  3209s  (total 10 workers using 17622 MB)
@  3220s  (total 10 workers using 17696 MB)
@  3231s  (total 10 workers using 17672 MB)
@  3242s  (total 10 workers using 17706 MB)
@  3253s  (total 10 workers using 17693 MB)
@  3264s  (total 10 workers using 17730 MB)
@  3274s  (total 10 workers using 17718 MB)
@  3285s  (total 10 workers using 17768 MB)
@  3296s  (total 10 workers using 17840 MB)
@  3307s  (total 10 workers using 17910 MB)
@  3318s  (total 10 workers using 17928 MB)
@  3329s  (total 10 workers using 18050 MB)
@  3340s  (total 10 workers using 18091 MB)
@  3351s  (total 10 workers using 18120 MB)
@  3362s  (total 10 workers using 18228 MB)
@  3373s  (total 10 workers using 18244 MB)
@  3384s  (total 10 workers using 18264 MB)
@  3395s  (total 10 workers using 18278 MB)
@  3405s  (total 10 workers using 18300 MB)
@  3416s  (total 10 workers using 18315 MB)
@  3427s  (total 10 workers using 18415 MB)
@  3438s  (total 10 workers using 18513 MB)
@  3449s  (total 10 workers using 18553 MB)
@  3460s  (total 10 workers using 18667 MB)
@  3471s  (total 10 workers using 18833 MB)
@  3482s  (total 10 workers using 18857 MB)
@  3493s  (total 10 workers using 18926 MB)
@  3504s  (total 10 workers using 19029 MB)
@  3514s  (total 10 workers using 19040 MB)
@  3525s  (total 10 workers using 19129 MB)
@  3536s  (total 10 workers using 19134 MB)
@  3547s  (total 10 workers using 19253 MB)
@  3554s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3554s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3556s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3558s  (total 2 workers using 3830 MB)
@  3568s  (total 2 workers using 3830 MB)
@  3572s  (stopping all workers)
@  3572s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3572s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3572s  (copied results from worker 0 in /tmp//pr_test)
@  3572s  [0;30;47m(proof race finished with answer unknown in 3572.46 seconds)[m
unknown
c done
