c host: c3n02
c start: Fri Oct 18 19:40:31 CEST 2019
c arrayjobid: 17567256
c jobid: 17567385
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/data-integrity/unsafe/shift_register_top_w64_d128_e0.btor2
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567385.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 1396)
@     0s  (started worker 1 with pid 1397)
@     0s  (started worker 2 with pid 1398)
@     0s  (started worker 3 with pid 1399)
@     0s  (started worker 4 with pid 1400)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 1518)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 322 MB)
@     2s  (started worker 6 with pid 1576)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 488 MB)
@     3s  (started worker 7 with pid 1636)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 661 MB)
@     4s  (started worker 8 with pid 1707)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 756 MB)
@     5s  (started worker 9 with pid 1799)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 956 MB)
@     6s  (started worker 10 with pid 1880)
@     6s  (spawned 1 workers)
@     6s  (total 11 workers using 1194 MB)
@    15s  (total 11 workers using 1800 MB)
@    27s  (total 11 workers using 2169 MB)
@    38s  (total 11 workers using 2383 MB)
@    50s  (total 11 workers using 2588 MB)
@    61s  (total 11 workers using 2778 MB)
@    72s  (total 11 workers using 3061 MB)
@    83s  (total 11 workers using 3291 MB)
@    95s  (total 11 workers using 3543 MB)
@   105s  (total 11 workers using 3612 MB)
@   117s  (total 11 workers using 3753 MB)
@   128s  (total 11 workers using 3870 MB)
@   139s  (total 11 workers using 3982 MB)
@   150s  (total 11 workers using 4298 MB)
@   161s  (total 11 workers using 4384 MB)
@   172s  (total 11 workers using 4488 MB)
@   183s  (total 11 workers using 4633 MB)
@   194s  (total 11 workers using 4968 MB)
@   205s  (total 11 workers using 5029 MB)
@   216s  (total 11 workers using 5070 MB)
@   227s  (total 11 workers using 5203 MB)
@   238s  (total 11 workers using 5442 MB)
@   249s  (total 11 workers using 5612 MB)
@   260s  (total 11 workers using 5700 MB)
@   271s  (total 11 workers using 5819 MB)
@   282s  (total 11 workers using 6027 MB)
@   294s  (total 11 workers using 6074 MB)
@   304s  (total 11 workers using 6162 MB)
@   316s  (total 11 workers using 6200 MB)
@   326s  (total 11 workers using 6683 MB)
@   338s  (total 11 workers using 6736 MB)
@   349s  (total 11 workers using 6776 MB)
@   360s  (total 11 workers using 6804 MB)
@   371s  (total 11 workers using 6950 MB)
@   382s  (total 11 workers using 7226 MB)
@   393s  (total 11 workers using 7571 MB)
@   404s  (total 11 workers using 7555 MB)
@   415s  (total 11 workers using 7611 MB)
@   426s  (total 11 workers using 7724 MB)
@   437s  (total 11 workers using 7774 MB)
@   448s  (total 11 workers using 7767 MB)
@   459s  (total 11 workers using 7831 MB)
@   470s  (total 11 workers using 8291 MB)
@   481s  (total 11 workers using 8347 MB)
@   492s  (total 11 workers using 8557 MB)
@   503s  (total 11 workers using 8708 MB)
@   514s  (total 11 workers using 8893 MB)
@   525s  (total 11 workers using 8894 MB)
@   537s  (total 11 workers using 8927 MB)
@   548s  (total 11 workers using 9037 MB)
@   559s  (total 11 workers using 9111 MB)
@   570s  (total 11 workers using 9151 MB)
@   581s  (total 11 workers using 9211 MB)
@   592s  (total 11 workers using 9277 MB)
@   603s  (total 11 workers using 9394 MB)
@   614s  (total 11 workers using 9611 MB)
@   625s  (total 11 workers using 9930 MB)
@   636s  (total 11 workers using 9978 MB)
@   647s  (total 11 workers using 10111 MB)
@   658s  (total 11 workers using 10494 MB)
@   669s  (total 11 workers using 10615 MB)
@   678s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@   680s  (total 10 workers using 9771 MB)
@   691s  (total 10 workers using 9763 MB)
@   702s  (total 10 workers using 9821 MB)
@   713s  (total 10 workers using 9982 MB)
@   724s  (total 10 workers using 9962 MB)
@   735s  (total 10 workers using 10039 MB)
@   746s  (total 10 workers using 10052 MB)
@   757s  (total 10 workers using 10268 MB)
@   768s  (total 10 workers using 10550 MB)
@   779s  (total 10 workers using 10817 MB)
@   790s  (total 10 workers using 10822 MB)
@   801s  (total 10 workers using 10860 MB)
@   812s  (total 10 workers using 10835 MB)
@   823s  (total 10 workers using 10999 MB)
@   834s  (total 10 workers using 11042 MB)
@   845s  (total 10 workers using 11105 MB)
@   855s  (total 10 workers using 11305 MB)
@   866s  (total 10 workers using 11314 MB)
@   877s  (total 10 workers using 11350 MB)
@   888s  (total 10 workers using 11496 MB)
@   899s  (total 10 workers using 11657 MB)
@   910s  (total 10 workers using 11744 MB)
@   921s  (total 10 workers using 12064 MB)
@   932s  (total 10 workers using 12518 MB)
@   943s  (total 10 workers using 12614 MB)
@   954s  (total 10 workers using 12711 MB)
@   965s  (total 10 workers using 12780 MB)
@   976s  (total 10 workers using 12813 MB)
@   986s  (total 10 workers using 12900 MB)
@   998s  (total 10 workers using 12914 MB)
@  1008s  (total 10 workers using 13022 MB)
@  1019s  (total 10 workers using 13296 MB)
@  1030s  (total 10 workers using 13287 MB)
@  1041s  (total 10 workers using 13375 MB)
@  1052s  (total 10 workers using 13493 MB)
@  1063s  (total 10 workers using 13562 MB)
@  1074s  (total 10 workers using 13907 MB)
@  1085s  (total 10 workers using 13938 MB)
@  1096s  (total 10 workers using 13980 MB)
@  1107s  (total 10 workers using 14010 MB)
@  1118s  (total 10 workers using 14021 MB)
@  1129s  (total 10 workers using 14074 MB)
@  1139s  (total 10 workers using 14725 MB)
@  1151s  (total 10 workers using 14753 MB)
@  1161s  (total 10 workers using 15095 MB)
@  1172s  (total 10 workers using 15149 MB)
@  1183s  (total 10 workers using 15237 MB)
@  1194s  (total 10 workers using 15267 MB)
@  1205s  (total 10 workers using 15284 MB)
@  1216s  (total 10 workers using 15331 MB)
@  1227s  (total 10 workers using 15351 MB)
@  1238s  (total 10 workers using 15392 MB)
@  1249s  (total 10 workers using 15396 MB)
@  1260s  (total 10 workers using 15487 MB)
@  1271s  (total 10 workers using 15581 MB)
@  1282s  (total 10 workers using 15689 MB)
@  1292s  (total 10 workers using 16211 MB)
@  1303s  (total 10 workers using 16386 MB)
@  1314s  (total 10 workers using 16454 MB)
@  1325s  (total 10 workers using 16513 MB)
@  1336s  (total 10 workers using 16548 MB)
@  1347s  (total 10 workers using 16538 MB)
@  1358s  (total 10 workers using 16605 MB)
@  1369s  (total 10 workers using 16646 MB)
@  1380s  (total 10 workers using 16711 MB)
@  1391s  (total 10 workers using 16822 MB)
@  1402s  (total 10 workers using 16897 MB)
@  1413s  (total 10 workers using 17027 MB)
@  1423s  (total 10 workers using 17203 MB)
@  1434s  (total 10 workers using 17367 MB)
@  1445s  (total 10 workers using 17621 MB)
@  1456s  (total 10 workers using 17741 MB)
@  1467s  (total 10 workers using 17861 MB)
@  1478s  (total 10 workers using 18357 MB)
@  1479s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  1489s  (total 9 workers using 11019 MB)
@  1500s  (total 9 workers using 11046 MB)
@  1510s  (total 9 workers using 11034 MB)
@  1521s  (total 9 workers using 10999 MB)
@  1532s  (total 9 workers using 11039 MB)
@  1543s  (total 9 workers using 11089 MB)
@  1554s  (total 9 workers using 11209 MB)
@  1565s  (total 9 workers using 11300 MB)
@  1575s  (total 9 workers using 11372 MB)
@  1586s  (total 9 workers using 11418 MB)
@  1597s  (total 9 workers using 11456 MB)
@  1608s  (total 9 workers using 11512 MB)
@  1619s  (total 9 workers using 11614 MB)
@  1630s  (total 9 workers using 11877 MB)
@  1640s  (total 9 workers using 11887 MB)
@  1651s  (total 9 workers using 11914 MB)
@  1662s  (total 9 workers using 11932 MB)
@  1673s  (total 9 workers using 11966 MB)
@  1684s  (total 9 workers using 12008 MB)
@  1695s  (total 9 workers using 12135 MB)
@  1705s  (total 9 workers using 12154 MB)
@  1716s  (total 9 workers using 12189 MB)
@  1727s  (total 9 workers using 12369 MB)
@  1738s  (total 9 workers using 12411 MB)
@  1749s  (total 9 workers using 12471 MB)
@  1760s  (total 9 workers using 12546 MB)
@  1770s  (total 9 workers using 12582 MB)
@  1781s  (total 9 workers using 12762 MB)
@  1792s  (total 9 workers using 12819 MB)
@  1803s  (total 9 workers using 12877 MB)
@  1814s  (total 9 workers using 13008 MB)
@  1824s  (total 9 workers using 13029 MB)
@  1835s  (total 9 workers using 13156 MB)
@  1846s  (total 9 workers using 13183 MB)
@  1857s  (total 9 workers using 13228 MB)
@  1868s  (total 9 workers using 13236 MB)
@  1878s  (total 9 workers using 13574 MB)
@  1889s  (total 9 workers using 13631 MB)
@  1900s  (total 9 workers using 13649 MB)
@  1911s  (total 9 workers using 13672 MB)
@  1922s  (total 9 workers using 13705 MB)
@  1933s  (total 9 workers using 13763 MB)
@  1943s  (total 9 workers using 13810 MB)
@  1954s  (total 9 workers using 13840 MB)
@  1965s  (total 9 workers using 13896 MB)
@  1976s  (total 9 workers using 13947 MB)
@  1987s  (total 9 workers using 13994 MB)
@  1998s  (total 9 workers using 14092 MB)
@  2008s  (total 9 workers using 14062 MB)
@  2019s  (total 9 workers using 14137 MB)
@  2030s  (total 9 workers using 14205 MB)
@  2041s  (total 9 workers using 14245 MB)
@  2052s  (total 9 workers using 14333 MB)
@  2063s  (total 9 workers using 14348 MB)
@  2073s  (total 9 workers using 14398 MB)
@  2084s  (total 9 workers using 14483 MB)
@  2095s  (total 9 workers using 14630 MB)
@  2106s  (total 9 workers using 15152 MB)
@  2117s  (total 9 workers using 15179 MB)
@  2128s  (total 9 workers using 15220 MB)
@  2138s  (total 9 workers using 15258 MB)
@  2149s  (total 9 workers using 15336 MB)
@  2160s  (total 9 workers using 15472 MB)
@  2171s  (total 9 workers using 15580 MB)
@  2182s  (total 9 workers using 15636 MB)
@  2193s  (total 9 workers using 15690 MB)
@  2203s  (total 9 workers using 15775 MB)
@  2214s  (total 9 workers using 15802 MB)
@  2225s  (total 9 workers using 15870 MB)
@  2236s  (total 9 workers using 15839 MB)
@  2247s  (total 9 workers using 15867 MB)
@  2258s  (total 9 workers using 15897 MB)
@  2268s  (total 9 workers using 15978 MB)
@  2279s  (total 9 workers using 15982 MB)
@  2290s  (total 9 workers using 16047 MB)
@  2301s  (total 9 workers using 16097 MB)
@  2312s  (total 9 workers using 16080 MB)
@  2322s  (total 9 workers using 16107 MB)
@  2333s  (total 9 workers using 16133 MB)
@  2344s  (total 9 workers using 16170 MB)
@  2355s  (total 9 workers using 16204 MB)
@  2366s  (total 9 workers using 16237 MB)
@  2376s  (total 9 workers using 16287 MB)
@  2387s  (total 9 workers using 16490 MB)
@  2398s  (total 9 workers using 16538 MB)
@  2409s  (total 9 workers using 16573 MB)
@  2420s  (total 9 workers using 16609 MB)
@  2431s  (total 9 workers using 16642 MB)
@  2441s  (total 9 workers using 16683 MB)
@  2452s  (total 9 workers using 16720 MB)
@  2463s  (total 9 workers using 16794 MB)
@  2474s  (total 9 workers using 16783 MB)
@  2485s  (total 9 workers using 16829 MB)
@  2495s  (total 9 workers using 16868 MB)
@  2506s  (total 9 workers using 16902 MB)
@  2517s  (total 9 workers using 16996 MB)
@  2528s  (total 9 workers using 17047 MB)
@  2539s  (total 9 workers using 17173 MB)
@  2549s  (total 9 workers using 17231 MB)
@  2560s  (total 9 workers using 17288 MB)
@  2571s  (total 9 workers using 17359 MB)
@  2582s  (total 9 workers using 17364 MB)
@  2593s  (total 9 workers using 17375 MB)
@  2604s  (total 9 workers using 17450 MB)
@  2614s  (total 9 workers using 17460 MB)
@  2625s  (total 9 workers using 17505 MB)
@  2636s  (total 9 workers using 17505 MB)
@  2647s  (total 9 workers using 17519 MB)
@  2657s  (total 9 workers using 17554 MB)
@  2668s  (total 9 workers using 17574 MB)
@  2679s  (total 9 workers using 17612 MB)
@  2690s  (total 9 workers using 17623 MB)
@  2701s  (total 9 workers using 17671 MB)
@  2712s  (total 9 workers using 17755 MB)
@  2722s  (total 9 workers using 17768 MB)
@  2733s  (total 9 workers using 17778 MB)
@  2744s  (total 9 workers using 17814 MB)
@  2755s  (total 9 workers using 17860 MB)
@  2765s  (total 9 workers using 17994 MB)
@  2776s  (total 9 workers using 18039 MB)
@  2787s  (total 9 workers using 18075 MB)
@  2798s  (total 9 workers using 18087 MB)
@  2809s  (total 9 workers using 18158 MB)
@  2820s  (total 9 workers using 18161 MB)
@  2830s  (total 9 workers using 18165 MB)
@  2841s  (total 9 workers using 18172 MB)
@  2852s  (total 9 workers using 18240 MB)
@  2863s  (total 9 workers using 18234 MB)
@  2874s  (total 9 workers using 18271 MB)
@  2884s  (total 9 workers using 18312 MB)
@  2895s  (total 9 workers using 18325 MB)
@  2906s  (total 9 workers using 18317 MB)
@  2917s  (total 9 workers using 18339 MB)
@  2928s  (total 9 workers using 18346 MB)
@  2938s  (total 9 workers using 18366 MB)
@  2949s  (total 9 workers using 18379 MB)
@  2960s  (total 9 workers using 18399 MB)
@  2971s  (total 9 workers using 18411 MB)
@  2982s  (total 9 workers using 18466 MB)
@  2993s  (total 9 workers using 18486 MB)
@  3003s  (total 9 workers using 18513 MB)
@  3014s  (total 9 workers using 18593 MB)
@  3025s  (total 9 workers using 18606 MB)
@  3036s  (total 9 workers using 18642 MB)
@  3046s  (total 9 workers using 18617 MB)
@  3057s  (total 9 workers using 18662 MB)
@  3068s  (total 9 workers using 18675 MB)
@  3079s  (total 9 workers using 18687 MB)
@  3090s  (total 9 workers using 18735 MB)
@  3101s  (total 9 workers using 18729 MB)
@  3111s  (total 9 workers using 18813 MB)
@  3122s  (total 9 workers using 18835 MB)
@  3133s  (total 9 workers using 18865 MB)
@  3144s  (total 9 workers using 18862 MB)
@  3155s  (total 9 workers using 18899 MB)
@  3165s  (total 9 workers using 18875 MB)
@  3176s  (total 9 workers using 18873 MB)
@  3187s  (total 9 workers using 18924 MB)
@  3198s  (total 9 workers using 18976 MB)
@  3209s  (total 9 workers using 19043 MB)
@  3219s  (total 9 workers using 19011 MB)
@  3230s  (total 9 workers using 19008 MB)
@  3241s  (total 9 workers using 19027 MB)
@  3252s  (total 9 workers using 19023 MB)
@  3263s  (total 9 workers using 19009 MB)
@  3274s  (total 9 workers using 19041 MB)
@  3284s  (total 9 workers using 19044 MB)
@  3295s  (total 9 workers using 19067 MB)
@  3306s  (total 9 workers using 19122 MB)
@  3317s  (total 9 workers using 19023 MB)
@  3328s  (total 9 workers using 19064 MB)
@  3339s  (total 9 workers using 19109 MB)
@  3349s  (total 9 workers using 19190 MB)
@  3360s  (total 9 workers using 19247 MB)
@  3371s  (total 9 workers using 19347 MB)
@  3382s  (total 9 workers using 19462 MB)
@  3393s  (total 9 workers using 19502 MB)
@  3403s  (total 9 workers using 19512 MB)
@  3414s  (total 9 workers using 19542 MB)
@  3425s  (total 9 workers using 19527 MB)
@  3436s  (total 9 workers using 19565 MB)
@  3447s  (total 9 workers using 19548 MB)
@  3457s  (total 9 workers using 19598 MB)
@  3468s  (total 9 workers using 19646 MB)
@  3479s  (total 9 workers using 19692 MB)
@  3490s  (total 9 workers using 19825 MB)
@  3501s  (total 9 workers using 19861 MB)
@  3512s  (total 9 workers using 19889 MB)
@  3522s  (total 9 workers using 19933 MB)
@  3533s  (total 9 workers using 19958 MB)
@  3544s  (total 9 workers using 20027 MB)
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3554s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3555s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3555s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3555s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3555s  (total 2 workers using 5892 MB)
@  3555s  (worker 2 finished with result unknown) python3 avr.py
@  3565s  (total 1 workers using 5892 MB)
@  3575s  (stopping all workers)
@  3575s  (total 1 workers using 0 MB)
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.13 seconds)[m
unknown
c done
