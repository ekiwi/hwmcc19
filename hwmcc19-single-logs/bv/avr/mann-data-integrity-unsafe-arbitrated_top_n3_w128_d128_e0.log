c host: c3n16
c start: Fri Oct 18 18:45:00 CEST 2019
c arrayjobid: 17567256
c jobid: 17567359
c benchmark: /home/mathias/hwmcc19/benchmarks-single/btor2/mann/data-integrity/unsafe/arbitrated_top_n3_w128_d128_e0.btor2
c solver: ./run-avr.sh
c solver options: 
c tmpdir: /tmp/slurm.17567359.0
AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /tmp//pr_test)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 5939)
@     0s  (started worker 1 with pid 5940)
@     0s  (started worker 2 with pid 5941)
@     0s  (started worker 3 with pid 5942)
@     0s  (started worker 4 with pid 5943)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 6059)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 549 MB)
@     2s  (started worker 6 with pid 6115)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 786 MB)
@     3s  (started worker 7 with pid 6177)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 1179 MB)
@     4s  (started worker 8 with pid 6243)
@     4s  (spawned 1 workers)
@     4s  (total 9 workers using 1527 MB)
@     5s  (started worker 9 with pid 6333)
@     5s  (spawned 1 workers)
@     5s  (total 10 workers using 1682 MB)
@     7s  (started worker 10 with pid 6413)
@     7s  (spawned 1 workers)
@     7s  (total 11 workers using 1865 MB)
@    15s  (total 11 workers using 4211 MB)
@    27s  (total 11 workers using 5194 MB)
@    39s  (total 11 workers using 6149 MB)
@    50s  (total 11 workers using 6395 MB)
@    61s  (total 11 workers using 6582 MB)
@    73s  (total 11 workers using 6772 MB)
@    84s  (total 11 workers using 6833 MB)
@    95s  (total 11 workers using 6978 MB)
@   106s  (total 11 workers using 7040 MB)
@   117s  (total 11 workers using 7089 MB)
@   128s  (total 11 workers using 7208 MB)
@   139s  (total 11 workers using 7432 MB)
@   150s  (total 11 workers using 7439 MB)
@   155s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@   161s  (total 10 workers using 6778 MB)
@   172s  (total 10 workers using 6879 MB)
@   183s  (total 10 workers using 6932 MB)
@   194s  (total 10 workers using 7000 MB)
@   205s  (total 10 workers using 7001 MB)
@   216s  (total 10 workers using 7140 MB)
@   227s  (total 10 workers using 7006 MB)
@   238s  (total 10 workers using 7038 MB)
@   249s  (total 10 workers using 7059 MB)
@   260s  (total 10 workers using 7173 MB)
@   271s  (total 10 workers using 7175 MB)
@   282s  (total 10 workers using 7330 MB)
@   293s  (total 10 workers using 7349 MB)
@   303s  (total 10 workers using 7438 MB)
@   315s  (total 10 workers using 7406 MB)
@   325s  (total 10 workers using 7408 MB)
@   336s  (total 10 workers using 7408 MB)
@   347s  (total 10 workers using 7725 MB)
@   358s  (total 10 workers using 7857 MB)
@   369s  (total 10 workers using 7813 MB)
@   380s  (total 10 workers using 7642 MB)
@   391s  (total 10 workers using 7651 MB)
@   402s  (total 10 workers using 7659 MB)
@   413s  (total 10 workers using 7791 MB)
@   424s  (total 10 workers using 7791 MB)
@   435s  (total 10 workers using 7871 MB)
@   446s  (total 10 workers using 7922 MB)
@   457s  (total 10 workers using 7844 MB)
@   468s  (total 10 workers using 7884 MB)
@   479s  (total 10 workers using 7893 MB)
@   490s  (total 10 workers using 7958 MB)
@   501s  (total 10 workers using 7963 MB)
@   512s  (total 10 workers using 7970 MB)
@   522s  (total 10 workers using 8014 MB)
@   534s  (total 10 workers using 8125 MB)
@   544s  (total 10 workers using 8131 MB)
@   555s  (total 10 workers using 8172 MB)
@   566s  (total 10 workers using 8169 MB)
@   577s  (total 10 workers using 8173 MB)
@   588s  (total 10 workers using 8177 MB)
@   599s  (total 10 workers using 8181 MB)
@   610s  (total 10 workers using 8187 MB)
@   621s  (total 10 workers using 8191 MB)
@   632s  (total 10 workers using 8549 MB)
@   643s  (total 10 workers using 8566 MB)
@   654s  (total 10 workers using 8614 MB)
@   665s  (total 10 workers using 8657 MB)
@   676s  (total 10 workers using 8669 MB)
@   687s  (total 10 workers using 8748 MB)
@   698s  (total 10 workers using 8753 MB)
@   709s  (total 10 workers using 8778 MB)
@   720s  (total 10 workers using 8850 MB)
@   731s  (total 10 workers using 8794 MB)
@   742s  (total 10 workers using 8798 MB)
@   753s  (total 10 workers using 8780 MB)
@   763s  (total 10 workers using 8816 MB)
@   775s  (total 10 workers using 8842 MB)
@   785s  (total 10 workers using 8978 MB)
@   796s  (total 10 workers using 9419 MB)
@   807s  (total 10 workers using 9448 MB)
@   818s  (total 10 workers using 9452 MB)
@   829s  (total 10 workers using 9339 MB)
@   840s  (total 10 workers using 9346 MB)
@   851s  (total 10 workers using 9362 MB)
@   862s  (total 10 workers using 9438 MB)
@   873s  (total 10 workers using 9381 MB)
@   884s  (total 10 workers using 9387 MB)
@   895s  (total 10 workers using 9003 MB)
@   906s  (total 10 workers using 9025 MB)
@   917s  (total 10 workers using 9038 MB)
@   928s  (total 10 workers using 9087 MB)
@   938s  (total 10 workers using 9100 MB)
@   949s  (total 10 workers using 9106 MB)
@   960s  (total 10 workers using 9122 MB)
@   971s  (total 10 workers using 9144 MB)
@   982s  (total 10 workers using 9169 MB)
@   993s  (total 10 workers using 9161 MB)
@  1004s  (total 10 workers using 9166 MB)
@  1015s  (total 10 workers using 9180 MB)
@  1026s  (total 10 workers using 9195 MB)
@  1037s  (total 10 workers using 9692 MB)
@  1048s  (total 10 workers using 9725 MB)
@  1059s  (total 10 workers using 9731 MB)
@  1070s  (total 10 workers using 9892 MB)
@  1081s  (total 10 workers using 9899 MB)
@  1092s  (total 10 workers using 9906 MB)
@  1103s  (total 10 workers using 9972 MB)
@  1113s  (total 10 workers using 9879 MB)
@  1124s  (total 10 workers using 9751 MB)
@  1135s  (total 10 workers using 9773 MB)
@  1146s  (total 10 workers using 9423 MB)
@  1157s  (total 10 workers using 9423 MB)
@  1168s  (total 10 workers using 9443 MB)
@  1179s  (total 10 workers using 9445 MB)
@  1190s  (total 10 workers using 9473 MB)
@  1201s  (total 10 workers using 9474 MB)
@  1212s  (total 10 workers using 9474 MB)
@  1222s  (total 10 workers using 9454 MB)
@  1234s  (total 10 workers using 9458 MB)
@  1244s  (total 10 workers using 9458 MB)
@  1255s  (total 10 workers using 9458 MB)
@  1266s  (total 10 workers using 9957 MB)
@  1277s  (total 10 workers using 9957 MB)
@  1288s  (total 10 workers using 9957 MB)
@  1299s  (total 10 workers using 10018 MB)
@  1310s  (total 10 workers using 10016 MB)
@  1321s  (total 10 workers using 10008 MB)
@  1332s  (total 10 workers using 10113 MB)
@  1343s  (total 10 workers using 10084 MB)
@  1353s  (total 10 workers using 10013 MB)
@  1364s  (total 10 workers using 9573 MB)
@  1375s  (total 10 workers using 9660 MB)
@  1386s  (total 10 workers using 9678 MB)
@  1397s  (total 10 workers using 9678 MB)
@  1408s  (total 10 workers using 9878 MB)
@  1419s  (total 10 workers using 9901 MB)
@  1430s  (total 10 workers using 9903 MB)
@  1441s  (total 10 workers using 9904 MB)
@  1452s  (total 10 workers using 9904 MB)
@  1462s  (total 10 workers using 9763 MB)
@  1473s  (total 10 workers using 10330 MB)
@  1484s  (total 10 workers using 10303 MB)
@  1495s  (total 10 workers using 10306 MB)
@  1506s  (total 10 workers using 10280 MB)
@  1517s  (total 10 workers using 9827 MB)
@  1528s  (total 10 workers using 9822 MB)
@  1539s  (total 10 workers using 9822 MB)
@  1550s  (total 10 workers using 9820 MB)
@  1561s  (total 10 workers using 9759 MB)
@  1572s  (total 10 workers using 9782 MB)
@  1583s  (total 10 workers using 9782 MB)
@  1593s  (total 10 workers using 9801 MB)
@  1604s  (total 10 workers using 9801 MB)
@  1615s  (total 10 workers using 9820 MB)
@  1626s  (total 10 workers using 9820 MB)
@  1637s  (total 10 workers using 10327 MB)
@  1648s  (total 10 workers using 10327 MB)
@  1659s  (total 10 workers using 10341 MB)
@  1670s  (total 10 workers using 10303 MB)
@  1681s  (total 10 workers using 10299 MB)
@  1692s  (total 10 workers using 10300 MB)
@  1702s  (total 10 workers using 10300 MB)
@  1713s  (total 10 workers using 10303 MB)
@  1724s  (total 10 workers using 10301 MB)
@  1735s  (total 10 workers using 10304 MB)
@  1746s  (total 10 workers using 9940 MB)
@  1757s  (total 10 workers using 9979 MB)
@  1768s  (total 10 workers using 10177 MB)
@  1779s  (total 10 workers using 10194 MB)
@  1790s  (total 10 workers using 10194 MB)
@  1801s  (total 10 workers using 10223 MB)
@  1811s  (total 10 workers using 10223 MB)
@  1823s  (total 10 workers using 10087 MB)
@  1833s  (total 10 workers using 10087 MB)
@  1844s  (total 10 workers using 10376 MB)
@  1855s  (total 10 workers using 10531 MB)
@  1866s  (total 10 workers using 10515 MB)
@  1877s  (total 10 workers using 10610 MB)
@  1888s  (total 10 workers using 10645 MB)
@  1899s  (total 10 workers using 11185 MB)
@  1910s  (total 10 workers using 11139 MB)
@  1921s  (total 10 workers using 11133 MB)
@  1932s  (total 10 workers using 11150 MB)
@  1942s  (total 10 workers using 11170 MB)
@  1953s  (total 10 workers using 11232 MB)
@  1964s  (total 10 workers using 11237 MB)
@  1975s  (total 10 workers using 11237 MB)
@  1986s  (total 10 workers using 11278 MB)
@  1997s  (total 10 workers using 11279 MB)
@  2008s  (total 10 workers using 11279 MB)
@  2019s  (total 10 workers using 10934 MB)
@  2030s  (total 10 workers using 10934 MB)
@  2041s  (total 10 workers using 10934 MB)
@  2051s  (total 10 workers using 10904 MB)
@  2062s  (total 10 workers using 11116 MB)
@  2073s  (total 10 workers using 11171 MB)
@  2084s  (total 10 workers using 11178 MB)
@  2095s  (total 10 workers using 11184 MB)
@  2106s  (total 10 workers using 11021 MB)
@  2117s  (total 10 workers using 11033 MB)
@  2128s  (total 10 workers using 11033 MB)
@  2139s  (total 10 workers using 11049 MB)
@  2150s  (total 10 workers using 11560 MB)
@  2161s  (total 10 workers using 11601 MB)
@  2172s  (total 10 workers using 11601 MB)
@  2182s  (total 10 workers using 11602 MB)
@  2193s  (total 10 workers using 11602 MB)
@  2204s  (total 10 workers using 11602 MB)
@  2215s  (total 10 workers using 11604 MB)
@  2226s  (total 10 workers using 11660 MB)
@  2237s  (total 10 workers using 11668 MB)
@  2248s  (total 10 workers using 11772 MB)
@  2259s  (total 10 workers using 11797 MB)
@  2270s  (total 10 workers using 11794 MB)
@  2281s  (total 10 workers using 11794 MB)
@  2291s  (total 10 workers using 11794 MB)
@  2302s  (total 10 workers using 11797 MB)
@  2313s  (total 10 workers using 11827 MB)
@  2324s  (total 10 workers using 11827 MB)
@  2335s  (total 10 workers using 11510 MB)
@  2346s  (total 10 workers using 11486 MB)
@  2357s  (total 10 workers using 11486 MB)
@  2368s  (total 10 workers using 11486 MB)
@  2379s  (total 10 workers using 11486 MB)
@  2390s  (total 10 workers using 11481 MB)
@  2400s  (total 10 workers using 11443 MB)
@  2412s  (total 10 workers using 11444 MB)
@  2422s  (total 10 workers using 11444 MB)
@  2433s  (total 10 workers using 11444 MB)
@  2444s  (total 10 workers using 11444 MB)
@  2455s  (total 10 workers using 11430 MB)
@  2466s  (total 10 workers using 11430 MB)
@  2477s  (total 10 workers using 11926 MB)
@  2488s  (total 10 workers using 11926 MB)
@  2499s  (total 10 workers using 11926 MB)
@  2510s  (total 10 workers using 11993 MB)
@  2521s  (total 10 workers using 12029 MB)
@  2531s  (total 10 workers using 12029 MB)
@  2542s  (total 10 workers using 12029 MB)
@  2553s  (total 10 workers using 12029 MB)
@  2564s  (total 10 workers using 12038 MB)
@  2575s  (total 10 workers using 12123 MB)
@  2586s  (total 10 workers using 12224 MB)
@  2597s  (total 10 workers using 12075 MB)
@  2608s  (total 10 workers using 12077 MB)
@  2619s  (total 10 workers using 12078 MB)
@  2630s  (total 10 workers using 12113 MB)
@  2640s  (total 10 workers using 12114 MB)
@  2651s  (total 10 workers using 12085 MB)
@  2662s  (total 10 workers using 12085 MB)
@  2673s  (total 10 workers using 12161 MB)
@  2684s  (total 10 workers using 12082 MB)
@  2695s  (total 10 workers using 12085 MB)
@  2706s  (total 10 workers using 11760 MB)
@  2717s  (total 10 workers using 11770 MB)
@  2728s  (total 10 workers using 11791 MB)
@  2739s  (total 10 workers using 11834 MB)
@  2749s  (total 10 workers using 11834 MB)
@  2760s  (total 10 workers using 11822 MB)
@  2771s  (total 10 workers using 11822 MB)
@  2782s  (total 10 workers using 11834 MB)
@  2793s  (total 10 workers using 11831 MB)
@  2804s  (total 10 workers using 11831 MB)
@  2815s  (total 10 workers using 12453 MB)
@  2826s  (total 10 workers using 12354 MB)
@  2837s  (total 10 workers using 12354 MB)
@  2848s  (total 10 workers using 12532 MB)
@  2858s  (total 10 workers using 12569 MB)
@  2869s  (total 10 workers using 12568 MB)
@  2880s  (total 10 workers using 12578 MB)
@  2891s  (total 10 workers using 12582 MB)
@  2902s  (total 10 workers using 12427 MB)
@  2913s  (total 10 workers using 12423 MB)
@  2924s  (total 10 workers using 11933 MB)
@  2935s  (total 10 workers using 12208 MB)
@  2946s  (total 10 workers using 12204 MB)
@  2957s  (total 10 workers using 12204 MB)
@  2967s  (total 10 workers using 12169 MB)
@  2978s  (total 10 workers using 12158 MB)
@  2989s  (total 10 workers using 12179 MB)
@  3000s  (total 10 workers using 12179 MB)
@  3011s  (total 10 workers using 12203 MB)
@  3022s  (total 10 workers using 12203 MB)
@  3033s  (total 10 workers using 12266 MB)
@  3044s  (total 10 workers using 12266 MB)
@  3055s  (total 10 workers using 12293 MB)
@  3066s  (total 10 workers using 12293 MB)
@  3076s  (total 10 workers using 12813 MB)
@  3087s  (total 10 workers using 12813 MB)
@  3098s  (total 10 workers using 12813 MB)
@  3109s  (total 10 workers using 12813 MB)
@  3120s  (total 10 workers using 12900 MB)
@  3131s  (total 10 workers using 12867 MB)
@  3142s  (total 10 workers using 12824 MB)
@  3153s  (total 10 workers using 12777 MB)
@  3164s  (total 10 workers using 12777 MB)
@  3175s  (total 10 workers using 12814 MB)
@  3185s  (total 10 workers using 12757 MB)
@  3196s  (total 10 workers using 12747 MB)
@  3207s  (total 10 workers using 12752 MB)
@  3218s  (total 10 workers using 12785 MB)
@  3229s  (total 10 workers using 12785 MB)
@  3240s  (total 10 workers using 12758 MB)
@  3251s  (total 10 workers using 12758 MB)
@  3262s  (total 10 workers using 12758 MB)
@  3273s  (total 10 workers using 12764 MB)
@  3284s  (total 10 workers using 12769 MB)
@  3294s  (total 10 workers using 12769 MB)
@  3305s  (total 10 workers using 12432 MB)
@  3316s  (total 10 workers using 12432 MB)
@  3327s  (total 10 workers using 12432 MB)
@  3338s  (total 10 workers using 12454 MB)
@  3349s  (total 10 workers using 12362 MB)
@  3360s  (total 10 workers using 12394 MB)
@  3371s  (total 10 workers using 12442 MB)
@  3382s  (total 10 workers using 12395 MB)
@  3393s  (total 10 workers using 12395 MB)
@  3403s  (total 10 workers using 12394 MB)
@  3414s  (total 10 workers using 12397 MB)
@  3425s  (total 10 workers using 12397 MB)
@  3436s  (total 10 workers using 12397 MB)
@  3447s  (total 10 workers using 12903 MB)
@  3458s  (total 10 workers using 12917 MB)
@  3469s  (total 10 workers using 12919 MB)
@  3480s  (total 10 workers using 12919 MB)
@  3491s  (total 10 workers using 12919 MB)
@  3502s  (total 10 workers using 12919 MB)
@  3512s  (total 10 workers using 13008 MB)
@  3523s  (total 10 workers using 12884 MB)
@  3534s  (total 10 workers using 12879 MB)
@  3545s  (total 10 workers using 12888 MB)
@  3554s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3554s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3554s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3554s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3555s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3556s  (total 5 workers using 5003 MB)
@  3566s  (total 5 workers using 5003 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 2 finished with result unknown) python3 avr.py
@  3575s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3575s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3575s  (copied results from worker 0 in /tmp//pr_test)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.06 seconds)[m
unknown
c done
